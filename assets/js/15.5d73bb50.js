(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{407:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[t("em",[s._v("字符串")]),s._v("是一系列字符的集合，例如 "),t("code",[s._v('"hello, world"')]),s._v("，"),t("code",[s._v('"albatross"')]),s._v("。Swift 的字符串通过 "),t("code",[s._v("String")]),s._v(" 类型来表示。而 "),t("code",[s._v("String")]),s._v(" 内容的访问方式有多种，例如以 "),t("code",[s._v("Character")]),s._v(" 值的集合。")]),s._v(" "),t("p",[s._v("Swift 的 "),t("code",[s._v("String")]),s._v(" 和 "),t("code",[s._v("Character")]),s._v(" 类型提供了一种快速且兼容 Unicode 的方式来处理代码中的文本内容。创建和操作字符串的语法与 C 语言中字符串操作相似，轻量并且易读。通过 "),t("code",[s._v("+")]),s._v(" 符号就可以非常简单的实现两个字符串的拼接操作。与 Swift 中其他值一样，能否更改字符串的值，取决于其被定义为常量还是变量。你可以在已有字符串中插入常量、变量、字面量和表达式从而形成更长的字符串，这一过程也被称为字符串插值。尤其是在为显示、存储和打印创建自定义字符串值时，字符串插值操作尤其有用。")]),s._v(" "),t("p",[s._v("尽管语法简易，但 Swift 中的 "),t("code",[s._v("String")]),s._v(" 类型的实现却很快速和现代化。每一个字符串都是由编码无关的 Unicode 字符组成，并支持访问字符的多种 Unicode 表示形式。")]),s._v(" "),t("blockquote",[t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("Swift 的 "),t("code",[s._v("String")]),s._v(" 类型与 Foundation "),t("code",[s._v("NSString")]),s._v(" 类进行了无缝桥接。Foundation 还对 "),t("code",[s._v("String")]),s._v(" 进行扩展使其可以访问 "),t("code",[s._v("NSString")]),s._v(" 类型中定义的方法。这意味着调用那些 "),t("code",[s._v("NSString")]),s._v(" 的方法，你无需进行任何类型转换。")]),s._v(" "),t("p",[s._v("更多关于在 Foundation 和 Cocoa 中使用 "),t("code",[s._v("String")]),s._v(" 的信息请查看 "),t("a",{attrs:{href:"https://developer.apple.com/documentation/swift/string#2919514",target:"_blank",rel:"noopener noreferrer"}},[t("em",[s._v("Bridging Between String and NSString")]),t("OutboundLink")],1),s._v("。")])]),s._v(" "),t("h2",{attrs:{id:"字符串字面量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串字面量"}},[s._v("#")]),s._v(" 字符串字面量")]),s._v(" "),t("p",[s._v("你可以在代码里使用一段预定义的字符串值作为字符串字面量。字符串字面量是由一对双引号包裹着的具有固定顺序的字符集。")]),s._v(" "),t("p",[s._v("字符串字面量可以用于为常量和变量提供初始值：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" someString "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Some string literal value"')])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("注意，Swift 之所以推断 "),t("code",[s._v("someString")]),s._v(" 常量为字符串类型，是因为它使用了字面量方式进行初始化。")]),s._v(" "),t("h3",{attrs:{id:"多行字符串字面量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多行字符串字面量"}},[s._v("#")]),s._v(" 多行字符串字面量")]),s._v(" "),t("p",[s._v("如果你需要一个字符串是跨越多行的，那就使用多行字符串字面量 — 由一对三个双引号包裹着的具有固定顺序的文本字符集：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" quotation "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"""\nThe White Rabbit put on his spectacles.  "Where shall I begin,\nplease your Majesty?" he asked.\n\n\n"Begin at the beginning," the King said gravely, "and go on\ntill you come to the end; then stop."\n"""')])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("一个多行字符串字面量包含了所有的在开启和关闭引号（"),t("code",[s._v('"""')]),s._v("）中的行。这个字符从开启引号（"),t("code",[s._v('"""')]),s._v("）之后的第一行开始，到关闭引号（"),t("code",[s._v('"""')]),s._v("）之前为止。这就意味着字符串开启引号之后（"),t("code",[s._v('"""')]),s._v("）或者结束引号（"),t("code",[s._v('"""')]),s._v("）之前都没有换行符号。（译者：下面两个字符串其实是一样的，虽然第二个使用了多行字符串的形式）")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" singleLineString "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"These are the same."')])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" multilineString "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"""\nThese are the same.\n"""')])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("如果你的代码中，多行字符串字面量包含换行符的话，则多行字符串字面量中也会包含换行符。如果你想换行，以便加强代码的可读性，但是你又不想在你的多行字符串字面量中出现换行符的话，你可以用在行尾写一个反斜杠（"),t("code",[s._v("\\")]),s._v("）作为续行符。")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" softWrappedQuotation "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"""\nThe White Rabbit put on his spectacles.  "Where shall I begin, ')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\nplease your Majesty?" he asked.\n\n\n"Begin at the beginning," the King said gravely, "and go on ')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\ntill you come to the end; then stop."\n"""')])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("为了让一个多行字符串字面量开始和结束于换行符，请将换行写在第一行和最后一行，例如：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" lineBreaks "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"""\n\n\nThis string starts with a line break.\nIt also ends with a line break.\n\n\n"""')])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("一个多行字符串字面量能够缩进来匹配周围的代码。关闭引号（"),t("code",[s._v('"""')]),s._v("）之前的空白字符串告诉 Swift 编译器其他各行多少空白字符串需要忽略。然而，如果你在某行的前面写的空白字符串超出了关闭引号（"),t("code",[s._v('"""')]),s._v("）之前的空白字符串，则超出部分将被包含在多行字符串字面量中。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhmbo/static@master/img/20201110182321.png",alt:"img"}})]),s._v(" "),t("p",[s._v("在上面的例子中，尽管整个多行字符串字面量都是缩进的（源代码缩进），第一行和最后一行没有以空白字符串开始（实际的变量值）。中间一行的缩进用空白字符串（源代码缩进）比关闭引号（"),t("code",[s._v('"""')]),s._v("）之前的空白字符串多，所以，它的行首将有4个空格。")]),s._v(" "),t("h3",{attrs:{id:"字符串字面量的特殊字符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串字面量的特殊字符"}},[s._v("#")]),s._v(" 字符串字面量的特殊字符")]),s._v(" "),t("p",[s._v("字符串字面量可以包含以下特殊字符：")]),s._v(" "),t("ul",[t("li",[s._v("转义字符 "),t("code",[s._v("\\0")]),s._v("(空字符)、"),t("code",[s._v("\\\\")]),s._v("(反斜线)、"),t("code",[s._v("\\t")]),s._v("(水平制表符)、"),t("code",[s._v("\\n")]),s._v("(换行符)、"),t("code",[s._v("\\r")]),s._v("(回车符)、"),t("code",[s._v('\\"')]),s._v("(双引号)、"),t("code",[s._v("\\'")]),s._v("(单引号)。")]),s._v(" "),t("li",[s._v("Unicode 标量，写成 "),t("code",[s._v("\\u{n}")]),s._v("(u 为小写)，其中 "),t("code",[s._v("n")]),s._v(" 为任意一到八位十六进制数且可用的 Unicode 位码。")])]),s._v(" "),t("p",[s._v("下面的代码为各种特殊字符的使用示例。 "),t("code",[s._v("wiseWords")]),s._v(" 常量包含了两个双引号。 "),t("code",[s._v("dollarSign")]),s._v("、"),t("code",[s._v("blackHeart")]),s._v(" 和 "),t("code",[s._v("sparklingHeart")]),s._v(" 常量演示了三种不同格式的 Unicode 标量：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" wiseWords "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\"Imagination is more important than knowledge\\" - Einstein"')])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "Imageination is more important than knowledge" - Enistein')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" dollarSign "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\u{24}"')])]),s._v("             "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// $，Unicode 标量 U+0024")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" blackHeart "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\u{2665}"')])]),s._v("           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ♥，Unicode 标量 U+2665")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" sparklingHeart "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\u{1F496}"')])]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 💖，Unicode 标量 U+1F496")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("由于多行字符串字面量使用了三个双引号，而不是一个，所以你可以在多行字符串字面量里直接使用双引号（"),t("code",[s._v('"')]),s._v("）而不必加上转义符（"),t("code",[s._v("\\")]),s._v("）。要在多行字符串字面量中使用 "),t("code",[s._v('"""')]),s._v(" 的话，就需要使用至少一个转义符（"),t("code",[s._v("\\")]),s._v("）：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" threeDoubleQuotes "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"""\nEscaping the first quote \\"""\nEscaping all three quotes \\"\\"\\"\n"""')])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h3",{attrs:{id:"扩展字符串分隔符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#扩展字符串分隔符"}},[s._v("#")]),s._v(" 扩展字符串分隔符")]),s._v(" "),t("p",[s._v("您可以将字符串文字放在扩展分隔符中，这样字符串中的特殊字符将会被直接包含而非转义后的效果。将字符串放在引号（"),t("code",[s._v('"')]),s._v("）中并用数字符号（"),t("code",[s._v("#")]),s._v("）括起来。例如，打印字符串文字 "),t("code",[s._v('#"Line 1 \\nLine 2"#')]),s._v(" 会打印换行符转义序列（"),t("code",[s._v("\\n")]),s._v("）而不是给文字换行。")]),s._v(" "),t("p",[s._v("如果需要字符串文字中字符的特殊效果，请匹配转义字符（"),t("code",[s._v("\\")]),s._v("）后面添加与起始位置个数相匹配的 "),t("code",[s._v("#")]),s._v(" 符。 例如，如果您的字符串是 "),t("code",[s._v('#"Line 1 \\nLine 2"#')]),s._v(" 并且您想要换行，则可以使用 "),t("code",[s._v('#"Line 1 \\#nLine 2"#')]),s._v(" 来代替。 同样，"),t("code",[s._v('###"Line1 \\###nLine2"###')]),s._v(" 也可以实现换行效果。")]),s._v(" "),t("p",[s._v("扩展分隔符创建的字符串文字也可以是多行字符串文字。 您可以使用扩展分隔符在多行字符串中包含文本 "),t("code",[s._v('"""')]),s._v("，覆盖原有的结束文字的默认行为。例如：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" threeMoreDoubleQuotationMarks "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('#"""\nHere are three more double quotes: """\n"""#')])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"初始化空字符串"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始化空字符串"}},[s._v("#")]),s._v(" 初始化空字符串")]),s._v(" "),t("p",[s._v("要创建一个空字符串作为初始值，可以将空的字符串字面量赋值给变量，也可以初始化一个新的 "),t("code",[s._v("String")]),s._v(" 实例：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" emptyString "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')])]),s._v("               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 空字符串字面量")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" anotherEmptyString "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 初始化方法")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 两个字符串均为空并等价。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("你可以通过检查 "),t("code",[s._v("Bool")]),s._v(" 类型的 "),t("code",[s._v("isEmpty")]),s._v(" 属性来判断该字符串是否为空：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" emptyString"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("isEmpty "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Nothing to see here"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印输出：“Nothing to see here”")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"字符串可变性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串可变性"}},[s._v("#")]),s._v(" 字符串可变性")]),s._v(" "),t("p",[s._v("你可以通过将一个特定字符串分配给一个变量来对其进行修改，或者分配给一个常量来保证其不会被修改：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" variableString "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Horse"')])]),s._v("\nvariableString "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" and carriage"')])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// variableString 现在为 "Horse and carriage"')]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" constantString "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Highlander"')])]),s._v("\nconstantString "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" and another Highlander"')])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这会报告一个编译错误（compile-time error） - 常量字符串不可以被修改。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("blockquote",[t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("在 Objective-C 和 Cocoa 中，需要通过选择两个不同的类（"),t("code",[s._v("NSString")]),s._v(" 和 "),t("code",[s._v("NSMutableString")]),s._v("）来指定字符串是否可以被修改。")])]),s._v(" "),t("h2",{attrs:{id:"字符串是值类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串是值类型"}},[s._v("#")]),s._v(" 字符串是值类型")]),s._v(" "),t("p",[s._v("在 Swift 中 "),t("code",[s._v("String")]),s._v(" 类型是"),t("em",[s._v("值类型")]),s._v("。如果你创建了一个新的字符串，那么当其进行常量、变量赋值操作，或在函数/方法中传递时，会进行值拷贝。在前述任一情况下，都会对已有字符串值创建新副本，并对该新副本而非原始字符串进行传递或赋值操作。值类型在 "),t("RouterLink",{attrs:{to:"/pages/0641bb/#结构体和枚举是值类型"}},[s._v("结构体和枚举是值类型")]),s._v(" 中进行了详细描述。")],1),s._v(" "),t("p",[s._v("Swift 默认拷贝字符串的行为保证了在函数/方法向你传递的字符串所属权属于你，无论该值来自于哪里。你可以确信传递的字符串不会被修改，除非你自己去修改它。")]),s._v(" "),t("p",[s._v("在实际编译时，Swift 编译器会优化字符串的使用，使实际的复制只发生在绝对必要的情况下，这意味着你将字符串作为值类型的同时可以获得极高的性能。")]),s._v(" "),t("h2",{attrs:{id:"使用字符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用字符"}},[s._v("#")]),s._v(" 使用字符")]),s._v(" "),t("p",[s._v("你可通过 "),t("code",[s._v("for-in")]),s._v(" 循环来遍历字符串，获取字符串中每一个字符的值：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" character "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Dog!🐶"')])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("character"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// D")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// o")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// g")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// !")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 🐶")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[t("code",[s._v("for-in")]),s._v(" 循环在 "),t("RouterLink",{attrs:{to:"/pages/544cb0/#for-in-循环"}},[s._v("For-In 循环")]),s._v(" 中进行了详细描述。")],1),s._v(" "),t("p",[s._v("另外，通过标明一个 "),t("code",[s._v("Character")]),s._v(" 类型并用字符字面量进行赋值，可以建立一个独立的字符常量或变量：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" exclamationMark"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Character")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"!"')])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("字符串可以通过传递一个值类型为 "),t("code",[s._v("Character")]),s._v(" 的数组作为自变量来初始化：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" catCharacters"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Character")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"t"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"!"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"🐱"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" catString "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("catCharacters"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("catString"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印输出：“Cat!🐱”")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"连接字符串和字符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#连接字符串和字符"}},[s._v("#")]),s._v(" 连接字符串和字符")]),s._v(" "),t("p",[s._v("字符串可以通过加法运算符（"),t("code",[s._v("+")]),s._v("）相加在一起（或称“连接”）创建一个新的字符串：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" string1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" string2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" there"')])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" welcome "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" string1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" string2\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// welcome 现在等于 "hello there"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("你也可以通过加法赋值运算符（"),t("code",[s._v("+=")]),s._v("）将一个字符串添加到一个已经存在字符串变量上：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" instruction "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"look over"')])]),s._v("\ninstruction "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" string2\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// instruction 现在等于 "look over there"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("你可以用 "),t("code",[s._v("append()")]),s._v(" 方法将一个字符附加到一个字符串变量的尾部：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" exclamationMark"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Character")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"!"')])]),s._v("\nwelcome"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("append")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("exclamationMark"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// welcome 现在等于 "hello there!"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("blockquote",[t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("你不能将一个字符串或者字符添加到一个已经存在的字符变量上，因为字符变量只能包含一个字符。")])]),s._v(" "),t("p",[s._v("如果你需要使用多行字符串字面量来拼接字符串，并且你需要字符串每一行都以换行符结尾，包括最后一行：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" badStart "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"""\none\ntwo\n"""')])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" end "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"""\nthree\n"""')])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("badStart "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" end"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印两行:")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// one")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// twothree")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" goodStart "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"""\none\ntwo\n\n\n"""')])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("goodStart "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" end"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印三行:")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// one")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// two")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// three")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br")])]),t("p",[s._v("上面的代码，把 "),t("code",[s._v("badStart")]),s._v(" 和 "),t("code",[s._v("end")]),s._v(" 拼接起来的字符串非我们想要的结果。因为 "),t("code",[s._v("badStart")]),s._v(" 最后一行没有换行符，它与 "),t("code",[s._v("end")]),s._v(" 的第一行结合到了一起。相反的，"),t("code",[s._v("goodStart")]),s._v(" 的每一行都以换行符结尾，所以它与 "),t("code",[s._v("end")]),s._v(" 拼接的字符串总共有三行，正如我们期望的那样。")]),s._v(" "),t("h2",{attrs:{id:"字符串插值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串插值"}},[s._v("#")]),s._v(" 字符串插值")]),s._v(" "),t("p",[t("em",[s._v("字符串插值")]),s._v("是一种构建新字符串的方式，可以在其中包含常量、变量、字面量和表达式。"),t("strong",[s._v("字符串字面量")]),s._v("和"),t("strong",[s._v("多行字符串字面量")]),s._v("都可以使用字符串插值。你插入的字符串字面量的每一项都在以反斜线为前缀的圆括号中：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" multiplier "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" message "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("multiplier")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(" times 2.5 is ")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Double")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("multiplier"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.5")])]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// message 是 "3 times 2.5 is 7.5"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("在上面的例子中，"),t("code",[s._v("multiplier")]),s._v(" 作为 "),t("code",[s._v("\\(multiplier)")]),s._v(" 被插入到一个字符串常量量中。当创建字符串执行插值计算时此占位符会被替换为 "),t("code",[s._v("multiplier")]),s._v(" 实际的值。")]),s._v(" "),t("p",[t("code",[s._v("multiplier")]),s._v(" 的值也作为字符串中后面表达式的一部分。该表达式计算 "),t("code",[s._v("Double(multiplier) * 2.5")]),s._v(" 的值并将结果（"),t("code",[s._v("7.5")]),s._v("）插入到字符串中。在这个例子中，表达式写为 "),t("code",[s._v("\\(Double(multiplier) * 2.5)")]),s._v(" 并包含在字符串字面量中。")]),s._v(" "),t("p",[s._v("你可以使用扩展字符串分隔符创建字符串，来包含不想作为字符串插值处理的字符。例如：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('#"Write an interpolated string in Swift using \\(multiplier)."#')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 打印 "Write an interpolated string in Swift using \\(multiplier)."')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("如果要在使用扩展字符串分隔符的字符串中使用字符串插值，需要在反斜杠后面添加与开头和结尾数量相同扩展字符串分隔符。例如：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('#"6 times 7 is ')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\#(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")])]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('."#')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 打印 "6 times 7 is 42."')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("blockquote",[t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("插值字符串中写在括号中的表达式不能包含非转义反斜杠（"),t("code",[s._v("\\")]),s._v("），并且不能包含回车或换行符。不过，插值字符串可以包含其他字面量。")])]),s._v(" "),t("h2",{attrs:{id:"unicode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unicode"}},[s._v("#")]),s._v(" Unicode")]),s._v(" "),t("p",[t("em",[s._v("Unicode")]),s._v("是一个用于在不同书写系统中对文本进行编码、表示和处理的国际标准。它使你可以用标准格式表示来自任意语言几乎所有的字符，并能够对文本文件或网页这样的外部资源中的字符进行读写操作。Swift 的 "),t("code",[s._v("String")]),s._v(" 和 "),t("code",[s._v("Character")]),s._v(" 类型是完全兼容 Unicode 标准的。")]),s._v(" "),t("h3",{attrs:{id:"unicode-标量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unicode-标量"}},[s._v("#")]),s._v(" Unicode 标量")]),s._v(" "),t("p",[s._v("Swift 的 "),t("code",[s._v("String")]),s._v(" 类型是基于 "),t("em",[s._v("Unicode 标量")]),s._v(" 建立的。Unicode 标量是对应字符或者修饰符的唯一的 21 位数字，例如 "),t("code",[s._v("U+0061")]),s._v(" 表示小写的拉丁字母（"),t("code",[s._v("LATIN SMALL LETTER A")]),s._v('）（"'),t("code",[s._v("a")]),s._v('"），'),t("code",[s._v("U+1F425")]),s._v(" 表示小鸡表情（"),t("code",[s._v("FRONT-FACING BABY CHICK")]),s._v('）（"'),t("code",[s._v("🐥")]),s._v('"）。')]),s._v(" "),t("p",[s._v("请注意，并非所有 21 位 Unicode 标量值都分配给字符，某些标量被保留用于将来分配或用于 UTF-16 编码。已分配的标量值通常也有一个名称，例如上面示例中的 LATIN SMALL LETTER A 和 FRONT-FACING BABY CHICK。")]),s._v(" "),t("h3",{attrs:{id:"可扩展的字形群集"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可扩展的字形群集"}},[s._v("#")]),s._v(" 可扩展的字形群集")]),s._v(" "),t("p",[s._v("每一个 Swift 的 "),t("code",[s._v("Character")]),s._v(" 类型代表一个"),t("em",[s._v("可扩展的字形群")]),s._v("。而一个可扩展的字形群构成了人类可读的单个字符，它由一个或多个（当组合时） Unicode 标量的序列组成。")]),s._v(" "),t("p",[s._v("举个例子，字母 "),t("code",[s._v("é")]),s._v(" 可以用单一的 Unicode 标量 "),t("code",[s._v("é")]),s._v("("),t("code",[s._v("LATIN SMALL LETTER E WITH ACUTE")]),s._v(", 或者 "),t("code",[s._v("U+00E9")]),s._v(")来表示。然而一个标准的字母 "),t("code",[s._v("e")]),s._v("("),t("code",[s._v("LATIN SMALL LETTER E")]),s._v(" 或者 "),t("code",[s._v("U+0065")]),s._v(") 加上一个急促重音（"),t("code",[s._v("COMBINING ACTUE ACCENT")]),s._v("）的标量（"),t("code",[s._v("U+0301")]),s._v("），这样一对标量就表示了同样的字母 "),t("code",[s._v("é")]),s._v("。 这个急促重音的标量形象的将 "),t("code",[s._v("e")]),s._v(" 转换成了 "),t("code",[s._v("é")]),s._v("。")]),s._v(" "),t("p",[s._v("在这两种情况中，字母 "),t("code",[s._v("é")]),s._v(" 代表了一个单一的 Swift 的 "),t("code",[s._v("Character")]),s._v(" 值，同时代表了一个可扩展的字形群。在第一种情况，这个字形群包含一个单一标量；而在第二种情况，它是包含两个标量的字形群：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" eAcute"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Character")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\u{E9}"')])]),s._v("                         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// é")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" combinedEAcute"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Character")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\u{65}\\u{301}"')])]),s._v("          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// e 后面加上  ́")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// eAcute 是 é, combinedEAcute 是 é")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("可扩展的字形集是一个将许多复杂的脚本字符表示为单个字符值的灵活方式。例如，来自朝鲜语字母表的韩语音节能表示为组合或分解的有序排列。在 Swift 都会表示为同一个单一的 "),t("code",[s._v("Character")]),s._v(" 值：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" precomposed"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Character")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\u{D55C}"')])]),s._v("                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 한")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" decomposed"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Character")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\u{1112}\\u{1161}\\u{11AB}"')])]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ᄒ, ᅡ, ᆫ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// precomposed 是 한, decomposed 是 한")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("可拓展的字符群集可以使包围记号（例如 "),t("code",[s._v("COMBINING ENCLOSING CIRCLE")]),s._v(" 或者 "),t("code",[s._v("U+20DD")]),s._v("）的标量包围其他 Unicode 标量，作为一个单一的 "),t("code",[s._v("Character")]),s._v(" 值：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" enclosedEAcute"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Character")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\u{E9}\\u{20DD}"')])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// enclosedEAcute 是 é⃝")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("地域性指示符号的 Unicode 标量可以组合成一个单一的 "),t("code",[s._v("Character")]),s._v(" 值，例如 "),t("code",[s._v("REGIONAL INDICATOR SYMBOL LETTER U")]),s._v("("),t("code",[s._v("U+1F1FA")]),s._v(")和 "),t("code",[s._v("REGIONAL INDICATOR SYMBOL LETTER S")]),s._v("("),t("code",[s._v("U+1F1F8")]),s._v(")：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" regionalIndicatorForUS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Character")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\u{1F1FA}\\u{1F1F8}"')])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// regionalIndicatorForUS 是 🇺🇸")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"计算字符数量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#计算字符数量"}},[s._v("#")]),s._v(" 计算字符数量")]),s._v(" "),t("p",[s._v("如果想要获得一个字符串中 "),t("code",[s._v("Character")]),s._v(" 值的数量，可以使用 "),t("code",[s._v("count")]),s._v(" 属性：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" unusualMenagerie "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Koala 🐨, Snail 🐌, Penguin 🐧, Dromedary 🐪"')])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"unusualMenagerie has ')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("unusualMenagerie"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(' characters"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印输出“unusualMenagerie has 40 characters”")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("注意在 Swift 中，使用可拓展的字符群集作为 "),t("code",[s._v("Character")]),s._v(" 值来连接或改变字符串时，并不一定会更改字符串的字符数量。")]),s._v(" "),t("p",[s._v("例如，如果你用四个字符的单词 "),t("code",[s._v("cafe")]),s._v(" 初始化一个新的字符串，然后添加一个 "),t("code",[s._v("COMBINING ACTUE ACCENT")]),s._v("("),t("code",[s._v("U+0301")]),s._v(")作为字符串的结尾。最终这个字符串的字符数量仍然是 "),t("code",[s._v("4")]),s._v("，因为第四个字符是 "),t("code",[s._v("é")]),s._v("，而不是 "),t("code",[s._v("e")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" word "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cafe"')])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"the number of characters in ')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("word")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(" is ")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("word"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印输出“the number of characters in cafe is 4”")]),s._v("\n\n\nword "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\u{301}"')])]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 拼接一个重音，U+0301")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"the number of characters in ')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("word")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(" is ")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("word"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印输出“the number of characters in café is 4”")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("blockquote",[t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("可扩展的字形群可以由多个 Unicode 标量组成。这意味着不同的字符以及相同字符的不同表示方式可能需要不同数量的内存空间来存储。所以 Swift 中的字符在一个字符串中并不一定占用相同的内存空间数量。因此在没有获取字符串的可扩展的字符群的范围时候，就不能计算出字符串的字符数量。如果你正在处理一个长字符串，需要注意 "),t("code",[s._v("count")]),s._v(" 属性必须遍历全部的 Unicode 标量，来确定字符串的字符数量。")]),s._v(" "),t("p",[s._v("另外需要注意的是通过 "),t("code",[s._v("count")]),s._v(" 属性返回的字符数量并不总是与包含相同字符的 "),t("code",[s._v("NSString")]),s._v(" 的 "),t("code",[s._v("length")]),s._v(" 属性相同。"),t("code",[s._v("NSString")]),s._v(" 的 "),t("code",[s._v("length")]),s._v(" 属性是利用 UTF-16 表示的十六位代码单元数字，而不是 Unicode 可扩展的字符群集。")])]),s._v(" "),t("h2",{attrs:{id:"访问和修改字符串"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#访问和修改字符串"}},[s._v("#")]),s._v(" 访问和修改字符串")]),s._v(" "),t("p",[s._v("你可以通过字符串的属性和方法来访问和修改它，当然也可以用下标语法完成。")]),s._v(" "),t("h3",{attrs:{id:"字符串索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串索引"}},[s._v("#")]),s._v(" 字符串索引")]),s._v(" "),t("p",[s._v("每一个 "),t("code",[s._v("String")]),s._v(" 值都有一个关联的索引（"),t("em",[s._v("index")]),s._v("）类型，"),t("code",[s._v("String.Index")]),s._v("，它对应着字符串中的每一个 "),t("code",[s._v("Character")]),s._v(" 的位置。")]),s._v(" "),t("p",[s._v("前面提到，不同的字符可能会占用不同数量的内存空间，所以要知道 "),t("code",[s._v("Character")]),s._v(" 的确定位置，就必须从 "),t("code",[s._v("String")]),s._v(" 开头遍历每一个 Unicode 标量直到结尾。因此，Swift 的字符串不能用整数（integer）做索引。")]),s._v(" "),t("p",[s._v("使用 "),t("code",[s._v("startIndex")]),s._v(" 属性可以获取一个 "),t("code",[s._v("String")]),s._v(" 的第一个 "),t("code",[s._v("Character")]),s._v(" 的索引。使用 "),t("code",[s._v("endIndex")]),s._v(" 属性可以获取最后一个 "),t("code",[s._v("Character")]),s._v(" 的后一个位置的索引。因此，"),t("code",[s._v("endIndex")]),s._v(" 属性不能作为一个字符串的有效下标。如果 "),t("code",[s._v("String")]),s._v(" 是空串，"),t("code",[s._v("startIndex")]),s._v(" 和 "),t("code",[s._v("endIndex")]),s._v(" 是相等的。")]),s._v(" "),t("p",[s._v("通过调用 "),t("code",[s._v("String")]),s._v(" 的 "),t("code",[s._v("index(before:)")]),s._v(" 或 "),t("code",[s._v("index(after:)")]),s._v(" 方法，可以立即得到前面或后面的一个索引。你还可以通过调用 "),t("code",[s._v("index(_:offsetBy:)")]),s._v(" 方法来获取对应偏移量的索引，这种方式可以避免多次调用 "),t("code",[s._v("index(before:)")]),s._v(" 或 "),t("code",[s._v("index(after:)")]),s._v(" 方法。")]),s._v(" "),t("p",[s._v("你可以使用下标语法来访问 "),t("code",[s._v("String")]),s._v(" 特定索引的 "),t("code",[s._v("Character")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" greeting "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Guten Tag!"')])]),s._v("\ngreeting"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("greeting"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("startIndex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// G")]),s._v("\ngreeting"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("greeting"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("index")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("before"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" greeting"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("endIndex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// !")]),s._v("\ngreeting"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("greeting"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("index")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("after"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" greeting"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("startIndex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// u")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" index "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" greeting"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("index")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("greeting"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("startIndex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" offsetBy"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ngreeting"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// a")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("试图获取越界索引对应的 "),t("code",[s._v("Character")]),s._v("，将引发一个运行时错误。")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[s._v("greeting"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("greeting"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("endIndex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// error")]),s._v("\ngreeting"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("index")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("after"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" greeting"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("endIndex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// error")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("使用 "),t("code",[s._v("indices")]),s._v(" 属性会创建一个包含全部索引的范围（"),t("code",[s._v("Range")]),s._v("），用来在一个字符串中访问单个字符。")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" index "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" greeting"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("indices "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("greeting"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(' "')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" terminator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印输出“G u t e n   T a g ! ”")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("blockquote",[t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("你可以使用 "),t("code",[s._v("startIndex")]),s._v(" 和 "),t("code",[s._v("endIndex")]),s._v(" 属性或者 "),t("code",[s._v("index(before:)")]),s._v(" 、"),t("code",[s._v("index(after:)")]),s._v(" 和 "),t("code",[s._v("index(_:offsetBy:)")]),s._v(" 方法在任意一个确认的并遵循 "),t("code",[s._v("Collection")]),s._v(" 协议的类型里面，如上文所示是使用在 "),t("code",[s._v("String")]),s._v(" 中，你也可以使用在 "),t("code",[s._v("Array")]),s._v("、"),t("code",[s._v("Dictionary")]),s._v(" 和 "),t("code",[s._v("Set")]),s._v(" 中。")])]),s._v(" "),t("h3",{attrs:{id:"插入和删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#插入和删除"}},[s._v("#")]),s._v(" 插入和删除")]),s._v(" "),t("p",[s._v("调用 "),t("code",[s._v("insert(_:at:)")]),s._v(" 方法可以在一个字符串的指定索引插入一个字符，调用 "),t("code",[s._v("insert(contentsOf:at:)")]),s._v(" 方法可以在一个字符串的指定索引插入一个段字符串。")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" welcome "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')])]),s._v("\nwelcome"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("insert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"!"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" at"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" welcome"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("endIndex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// welcome 变量现在等于 "hello!"')]),s._v("\n\n\nwelcome"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("insert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("contentsOf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" there"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" at"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" welcome"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("index")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("before"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" welcome"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("endIndex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// welcome 变量现在等于 "hello there!"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("调用 "),t("code",[s._v("remove(at:)")]),s._v(" 方法可以在一个字符串的指定索引删除一个字符，调用 "),t("code",[s._v("removeSubrange(_:)")]),s._v(" 方法可以在一个字符串的指定索引删除一个子字符串。")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[s._v("welcome"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("remove")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("at"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" welcome"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("index")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("before"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" welcome"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("endIndex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// welcome 现在等于 "hello there"')]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" range "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" welcome"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("index")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("welcome"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("endIndex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" offsetBy"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("..<")]),s._v("welcome"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("endIndex\nwelcome"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeSubrange")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("range"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// welcome 现在等于 "hello"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("blockquote",[t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("你可以使用 "),t("code",[s._v("insert(_:at:)")]),s._v("、"),t("code",[s._v("insert(contentsOf:at:)")]),s._v("、"),t("code",[s._v("remove(at:)")]),s._v(" 和 "),t("code",[s._v("removeSubrange(_:)")]),s._v(" 方法在任意一个确认的并遵循 "),t("code",[s._v("RangeReplaceableCollection")]),s._v(" 协议的类型里面，如上文所示是使用在 "),t("code",[s._v("String")]),s._v(" 中，你也可以使用在 "),t("code",[s._v("Array")]),s._v("、"),t("code",[s._v("Dictionary")]),s._v(" 和 "),t("code",[s._v("Set")]),s._v(" 中。")])]),s._v(" "),t("h2",{attrs:{id:"子字符串"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#子字符串"}},[s._v("#")]),s._v(" 子字符串")]),s._v(" "),t("p",[s._v("当你从字符串中获取一个子字符串 —— 例如，使用下标或者 "),t("code",[s._v("prefix(_:)")]),s._v(" 之类的方法 —— 就可以得到一个 "),t("code",[s._v("Substring")]),s._v(" 的实例，而非另外一个 "),t("code",[s._v("String")]),s._v("。Swift 里的 "),t("code",[s._v("Substring")]),s._v(" 绝大部分函数都跟 "),t("code",[s._v("String")]),s._v(" 一样，意味着你可以使用同样的方式去操作 "),t("code",[s._v("Substring")]),s._v(" 和 "),t("code",[s._v("String")]),s._v("。然而，跟 "),t("code",[s._v("String")]),s._v(" 不同的是，你只有在短时间内需要操作字符串时，才会使用 "),t("code",[s._v("Substring")]),s._v("。当你需要长时间保存结果时，就把 "),t("code",[s._v("Substring")]),s._v(" 转化为 "),t("code",[s._v("String")]),s._v(" 的实例：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" greeting "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello, world!"')])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" index "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" greeting"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("firstIndex")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("of"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('","')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("??")]),s._v(" greeting"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("endIndex\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" beginning "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" greeting"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("..<")]),s._v("index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// beginning 的值为 "Hello"')]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 把结果转化为 String 以便长期存储。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" newString "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beginning"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("就像 "),t("code",[s._v("String")]),s._v("，每一个 "),t("code",[s._v("Substring")]),s._v(" 都会在内存里保存字符集。而 "),t("code",[s._v("String")]),s._v(" 和 "),t("code",[s._v("Substring")]),s._v(" 的区别在于性能优化上，"),t("code",[s._v("Substring")]),s._v(" 可以重用原 "),t("code",[s._v("String")]),s._v(" 的内存空间，或者另一个 "),t("code",[s._v("Substring")]),s._v(" 的内存空间（"),t("code",[s._v("String")]),s._v(" 也有同样的优化，但如果两个 "),t("code",[s._v("String")]),s._v(" 共享内存的话，它们就会相等）。这一优化意味着你在修改 "),t("code",[s._v("String")]),s._v(" 和 "),t("code",[s._v("Substring")]),s._v(" 之前都不需要消耗性能去复制内存。就像前面说的那样，"),t("code",[s._v("Substring")]),s._v(" 不适合长期存储 —— 因为它重用了原 "),t("code",[s._v("String")]),s._v(" 的内存空间，原 "),t("code",[s._v("String")]),s._v(" 的内存空间必须保留直到它的 "),t("code",[s._v("Substring")]),s._v(" 不再被使用为止。")]),s._v(" "),t("p",[s._v("上面的例子，"),t("code",[s._v("greeting")]),s._v(" 是一个 "),t("code",[s._v("String")]),s._v("，意味着它在内存里有一片空间保存字符集。而由于 "),t("code",[s._v("beginning")]),s._v(" 是 "),t("code",[s._v("greeting")]),s._v(" 的 "),t("code",[s._v("Substring")]),s._v("，它重用了 "),t("code",[s._v("greeting")]),s._v(" 的内存空间。相反，"),t("code",[s._v("newString")]),s._v(" 是一个 "),t("code",[s._v("String")]),s._v(" —— 它是使用 "),t("code",[s._v("Substring")]),s._v(" 创建的，拥有一片自己的内存空间。下面的图展示了他们之间的关系：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhmbo/static@master/img/20201110182357.png",alt:"img"}})]),s._v(" "),t("blockquote",[t("p",[s._v("注意")]),s._v(" "),t("p",[t("code",[s._v("String")]),s._v(" 和 "),t("code",[s._v("Substring")]),s._v(" 都遵循 "),t("a",{attrs:{href:"https://developer.apple.com/documentation/swift/stringprotocol",target:"_blank",rel:"noopener noreferrer"}},[t("code",[s._v("StringProtocol")]),t("OutboundLink")],1),s._v(" 协议，这意味着操作字符串的函数使用 "),t("code",[s._v("StringProtocol")]),s._v(" 会更加方便。你可以传入 "),t("code",[s._v("String")]),s._v(" 或 "),t("code",[s._v("Substring")]),s._v(" 去调用函数。")])]),s._v(" "),t("h2",{attrs:{id:"比较字符串"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#比较字符串"}},[s._v("#")]),s._v(" 比较字符串")]),s._v(" "),t("p",[s._v("Swift 提供了三种方式来比较文本值：字符串字符相等、前缀相等和后缀相等。")]),s._v(" "),t("h3",{attrs:{id:"字符串-字符相等"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串-字符相等"}},[s._v("#")]),s._v(" 字符串/字符相等")]),s._v(" "),t("p",[s._v("字符串/字符可以用等于操作符（"),t("code",[s._v("==")]),s._v("）和不等于操作符（"),t("code",[s._v("!=")]),s._v("），详细描述在 "),t("RouterLink",{attrs:{to:"/pages/279dd7/#比较运算符（comparison-operators）"}},[s._v("比较运算符")]),s._v("：")],1),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" quotation "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"We\'re a lot alike, you and I."')])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" sameQuotation "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"We\'re a lot alike, you and I."')])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" quotation "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" sameQuotation "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"These two strings are considered equal"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印输出“These two strings are considered equal”")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("如果两个字符串（或者两个字符）的可扩展的字形群集是标准相等，那就认为它们是相等的。只要可扩展的字形群集有同样的语言意义和外观则认为它们标准相等，即使它们是由不同的 Unicode 标量构成。")]),s._v(" "),t("p",[s._v("例如，"),t("code",[s._v("LATIN SMALL LETTER E WITH ACUTE")]),s._v("("),t("code",[s._v("U+00E9")]),s._v(")就是标准相等于 "),t("code",[s._v("LATIN SMALL LETTER E")]),s._v("("),t("code",[s._v("U+0065")]),s._v(")后面加上 "),t("code",[s._v("COMBINING ACUTE ACCENT")]),s._v("("),t("code",[s._v("U+0301")]),s._v(")。这两个字符群集都是表示字符 "),t("code",[s._v("é")]),s._v(" 的有效方式，所以它们被认为是标准相等的：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "Voulez-vous un café?" 使用 LATIN SMALL LETTER E WITH ACUTE')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" eAcuteQuestion "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Voulez-vous un caf\\u{E9}?"')])]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "Voulez-vous un café?" 使用 LATIN SMALL LETTER E and COMBINING ACUTE ACCENT')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" combinedEAcuteQuestion "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Voulez-vous un caf\\u{65}\\u{301}?"')])]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" eAcuteQuestion "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" combinedEAcuteQuestion "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"These two strings are considered equal"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印输出“These two strings are considered equal”")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("相反，英语中的 "),t("code",[s._v("LATIN CAPITAL LETTER A")]),s._v("("),t("code",[s._v("U+0041")]),s._v("，或者 "),t("code",[s._v("A")]),s._v(")不等于俄语中的 "),t("code",[s._v("CYRILLIC CAPITAL LETTER A")]),s._v("("),t("code",[s._v("U+0410")]),s._v("，或者 "),t("code",[s._v("A")]),s._v(")。两个字符看着是一样的，但却有不同的语言意义：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" latinCapitalLetterA"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Character")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\u{41}"')])]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" cyrillicCapitalLetterA"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Character")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\u{0410}"')])]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" latinCapitalLetterA "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" cyrillicCapitalLetterA "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"These two characters are not equivalent"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印“These two characters are not equivalent”")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("blockquote",[t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("在 Swift 中，字符串和字符并不区分地域（not locale-sensitive）。")])]),s._v(" "),t("h3",{attrs:{id:"前缀-后缀相等"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前缀-后缀相等"}},[s._v("#")]),s._v(" 前缀/后缀相等")]),s._v(" "),t("p",[s._v("通过调用字符串的 "),t("code",[s._v("hasPrefix(_:)")]),s._v("/"),t("code",[s._v("hasSuffix(_:)")]),s._v(" 方法来检查字符串是否拥有特定前缀/后缀，两个方法均接收一个 "),t("code",[s._v("String")]),s._v(" 类型的参数，并返回一个布尔值。")]),s._v(" "),t("p",[s._v("下面的例子以一个字符串数组表示莎士比亚话剧《罗密欧与朱丽叶》中前两场的场景位置：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" romeoAndJuliet "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Act 1 Scene 1: Verona, A public place"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Act 1 Scene 2: Capulet\'s mansion"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Act 1 Scene 3: A room in Capulet\'s mansion"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Act 1 Scene 4: A street outside Capulet\'s mansion"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Act 1 Scene 5: The Great Hall in Capulet\'s mansion"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Act 2 Scene 1: Outside Capulet\'s mansion"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Act 2 Scene 2: Capulet\'s orchard"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Act 2 Scene 3: Outside Friar Lawrence\'s cell"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Act 2 Scene 4: A street in Verona"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Act 2 Scene 5: Capulet\'s mansion"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Act 2 Scene 6: Friar Lawrence\'s cell"')])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("你可以调用 "),t("code",[s._v("hasPrefix(_:)")]),s._v(" 方法来计算话剧中第一幕的场景数：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" act1SceneCount "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" scene "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" romeoAndJuliet "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" scene"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hasPrefix")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Act 1 "')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        act1SceneCount "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"There are ')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("act1SceneCount")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(' scenes in Act 1"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印输出“There are 5 scenes in Act 1”")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("相似地，你可以用 "),t("code",[s._v("hasSuffix(_:)")]),s._v(" 方法来计算发生在不同地方的场景数：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" mansionCount "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" cellCount "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" scene "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" romeoAndJuliet "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" scene"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hasSuffix")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Capulet\'s mansion"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        mansionCount "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" scene"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hasSuffix")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Friar Lawrence\'s cell"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        cellCount "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("mansionCount")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(" mansion scenes; ")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("cellCount")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(' cell scenes"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印输出“6 mansion scenes; 2 cell scenes”")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("blockquote",[t("p",[s._v("注意")]),s._v(" "),t("p",[t("code",[s._v("hasPrefix(_:)")]),s._v(" 和 "),t("code",[s._v("hasSuffix(_:)")]),s._v(" 方法都是在每个字符串中逐字符比较其可扩展的字符群集是否标准相等，详细描述在 "),t("a",{attrs:{href:"#%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%AD%97%E7%AC%A6%E7%9B%B8%E7%AD%89"}},[s._v("字符串/字符相等")]),s._v("。")])]),s._v(" "),t("h2",{attrs:{id:"字符串的-unicode-表示形式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串的-unicode-表示形式"}},[s._v("#")]),s._v(" 字符串的 Unicode 表示形式")]),s._v(" "),t("p",[s._v("当一个 Unicode 字符串被写进文本文件或者其他储存时，字符串中的 Unicode 标量会用 Unicode 定义的几种 "),t("code",[s._v("编码格式")]),s._v("（encoding forms）编码。每一个字符串中的小块编码都被称 "),t("code",[s._v("代码单元")]),s._v("（code units）。这些包括 UTF-8 编码格式（编码字符串为 8 位的代码单元）， UTF-16 编码格式（编码字符串位 16 位的代码单元），以及 UTF-32 编码格式（编码字符串32位的代码单元）。")]),s._v(" "),t("p",[s._v("Swift 提供了几种不同的方式来访问字符串的 Unicode 表示形式。你可以利用 "),t("code",[s._v("for-in")]),s._v(" 来对字符串进行遍历，从而以 Unicode 可扩展的字符群集的方式访问每一个 "),t("code",[s._v("Character")]),s._v(" 值。该过程在 "),t("a",{attrs:{href:"#%E4%BD%BF%E7%94%A8%E5%AD%97%E7%AC%A6"}},[s._v("使用字符")]),s._v(" 中进行了描述。")]),s._v(" "),t("p",[s._v("另外，能够以其他三种 Unicode 兼容的方式访问字符串的值：")]),s._v(" "),t("ul",[t("li",[s._v("UTF-8 代码单元集合（利用字符串的 "),t("code",[s._v("utf8")]),s._v(" 属性进行访问）")]),s._v(" "),t("li",[s._v("UTF-16 代码单元集合（利用字符串的 "),t("code",[s._v("utf16")]),s._v(" 属性进行访问）")]),s._v(" "),t("li",[s._v("21 位的 Unicode 标量值集合，也就是字符串的 UTF-32 编码格式（利用字符串的 "),t("code",[s._v("unicodeScalars")]),s._v(" 属性进行访问）")])]),s._v(" "),t("p",[s._v("下面由 "),t("code",[s._v("D")]),s._v(","),t("code",[s._v("o")]),s._v(","),t("code",[s._v("g")]),s._v(","),t("code",[s._v("‼")]),s._v("("),t("code",[s._v("DOUBLE EXCLAMATION MARK")]),s._v(", Unicode 标量 "),t("code",[s._v("U+203C")]),s._v(")和 "),t("code",[s._v("🐶")]),s._v("("),t("code",[s._v("DOG FACE")]),s._v("，Unicode 标量为 "),t("code",[s._v("U+1F436")]),s._v(")组成的字符串中的每一个字符代表着一种不同的表示：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" dogString "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Dog‼🐶"')])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"utf-8-表示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#utf-8-表示"}},[s._v("#")]),s._v(" UTF-8 表示")]),s._v(" "),t("p",[s._v("你可以通过遍历 "),t("code",[s._v("String")]),s._v(" 的 "),t("code",[s._v("utf8")]),s._v(" 属性来访问它的 "),t("code",[s._v("UTF-8")]),s._v(" 表示。其为 "),t("code",[s._v("String.UTF8View")]),s._v(" 类型的属性，"),t("code",[s._v("UTF8View")]),s._v(" 是无符号 8 位（"),t("code",[s._v("UInt8")]),s._v("）值的集合，每一个 "),t("code",[s._v("UInt8")]),s._v(" 值都是一个字符的 UTF-8 表示：")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("Character")]),s._v(" "),t("th",[s._v("D U+0044")]),s._v(" "),t("th",[s._v("o U+006F")]),s._v(" "),t("th",[s._v("g U+0067")]),s._v(" "),t("th",[s._v("‼ U+203C")]),s._v(" "),t("th",[s._v("🐶 U+1F436")]),s._v(" "),t("th"),s._v(" "),t("th"),s._v(" "),t("th"),s._v(" "),t("th"),s._v(" "),t("th")])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("UTF-8 Code Unit")]),s._v(" "),t("td",[s._v("68")]),s._v(" "),t("td",[s._v("111")]),s._v(" "),t("td",[s._v("103")]),s._v(" "),t("td",[s._v("226")]),s._v(" "),t("td",[s._v("128")]),s._v(" "),t("td",[s._v("188")]),s._v(" "),t("td",[s._v("240")]),s._v(" "),t("td",[s._v("159")]),s._v(" "),t("td",[s._v("144")]),s._v(" "),t("td",[s._v("182")])]),s._v(" "),t("tr",[t("td",[s._v("Position")]),s._v(" "),t("td",[s._v("0")]),s._v(" "),t("td",[s._v("1")]),s._v(" "),t("td",[s._v("2")]),s._v(" "),t("td",[s._v("3")]),s._v(" "),t("td",[s._v("4")]),s._v(" "),t("td",[s._v("5")]),s._v(" "),t("td",[s._v("6")]),s._v(" "),t("td",[s._v("7")]),s._v(" "),t("td",[s._v("8")]),s._v(" "),t("td",[s._v("9")])])])]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" codeUnit "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" dogString"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("utf8 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("codeUnit")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(' "')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" terminator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 68 111 103 226 128 188 240 159 144 182")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("上面的例子中，前三个 10 进制 "),t("code",[s._v("codeUnit")]),s._v(" 值（"),t("code",[s._v("68")]),s._v("、"),t("code",[s._v("111")]),s._v("、"),t("code",[s._v("103")]),s._v("）代表了字符 "),t("code",[s._v("D")]),s._v("、"),t("code",[s._v("o")]),s._v(" 和 "),t("code",[s._v("g")]),s._v("，它们的 UTF-8 表示与 ASCII 表示相同。接下来的三个 10 进制 "),t("code",[s._v("codeUnit")]),s._v(" 值（"),t("code",[s._v("226")]),s._v("、"),t("code",[s._v("128")]),s._v("、"),t("code",[s._v("188")]),s._v("）是 "),t("code",[s._v("DOUBLE EXCLAMATION MARK")]),s._v(" 的3字节 UTF-8 表示。最后的四个 "),t("code",[s._v("codeUnit")]),s._v(" 值（"),t("code",[s._v("240")]),s._v("、"),t("code",[s._v("159")]),s._v("、"),t("code",[s._v("144")]),s._v("、"),t("code",[s._v("182")]),s._v("）是 "),t("code",[s._v("DOG FACE")]),s._v(" 的4字节 UTF-8 表示。")]),s._v(" "),t("h3",{attrs:{id:"utf-16-表示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#utf-16-表示"}},[s._v("#")]),s._v(" UTF-16 表示")]),s._v(" "),t("p",[s._v("你可以通过遍历 "),t("code",[s._v("String")]),s._v(" 的 "),t("code",[s._v("utf16")]),s._v(" 属性来访问它的 "),t("code",[s._v("UTF-16")]),s._v(" 表示。其为 "),t("code",[s._v("String.UTF16View")]),s._v(" 类型的属性，"),t("code",[s._v("UTF16View")]),s._v(" 是无符号16位（"),t("code",[s._v("UInt16")]),s._v("）值的集合，每一个 "),t("code",[s._v("UInt16")]),s._v(" 都是一个字符的 UTF-16 表示：")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("Character")]),s._v(" "),t("th",[s._v("D U+0044")]),s._v(" "),t("th",[s._v("o U+006F")]),s._v(" "),t("th",[s._v("g U+0067")]),s._v(" "),t("th",[s._v("‼ U+203C")]),s._v(" "),t("th",[s._v("🐶 U+1F436")]),s._v(" "),t("th")])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("UTF-16 Code Unit")]),s._v(" "),t("td",[s._v("68")]),s._v(" "),t("td",[s._v("111")]),s._v(" "),t("td",[s._v("103")]),s._v(" "),t("td",[s._v("8252")]),s._v(" "),t("td",[s._v("55357")]),s._v(" "),t("td",[s._v("56374")])]),s._v(" "),t("tr",[t("td",[s._v("Position")]),s._v(" "),t("td",[s._v("0")]),s._v(" "),t("td",[s._v("1")]),s._v(" "),t("td",[s._v("2")]),s._v(" "),t("td",[s._v("3")]),s._v(" "),t("td",[s._v("4")]),s._v(" "),t("td",[s._v("5")])])])]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" codeUnit "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" dogString"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("utf16 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("codeUnit")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(' "')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" terminator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 68 111 103 8252 55357 56374")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("同样，前三个 "),t("code",[s._v("codeUnit")]),s._v(" 值（"),t("code",[s._v("68")]),s._v("、"),t("code",[s._v("111")]),s._v("、"),t("code",[s._v("103")]),s._v("）代表了字符 "),t("code",[s._v("D")]),s._v("、"),t("code",[s._v("o")]),s._v(" 和 "),t("code",[s._v("g")]),s._v("，它们的 UTF-16 代码单元和 UTF-8 完全相同（因为这些 Unicode 标量表示 ASCII 字符）。")]),s._v(" "),t("p",[s._v("第四个 "),t("code",[s._v("codeUnit")]),s._v(" 值（"),t("code",[s._v("8252")]),s._v("）是一个等于十六进制 "),t("code",[s._v("203C")]),s._v(" 的的十进制值。这个代表了 "),t("code",[s._v("DOUBLE EXCLAMATION MARK")]),s._v(" 字符的 Unicode 标量值 "),t("code",[s._v("U+203C")]),s._v("。这个字符在 UTF-16 中可以用一个代码单元表示。")]),s._v(" "),t("p",[s._v("第五和第六个 "),t("code",[s._v("codeUnit")]),s._v(" 值（"),t("code",[s._v("55357")]),s._v(" 和 "),t("code",[s._v("56374")]),s._v("）是 "),t("code",[s._v("DOG FACE")]),s._v(" 字符的 UTF-16 表示。第一个值为 "),t("code",[s._v("U+D83D")]),s._v("(十进制值为 "),t("code",[s._v("55357")]),s._v(")，第二个值为 "),t("code",[s._v("U+DC36")]),s._v("(十进制值为 "),t("code",[s._v("56374")]),s._v(")。")]),s._v(" "),t("h3",{attrs:{id:"unicode-标量表示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unicode-标量表示"}},[s._v("#")]),s._v(" Unicode 标量表示")]),s._v(" "),t("p",[s._v("你可以通过遍历 "),t("code",[s._v("String")]),s._v(" 值的 "),t("code",[s._v("unicodeScalars")]),s._v(" 属性来访问它的 Unicode 标量表示。其为 "),t("code",[s._v("UnicodeScalarView")]),s._v(" 类型的属性，"),t("code",[s._v("UnicodeScalarView")]),s._v(" 是 "),t("code",[s._v("UnicodeScalar")]),s._v(" 类型的值的集合。")]),s._v(" "),t("p",[s._v("每一个 "),t("code",[s._v("UnicodeScalar")]),s._v(" 拥有一个 "),t("code",[s._v("value")]),s._v(" 属性，可以返回对应的 21 位数值，用 "),t("code",[s._v("UInt32")]),s._v(" 来表示：")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("Character")]),s._v(" "),t("th",[s._v("D U+0044")]),s._v(" "),t("th",[s._v("o U+006F")]),s._v(" "),t("th",[s._v("g U+0067")]),s._v(" "),t("th",[s._v("‼ U+203C")]),s._v(" "),t("th",[s._v("🐶 U+1F436")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("Unicode Scalar Code Unit")]),s._v(" "),t("td",[s._v("68")]),s._v(" "),t("td",[s._v("111")]),s._v(" "),t("td",[s._v("103")]),s._v(" "),t("td",[s._v("8252")]),s._v(" "),t("td",[s._v("128054")])]),s._v(" "),t("tr",[t("td",[s._v("Position")]),s._v(" "),t("td",[s._v("0")]),s._v(" "),t("td",[s._v("1")]),s._v(" "),t("td",[s._v("2")]),s._v(" "),t("td",[s._v("3")]),s._v(" "),t("td",[s._v("4")])])])]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" scalar "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" dogString"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("unicodeScalars "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("scalar"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(' "')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" terminator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 68 111 103 8252 128054")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("前三个 "),t("code",[s._v("UnicodeScalar")]),s._v(" 值（"),t("code",[s._v("68")]),s._v("、"),t("code",[s._v("111")]),s._v("、"),t("code",[s._v("103")]),s._v("）的 "),t("code",[s._v("value")]),s._v(" 属性仍然代表字符 "),t("code",[s._v("D")]),s._v("、"),t("code",[s._v("o")]),s._v(" 和 "),t("code",[s._v("g")]),s._v("。")]),s._v(" "),t("p",[s._v("第四个 "),t("code",[s._v("codeUnit")]),s._v(" 值（"),t("code",[s._v("8252")]),s._v("）仍然是一个等于十六进制 "),t("code",[s._v("203C")]),s._v(" 的十进制值。这个代表了 "),t("code",[s._v("DOUBLE EXCLAMATION MARK")]),s._v(" 字符的 Unicode 标量 "),t("code",[s._v("U+203C")]),s._v("。")]),s._v(" "),t("p",[s._v("第五个 "),t("code",[s._v("UnicodeScalar")]),s._v(" 值的 "),t("code",[s._v("value")]),s._v(" 属性，"),t("code",[s._v("128054")]),s._v("，是一个十六进制 "),t("code",[s._v("1F436")]),s._v(" 的十进制表示。其等同于 "),t("code",[s._v("DOG FACE")]),s._v(" 的 Unicode 标量 "),t("code",[s._v("U+1F436")]),s._v("。")]),s._v(" "),t("p",[s._v("作为查询它们的 "),t("code",[s._v("value")]),s._v(" 属性的一种替代方法，每个 "),t("code",[s._v("UnicodeScalar")]),s._v(" 值也可以用来构建一个新的 "),t("code",[s._v("String")]),s._v(" 值，比如在字符串插值中使用：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" scalar "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" dogString"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("unicodeScalars "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("scalar")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(' "')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// D")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// o")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// g")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ‼")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 🐶")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);