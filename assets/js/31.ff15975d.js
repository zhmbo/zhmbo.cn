(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{468:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("枚举常被用于为特定类或结构体实现某些功能。类似地，枚举可以方便的定义工具类或结构体，从而为某个复杂的类型所使用。为了实现这种功能，Swift 允许你定义"),t("em",[s._v("嵌套类型")]),s._v("，可以在支持的类型中定义嵌套的枚举、类和结构体。")]),s._v(" "),t("p",[s._v("要在一个类型中嵌套另一个类型，将嵌套类型的定义写在其外部类型的 "),t("code",[s._v("{}")]),s._v(" 内，而且可以根据需要定义多级嵌套。")]),s._v(" "),t("h2",{attrs:{id:"嵌套类型实践"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#嵌套类型实践"}},[s._v("#")]),s._v(" 嵌套类型实践")]),s._v(" "),t("p",[s._v("下面这个例子定义了一个结构体 "),t("code",[s._v("BlackjackCard")]),s._v("（二十一点），用来模拟 "),t("code",[s._v("BlackjackCard")]),s._v(" 中的扑克牌点数。"),t("code",[s._v("BlackjackCard")]),s._v(" 结构体包含两个嵌套定义的枚举类型 "),t("code",[s._v("Suit")]),s._v(" 和 "),t("code",[s._v("Rank")]),s._v("。")]),s._v(" "),t("p",[s._v("在 "),t("code",[s._v("BlackjackCard")]),s._v(" 中，"),t("code",[s._v("Ace")]),s._v(" 牌可以表示 "),t("code",[s._v("1")]),s._v(" 或者 "),t("code",[s._v("11")]),s._v("，"),t("code",[s._v("Ace")]),s._v(" 牌的这一特征通过一个嵌套在 "),t("code",[s._v("Rank")]),s._v(" 枚举中的结构体 "),t("code",[s._v("Values")]),s._v(" 来表示：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BlackjackCard")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 嵌套的 Suit 枚举")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Suit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Character")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" spades "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"♠"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" hearts "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"♡"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" diamonds "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"♢"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" clubs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"♣"')])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 嵌套的 Rank 枚举")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Rank")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" two "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" three"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" four"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" five"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" six"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" seven"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" eight"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nine"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ten\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" jack"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" queen"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" king"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ace\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Values")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" first"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" second"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Int")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" values"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Values")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ace"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("first"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" second"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("jack"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("queen"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("king"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("first"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" second"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token nil constant"}},[s._v("nil")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("first"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rawValue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" second"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token nil constant"}},[s._v("nil")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// BlackjackCard 的属性和方法")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" rank"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Rank")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" suit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Suit")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" description"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" output "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"suit is ')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("suit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rawValue")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(',"')])]),s._v("\n        output "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" value is ')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("rank"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("values"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("first")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')])]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" second "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" rank"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("values"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("second "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            output "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" or ')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("second")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')])]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" output\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br")])]),t("p",[t("code",[s._v("Suit")]),s._v(" 枚举用来描述扑克牌的四种花色，并用一个 "),t("code",[s._v("Character")]),s._v(" 类型的原始值表示花色符号。")]),s._v(" "),t("p",[t("code",[s._v("Rank")]),s._v(" 枚举用来描述扑克牌从 "),t("code",[s._v("Ace")]),s._v("~"),t("code",[s._v("10")]),s._v("，以及 "),t("code",[s._v("J")]),s._v("、"),t("code",[s._v("Q")]),s._v("、"),t("code",[s._v("K")]),s._v("，这 "),t("code",[s._v("13")]),s._v(" 种牌，并用一个 "),t("code",[s._v("Int")]),s._v(" 类型的原始值表示牌的面值。（这个 "),t("code",[s._v("Int")]),s._v(" 类型的原始值未用于 "),t("code",[s._v("Ace")]),s._v("、"),t("code",[s._v("J")]),s._v("、"),t("code",[s._v("Q")]),s._v("、"),t("code",[s._v("K")]),s._v(" 这 "),t("code",[s._v("4")]),s._v(" 种牌。）")]),s._v(" "),t("p",[s._v("如上所述，"),t("code",[s._v("Rank")]),s._v(" 枚举在内部定义了一个嵌套结构体 "),t("code",[s._v("Values")]),s._v("。结构体 "),t("code",[s._v("Values")]),s._v(" 中定义了两个属性，用于反映只有 "),t("code",[s._v("Ace")]),s._v(" 有两个数值，其余牌都只有一个数值：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("first")]),s._v(" 的类型为 "),t("code",[s._v("Int")])]),s._v(" "),t("li",[t("code",[s._v("second")]),s._v(" 的类型为 "),t("code",[s._v("Int?")]),s._v("，或者说“可选 "),t("code",[s._v("Int")]),s._v("”")])]),s._v(" "),t("p",[t("code",[s._v("Rank")]),s._v(" 还定义了一个计算型属性 "),t("code",[s._v("values")]),s._v("，它将会返回一个 "),t("code",[s._v("Values")]),s._v(" 结构体的实例。这个计算型属性会根据牌的面值，用适当的数值去初始化 "),t("code",[s._v("Values")]),s._v(" 实例。对于 "),t("code",[s._v("J")]),s._v("、"),t("code",[s._v("Q")]),s._v("、"),t("code",[s._v("K")]),s._v("、"),t("code",[s._v("Ace")]),s._v(" 这四种牌，会使用特殊数值。对于数字面值的牌，使用枚举实例的 "),t("code",[s._v("Int")]),s._v(" 类型的原始值。")]),s._v(" "),t("p",[t("code",[s._v("BlackjackCard")]),s._v(" 结构体拥有两个属性——"),t("code",[s._v("rank")]),s._v(" 与 "),t("code",[s._v("suit")]),s._v("。它也同样定义了一个计算型属性 "),t("code",[s._v("description")]),s._v("，"),t("code",[s._v("description")]),s._v(" 属性用 "),t("code",[s._v("rank")]),s._v(" 和 "),t("code",[s._v("suit")]),s._v(" 中的内容来构建对扑克牌名字和数值的描述。该属性使用可选绑定来检查可选类型 "),t("code",[s._v("second")]),s._v(" 是否有值，若有值，则在原有的描述中增加对 "),t("code",[s._v("second")]),s._v(" 的描述。")]),s._v(" "),t("p",[s._v("因为 "),t("code",[s._v("BlackjackCard")]),s._v(" 是一个没有自定义构造器的结构体，在 "),t("RouterLink",{attrs:{to:"/pages/1b072a/#结构体的逐一成员构造器"}},[s._v("结构体的逐一成员构造器")]),s._v(" 中可知，结构体有默认的成员构造器，所以你可以用默认的构造器去初始化新常量 "),t("code",[s._v("theAceOfSpades")]),s._v("：")],1),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" theAceOfSpades "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BlackjackCard")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("rank"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ace"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" suit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("spades"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"theAceOfSpades: ')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("theAceOfSpades"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("description")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印“theAceOfSpades: suit is ♠, value is 1 or 11”")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("尽管 "),t("code",[s._v("Rank")]),s._v(" 和 "),t("code",[s._v("Suit")]),s._v(" 嵌套在 "),t("code",[s._v("BlackjackCard")]),s._v(" 中，但它们的类型仍可从上下文中推断出来，所以在初始化实例时能够单独通过成员名称（"),t("code",[s._v(".ace")]),s._v(" 和 "),t("code",[s._v(".spades")]),s._v("）引用枚举实例。在上面的例子中，"),t("code",[s._v("description")]),s._v(" 属性正确地反映了黑桃 A 牌具有 "),t("code",[s._v("1")]),s._v(" 和 "),t("code",[s._v("11")]),s._v(" 两个值。")]),s._v(" "),t("h2",{attrs:{id:"引用嵌套类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引用嵌套类型"}},[s._v("#")]),s._v(" 引用嵌套类型")]),s._v(" "),t("p",[s._v("在外部引用嵌套类型时，在嵌套类型的类型名前加上其外部类型的类型名作为前缀：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" heartsSymbol "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BlackjackCard")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Suit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hearts"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rawValue\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 红心符号为“♡”")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("对于上面这个例子，这样可以使 "),t("code",[s._v("Suit")]),s._v("、"),t("code",[s._v("Rank")]),s._v(" 和 "),t("code",[s._v("Values")]),s._v(" 的名字尽可能的短，因为它们的名字可以由定义它们的上下文来限定。")])])}),[],!1,null,null,null);t.default=e.exports}}]);