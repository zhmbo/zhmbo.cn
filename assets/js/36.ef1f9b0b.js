(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{415:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("Swift 使用"),t("em",[s._v("自动引用计数（ARC）")]),s._v(" 机制来跟踪和管理你的应用程序的内存。通常情况下，Swift 内存管理机制会一直起作用，你无须自己来考虑内存的管理。ARC 会在类的实例不再被使用时，自动释放其占用的内存。")]),s._v(" "),t("p",[s._v("然而在少数情况下，为了能帮助你管理内存，ARC 需要更多的，代码之间关系的信息。本章描述了这些情况，并且为你示范怎样才能使 ARC 来管理你的应用程序的所有内存。在 Swift 使用 ARC 与在 Obejctive-C 中使用 ARC 非常类似，具体请参考 "),t("a",{attrs:{href:"https://developer.apple.com/library/content/releasenotes/ObjectiveC/RN-TransitioningToARC/Introduction/Introduction.html#//apple-ref/doc/uid/TP40011226",target:"_blank",rel:"noopener noreferrer"}},[s._v("过渡到 ARC 的发布说明"),t("OutboundLink")],1),s._v("。")]),s._v(" "),t("blockquote",[t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("引用计数仅仅应用于类的实例。结构体和枚举类型是值类型，不是引用类型，也不是通过引用的方式存储和传递。")])]),s._v(" "),t("h2",{attrs:{id:"自动引用计数的工作机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动引用计数的工作机制"}},[s._v("#")]),s._v(" 自动引用计数的工作机制")]),s._v(" "),t("p",[s._v("每当你创建一个新的类实例时，ARC 会分配一块内存来储存该实例的信息。内存中会包含实例的类型信息，以及这个实例所关联的任何存储属性的值。")]),s._v(" "),t("p",[s._v("此外，当实例不再被使用时，ARC 释放实例所占用的内存，并让释放的内存能挪作他用。这确保了不再被使用的实例，不会一直占用内存空间。")]),s._v(" "),t("p",[s._v("然而，当 ARC 回收并释放了正在被使用中的实例后，该实例的属性和方法将不能再被访问和调用。实际上，如果你试图访问这个实例，你的应用程序很可能会崩溃。")]),s._v(" "),t("p",[s._v("为了确保使用中的实例不会被销毁，ARC 会跟踪和计算每一个实例正在被多少属性，常量和变量所引用。哪怕实例的引用数为 1，ARC 都不会销毁这个实例。")]),s._v(" "),t("p",[s._v("为了使上述成为可能，无论你将实例赋值给属性、常量或变量，它们都会创建此实例的强引用。之所以称之为“强”引用，是因为它会将实例牢牢地保持住，只要强引用还在，实例是不允许被销毁的。")]),s._v(" "),t("h2",{attrs:{id:"自动引用计数实践"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动引用计数实践"}},[s._v("#")]),s._v(" 自动引用计数实践")]),s._v(" "),t("p",[s._v("下面的例子展示了自动引用计数的工作机制。例子以一个简单的 "),t("code",[s._v("Person")]),s._v(" 类开始，并定义了一个叫 "),t("code",[s._v("name")]),s._v(" 的常量属性：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("init")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(' is being initialized"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("deinit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(' is being deinitialized"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[t("code",[s._v("Person")]),s._v(" 类有一个构造器，此构造器给实例的 "),t("code",[s._v("name")]),s._v(" 属性赋值，并打印一条消息以表明初始化过程生效。"),t("code",[s._v("Person")]),s._v(" 类也拥有一个析构器，这个析构器会在实例被销毁时打印一条消息。")]),s._v(" "),t("p",[s._v("接下来的代码片段定义了三个类型为 "),t("code",[s._v("Person?")]),s._v(" 的变量，按照代码片段中的顺序，为新的 "),t("code",[s._v("Person")]),s._v(" 实例建立多个引用。由于这些变量是被定义为可选类型（"),t("code",[s._v("Person?")]),s._v("，而不是 "),t("code",[s._v("Person")]),s._v("），它们的值会被自动初始化为 "),t("code",[s._v("nil")]),s._v("，目前还不会引用到 "),t("code",[s._v("Person")]),s._v(" 类的实例。")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" reference1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" reference2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" reference3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("现在你可以创建 "),t("code",[s._v("Person")]),s._v(" 类的新实例，并且将它赋值给三个变量中的一个：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[s._v("reference1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John Appleseed"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印“John Appleseed is being initialized”")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("应当注意到当你调用 "),t("code",[s._v("Person")]),s._v(" 类的构造器的时候，"),t("code",[s._v('"John Appleseed is being initialized"')]),s._v(" 会被打印出来。由此可以确定构造器被执行。")]),s._v(" "),t("p",[s._v("由于 "),t("code",[s._v("Person")]),s._v(" 类的新实例被赋值给了 "),t("code",[s._v("reference1")]),s._v(" 变量，所以 "),t("code",[s._v("reference1")]),s._v(" 到 "),t("code",[s._v("Person")]),s._v(" 类的新实例之间建立了一个强引用。正是因为这一个强引用，ARC 会保证 "),t("code",[s._v("Person")]),s._v(" 实例被保持在内存中不被销毁。")]),s._v(" "),t("p",[s._v("如果你将同一个 "),t("code",[s._v("Person")]),s._v(" 实例也赋值给其他两个变量，该实例又会多出两个强引用：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[s._v("reference2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" reference1\nreference3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" reference1\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("现在这一个 "),t("code",[s._v("Person")]),s._v(" 实例已经有三个强引用了。")]),s._v(" "),t("p",[s._v("如果你通过给其中两个变量赋值 "),t("code",[s._v("nil")]),s._v(" 的方式断开两个强引用（包括最先的那个强引用），只留下一个强引用，"),t("code",[s._v("Person")]),s._v(" 实例不会被销毁：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[s._v("reference1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token nil constant"}},[s._v("nil")]),s._v("\nreference2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token nil constant"}},[s._v("nil")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("在你清楚地表明不再使用这个 "),t("code",[s._v("Person")]),s._v(" 实例时，即第三个也就是最后一个强引用被断开时，ARC 会销毁它：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[s._v("reference3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token nil constant"}},[s._v("nil")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印“John Appleseed is being deinitialized”")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"类实例之间的循环强引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类实例之间的循环强引用"}},[s._v("#")]),s._v(" 类实例之间的循环强引用")]),s._v(" "),t("p",[s._v("在上面的例子中，ARC 会跟踪你所新创建的 "),t("code",[s._v("Person")]),s._v(" 实例的引用数量，并且会在 "),t("code",[s._v("Person")]),s._v(" 实例不再被需要时销毁它。")]),s._v(" "),t("p",[s._v("然而，我们可能会写出一个类实例的强引用数"),t("em",[s._v("永远不能")]),s._v("变成 "),t("code",[s._v("0")]),s._v(" 的代码。如果两个类实例互相持有对方的强引用，因而每个实例都让对方一直存在，就是这种情况。这就是所谓的"),t("em",[s._v("循环强引用")]),s._v("。")]),s._v(" "),t("p",[s._v("你可以通过定义类之间的关系为弱引用或无主引用，来替代强引用，从而解决循环强引用的问题。具体的过程在 "),t("a",{attrs:{href:"#%E8%A7%A3%E5%86%B3%E5%AE%9E%E4%BE%8B%E4%B9%8B%E9%97%B4%E7%9A%84%E5%BE%AA%E7%8E%AF%E5%BC%BA%E5%BC%95%E7%94%A8"}},[s._v("解决实例之间的循环强引用")]),s._v(" 中有描述。不管怎样，在你学习怎样解决循环强引用之前，很有必要了解一下它是怎样产生的。")]),s._v(" "),t("p",[s._v("下面展示了一个不经意产生循环强引用的例子。例子定义了两个类："),t("code",[s._v("Person")]),s._v(" 和 "),t("code",[s._v("Apartment")]),s._v("，用来建模公寓和它其中的居民：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("init")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" apartment"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Apartment")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("deinit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(' is being deinitialized"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Apartment")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" unit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("init")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("unit "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" unit "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" tenant"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("deinit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Apartment ')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("unit")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(' is being deinitialized"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("每一个 "),t("code",[s._v("Person")]),s._v(" 实例有一个类型为 "),t("code",[s._v("String")]),s._v("，名字为 "),t("code",[s._v("name")]),s._v(" 的属性，并有一个可选的初始化为 "),t("code",[s._v("nil")]),s._v(" 的 "),t("code",[s._v("apartment")]),s._v(" 属性。"),t("code",[s._v("apartment")]),s._v(" 属性是可选的，因为一个人并不总是拥有公寓。")]),s._v(" "),t("p",[s._v("类似的，每个 "),t("code",[s._v("Apartment")]),s._v(" 实例有一个叫 "),t("code",[s._v("unit")]),s._v("，类型为 "),t("code",[s._v("String")]),s._v(" 的属性，并有一个可选的初始化为 "),t("code",[s._v("nil")]),s._v(" 的 "),t("code",[s._v("tenant")]),s._v(" 属性。"),t("code",[s._v("tenant")]),s._v(" 属性是可选的，因为一栋公寓并不总是有居民。")]),s._v(" "),t("p",[s._v("这两个类都定义了析构器，在类实例被析构的时候输出信息。这让你能够知晓 "),t("code",[s._v("Person")]),s._v(" 和 "),t("code",[s._v("Apartment")]),s._v(" 的实例是否像预期的那样被销毁。")]),s._v(" "),t("p",[s._v("接下来的代码片段定义了两个可选类型的变量 "),t("code",[s._v("john")]),s._v(" 和 "),t("code",[s._v("unit4A")]),s._v("，并分别被设为下面的 "),t("code",[s._v("Apartment")]),s._v(" 和 "),t("code",[s._v("Person")]),s._v(" 的实例。这两个变量都被初始化为 "),t("code",[s._v("nil")]),s._v("，这正是可选类型的优点：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" john"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" unit4A"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Apartment")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("现在你可以创建特定的 "),t("code",[s._v("Person")]),s._v(" 和 "),t("code",[s._v("Apartment")]),s._v(" 实例并将赋值给 "),t("code",[s._v("john")]),s._v(" 和 "),t("code",[s._v("unit4A")]),s._v(" 变量：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[s._v("john "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John Appleseed"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nunit4A "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Apartment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"4A"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("在两个实例被创建和赋值后，下图表现了强引用的关系。变量 "),t("code",[s._v("john")]),s._v(" 现在有一个指向 "),t("code",[s._v("Person")]),s._v(" 实例的强引用，而变量 "),t("code",[s._v("unit4A")]),s._v(" 有一个指向 "),t("code",[s._v("Apartment")]),s._v(" 实例的强引用：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhmbo/static@master/img/20201111110149.png",alt:"img"}})]),s._v(" "),t("p",[s._v("现在你能够将这两个实例关联在一起，这样人就能有公寓住了，而公寓也有了房客。注意感叹号是用来解包和访问可选变量 "),t("code",[s._v("john")]),s._v(" 和 "),t("code",[s._v("unit4A")]),s._v(" 中的实例，这样实例的属性才能被赋值：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[s._v("john"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apartment "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" unit4A\nunit4A"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tenant "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" john\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("在将两个实例联系在一起之后，强引用的关系如图所示：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhmbo/static@master/img/20201111110202.png",alt:"img"}})]),s._v(" "),t("p",[s._v("不幸的是，这两个实例关联后会产生一个循环强引用。"),t("code",[s._v("Person")]),s._v(" 实例现在有了一个指向 "),t("code",[s._v("Apartment")]),s._v(" 实例的强引用，而 "),t("code",[s._v("Apartment")]),s._v(" 实例也有了一个指向 "),t("code",[s._v("Person")]),s._v(" 实例的强引用。因此，当你断开 "),t("code",[s._v("john")]),s._v(" 和 "),t("code",[s._v("unit4A")]),s._v(" 变量所持有的强引用时，引用计数并不会降为 "),t("code",[s._v("0")]),s._v("，实例也不会被 ARC 销毁：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[s._v("john "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token nil constant"}},[s._v("nil")]),s._v("\nunit4A "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token nil constant"}},[s._v("nil")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("注意，当你把这两个变量设为 "),t("code",[s._v("nil")]),s._v(" 时，没有任何一个析构器被调用。循环强引用会一直阻止 "),t("code",[s._v("Person")]),s._v(" 和 "),t("code",[s._v("Apartment")]),s._v(" 类实例的销毁，这就在你的应用程序中造成了内存泄漏。")]),s._v(" "),t("p",[s._v("在你将 "),t("code",[s._v("john")]),s._v(" 和 "),t("code",[s._v("unit4A")]),s._v(" 赋值为 "),t("code",[s._v("nil")]),s._v(" 后，强引用关系如下图：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhmbo/static@master/img/20201111110226.png",alt:"img"}})]),s._v(" "),t("p",[t("code",[s._v("Person")]),s._v(" 和 "),t("code",[s._v("Apartment")]),s._v(" 实例之间的强引用关系保留了下来并且不会被断开。")]),s._v(" "),t("h2",{attrs:{id:"解决实例之间的循环强引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决实例之间的循环强引用"}},[s._v("#")]),s._v(" 解决实例之间的循环强引用")]),s._v(" "),t("p",[s._v("Swift 提供了两种办法用来解决你在使用类的属性时所遇到的循环强引用问题：弱引用（weak reference）和无主引用（unowned reference）。")]),s._v(" "),t("p",[s._v("弱引用和无主引用允许循环引用中的一个实例引用另一个实例而"),t("em",[s._v("不")]),s._v("保持强引用。这样实例能够互相引用而不产生循环强引用。")]),s._v(" "),t("p",[s._v("当其他的实例有更短的生命周期时，使用弱引用，也就是说，当其他实例析构在先时。在上面公寓的例子中，很显然一个公寓在它的生命周期内会在某个时间段没有它的主人，所以一个弱引用就加在公寓类里面，避免循环引用。相比之下，当其他实例有相同的或者更长生命周期时，请使用无主引用。")]),s._v(" "),t("h3",{attrs:{id:"弱引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#弱引用"}},[s._v("#")]),s._v(" 弱引用")]),s._v(" "),t("p",[t("em",[s._v("弱引用")]),s._v("不会对其引用的实例保持强引用，因而不会阻止 ARC 销毁被引用的实例。这个特性阻止了引用变为循环强引用。声明属性或者变量时，在前面加上 "),t("code",[s._v("weak")]),s._v(" 关键字表明这是一个弱引用。")]),s._v(" "),t("p",[s._v("因为弱引用不会保持所引用的实例，即使引用存在，实例也有可能被销毁。因此，ARC 会在引用的实例被销毁后自动将其弱引用赋值为 "),t("code",[s._v("nil")]),s._v("。并且因为弱引用需要在运行时允许被赋值为 "),t("code",[s._v("nil")]),s._v("，所以它们会被定义为可选类型变量，而不是常量。")]),s._v(" "),t("p",[s._v("你可以像其他可选值一样，检查弱引用的值是否存在，这样可以避免访问已销毁的实例的引用。")]),s._v(" "),t("blockquote",[t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("当 ARC 设置弱引用为 "),t("code",[s._v("nil")]),s._v(" 时，属性观察不会被触发。")])]),s._v(" "),t("p",[s._v("下面的例子跟上面 "),t("code",[s._v("Person")]),s._v(" 和 "),t("code",[s._v("Apartment")]),s._v(" 的例子一致，但是有一个重要的区别。这一次，"),t("code",[s._v("Apartment")]),s._v(" 的 "),t("code",[s._v("tenant")]),s._v(" 属性被声明为弱引用：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("init")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" apartment"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Apartment")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("deinit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(' is being deinitialized"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Apartment")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" unit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("init")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("unit "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" unit "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("weak")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" tenant"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("deinit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Apartment ')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("unit")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(' is being deinitialized"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("然后跟之前一样，建立两个变量（"),t("code",[s._v("john")]),s._v(" 和 "),t("code",[s._v("unit4A")]),s._v("）之间的强引用，并关联两个实例：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" john"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" unit4A"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Apartment")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n\n\njohn "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John Appleseed"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nunit4A "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Apartment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"4A"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\njohn"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("apartment "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" unit4A\nunit4A"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tenant "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" john\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("现在，两个关联在一起的实例的引用关系如下图所示：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhmbo/static@master/img/20201111110326.png",alt:"img"}})]),s._v(" "),t("p",[t("code",[s._v("Person")]),s._v(" 实例依然保持对 "),t("code",[s._v("Apartment")]),s._v(" 实例的强引用，但是 "),t("code",[s._v("Apartment")]),s._v(" 实例只持有对 "),t("code",[s._v("Person")]),s._v(" 实例的弱引用。这意味着当你通过把 "),t("code",[s._v("john")]),s._v(" 变量赋值为 "),t("code",[s._v("nil")]),s._v(" 而断开其所保持的强引用时，再也没有指向 "),t("code",[s._v("Person")]),s._v(" 实例的强引用了：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[s._v("john "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token nil constant"}},[s._v("nil")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印“John Appleseed is being deinitialized”")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("由于再也没有指向 "),t("code",[s._v("Person")]),s._v(" 实例的强引用，该实例会被销毁，且 "),t("code",[s._v("tenant")]),s._v(" 属性会被赋值为 "),t("code",[s._v("nil")]),s._v("：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhmbo/static@master/img/20201111110348.png",alt:"img"}})]),s._v(" "),t("p",[s._v("唯一剩下的指向 "),t("code",[s._v("Apartment")]),s._v(" 实例的强引用来自于变量 "),t("code",[s._v("unit4A")]),s._v("。如果你断开这个强引用，再也没有指向 "),t("code",[s._v("Apartment")]),s._v(" 实例的强引用了：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[s._v("unit4A "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token nil constant"}},[s._v("nil")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印“Apartment 4A is being deinitialized”")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("由于再也没有指向 "),t("code",[s._v("Person")]),s._v(" 实例的强引用，该实例会被销毁：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhmbo/static@master/img/20201111110410.png",alt:"img"}})]),s._v(" "),t("blockquote",[t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("在使用垃圾收集的系统里，弱指针有时用来实现简单的缓冲机制，因为没有强引用的对象只会在内存压力触发垃圾收集时才被销毁。但是在 ARC 中，一旦值的最后一个强引用被移除，就会被立即销毁，这导致弱引用并不适合上面的用途。")])]),s._v(" "),t("h3",{attrs:{id:"无主引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#无主引用"}},[s._v("#")]),s._v(" 无主引用")]),s._v(" "),t("p",[s._v("和弱引用类似，"),t("em",[s._v("无主引用")]),s._v("不会牢牢保持住引用的实例。和弱引用不同的是，无主引用在其他实例有相同或者更长的生命周期时使用。你可以在声明属性或者变量时，在前面加上关键字 "),t("code",[s._v("unowned")]),s._v(" 表示这是一个无主引用。")]),s._v(" "),t("p",[s._v("无主引用通常都被期望拥有值。不过 ARC 无法在实例被销毁后将无主引用设为 "),t("code",[s._v("nil")]),s._v("，因为非可选类型的变量不允许被赋值为 "),t("code",[s._v("nil")]),s._v("。")]),s._v(" "),t("blockquote",[t("p",[s._v("重点")]),s._v(" "),t("p",[s._v("使用无主引用，你"),t("em",[s._v("必须")]),s._v("确保引用始终指向一个未销毁的实例。")]),s._v(" "),t("p",[s._v("如果你试图在实例被销毁后，访问该实例的无主引用，会触发运行时错误。")])]),s._v(" "),t("p",[s._v("下面的例子定义了两个类，"),t("code",[s._v("Customer")]),s._v(" 和 "),t("code",[s._v("CreditCard")]),s._v("，模拟了银行客户和客户的信用卡。这两个类中，每一个都将另外一个类的实例作为自身的属性。这种关系可能会造成循环强引用。")]),s._v(" "),t("p",[t("code",[s._v("Customer")]),s._v(" 和 "),t("code",[s._v("CreditCard")]),s._v(" 之间的关系与前面弱引用例子中 "),t("code",[s._v("Apartment")]),s._v(" 和 "),t("code",[s._v("Person")]),s._v(" 的关系略微不同。在这个数据模型中，一个客户可能有或者没有信用卡，但是一张信用卡总是关联着一个客户。为了表示这种关系，"),t("code",[s._v("Customer")]),s._v(" 类有一个可选类型的 "),t("code",[s._v("card")]),s._v(" 属性，但是 "),t("code",[s._v("CreditCard")]),s._v(" 类有一个非可选类型的 "),t("code",[s._v("customer")]),s._v(" 属性。")]),s._v(" "),t("p",[s._v("此外，只能通过将一个 "),t("code",[s._v("number")]),s._v(" 值和 "),t("code",[s._v("customer")]),s._v(" 实例传递给 "),t("code",[s._v("CreditCard")]),s._v(" 构造器的方式来创建 "),t("code",[s._v("CreditCard")]),s._v(" 实例。这样可以确保当创建 "),t("code",[s._v("CreditCard")]),s._v(" 实例时总是有一个 "),t("code",[s._v("customer")]),s._v(" 实例与之关联。")]),s._v(" "),t("p",[s._v("由于信用卡总是关联着一个客户，因此将 "),t("code",[s._v("customer")]),s._v(" 属性定义为无主引用，用以避免循环强引用：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Customer")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" card"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CreditCard")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("init")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("deinit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(' is being deinitialized"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CreditCard")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UInt64")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unowned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" customer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Customer")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("init")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UInt64")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" customer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Customer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("number "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" number\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("customer "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" customer\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("deinit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Card #')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(' is being deinitialized"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("blockquote",[t("p",[s._v("注意")]),s._v(" "),t("p",[t("code",[s._v("CreditCard")]),s._v(" 类的 "),t("code",[s._v("number")]),s._v(" 属性被定义为 "),t("code",[s._v("UInt64")]),s._v(" 类型而不是 "),t("code",[s._v("Int")]),s._v(" 类型，以确保 "),t("code",[s._v("number")]),s._v(" 属性的存储量在 32 位和 64 位系统上都能足够容纳 16 位的卡号。")])]),s._v(" "),t("p",[s._v("下面的代码片段定义了一个叫 "),t("code",[s._v("john")]),s._v(" 的可选类型 "),t("code",[s._v("Customer")]),s._v(" 变量，用来保存某个特定客户的引用。由于是可选类型，所以变量被初始化为 "),t("code",[s._v("nil")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" john"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Customer")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("现在你可以创建 "),t("code",[s._v("Customer")]),s._v(" 类的实例，用它初始化 "),t("code",[s._v("CreditCard")]),s._v(" 实例，并将新创建的 "),t("code",[s._v("CreditCard")]),s._v(" 实例赋值为客户的 "),t("code",[s._v("card")]),s._v(" 属性：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[s._v("john "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Customer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John Appleseed"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\njohn"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("card "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CreditCard")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234_5678_9012_3456")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" customer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" john"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("在你关联两个实例后，它们的引用关系如下图所示：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhmbo/static@master/img/20201111110444.png",alt:"img"}})]),s._v(" "),t("p",[t("code",[s._v("Customer")]),s._v(" 实例持有对 "),t("code",[s._v("CreditCard")]),s._v(" 实例的强引用，而 "),t("code",[s._v("CreditCard")]),s._v(" 实例持有对 "),t("code",[s._v("Customer")]),s._v(" 实例的无主引用。")]),s._v(" "),t("p",[s._v("由于 "),t("code",[s._v("customer")]),s._v(" 的无主引用，当你断开 "),t("code",[s._v("john")]),s._v(" 变量持有的强引用时，再也没有指向 "),t("code",[s._v("Customer")]),s._v(" 实例的强引用了：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhmbo/static@master/img/20201111110453.png",alt:"img"}})]),s._v(" "),t("p",[s._v("由于再也没有指向 "),t("code",[s._v("Customer")]),s._v(" 实例的强引用，该实例被销毁了。其后，再也没有指向 "),t("code",[s._v("CreditCard")]),s._v(" 实例的强引用，该实例也随之被销毁了：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[s._v("john "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token nil constant"}},[s._v("nil")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印“John Appleseed is being deinitialized”")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印“Card #1234567890123456 is being deinitialized”")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("最后的代码展示了在 "),t("code",[s._v("john")]),s._v(" 变量被设为 "),t("code",[s._v("nil")]),s._v(" 后 "),t("code",[s._v("Customer")]),s._v(" 实例和 "),t("code",[s._v("CreditCard")]),s._v(" 实例的析构器都打印出了“销毁”的信息。")]),s._v(" "),t("blockquote",[t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("上面的例子展示了如何使用安全的无主引用。对于需要禁用运行时的安全检查的情况（例如，出于性能方面的原因），Swift 还提供了不安全的无主引用。与所有不安全的操作一样，你需要负责检查代码以确保其安全性。 你可以通过 "),t("code",[s._v("unowned(unsafe)")]),s._v(" 来声明不安全无主引用。如果你试图在实例被销毁后，访问该实例的不安全无主引用，你的程序会尝试访问该实例之前所在的内存地址，这是一个不安全的操作。")])]),s._v(" "),t("h3",{attrs:{id:"无主引用和隐式解包可选值属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#无主引用和隐式解包可选值属性"}},[s._v("#")]),s._v(" 无主引用和隐式解包可选值属性")]),s._v(" "),t("p",[s._v("上面弱引用和无主引用的例子涵盖了两种常用的需要打破循环强引用的场景。")]),s._v(" "),t("p",[t("code",[s._v("Person")]),s._v(" 和 "),t("code",[s._v("Apartment")]),s._v(" 的例子展示了两个属性的值都允许为 "),t("code",[s._v("nil")]),s._v("，并会潜在的产生循环强引用。这种场景最适合用弱引用来解决。")]),s._v(" "),t("p",[t("code",[s._v("Customer")]),s._v(" 和 "),t("code",[s._v("CreditCard")]),s._v(" 的例子展示了一个属性的值允许为 "),t("code",[s._v("nil")]),s._v("，而另一个属性的值不允许为 "),t("code",[s._v("nil")]),s._v("，这也可能会产生循环强引用。这种场景最适合通过无主引用来解决。")]),s._v(" "),t("p",[s._v("然而，存在着第三种场景，在这种场景中，两个属性都必须有值，并且初始化完成后永远不会为 "),t("code",[s._v("nil")]),s._v("。在这种场景中，需要一个类使用无主属性，而另外一个类使用隐式解包可选值属性。")]),s._v(" "),t("p",[s._v("这使两个属性在初始化完成后能被直接访问（不需要可选解包），同时避免了循环引用。这一节将为你展示如何建立这种关系。")]),s._v(" "),t("p",[s._v("下面的例子定义了两个类，"),t("code",[s._v("Country")]),s._v(" 和 "),t("code",[s._v("City")]),s._v("，每个类将另外一个类的实例保存为属性。在这个模型中，每个国家必须有首都，每个城市必须属于一个国家。为了实现这种关系，"),t("code",[s._v("Country")]),s._v(" 类拥有一个 "),t("code",[s._v("capitalCity")]),s._v(" 属性，而 "),t("code",[s._v("City")]),s._v(" 类有一个 "),t("code",[s._v("country")]),s._v(" 属性：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Country")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" capitalCity"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("City")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("init")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" capitalName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("capitalCity "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("City")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" capitalName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" country"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("City")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unowned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" country"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Country")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("init")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" country"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Country")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("country "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" country\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("p",[s._v("为了建立两个类的依赖关系，"),t("code",[s._v("City")]),s._v(" 的构造器接受一个 "),t("code",[s._v("Country")]),s._v(" 实例作为参数，并且将实例保存到 "),t("code",[s._v("country")]),s._v(" 属性。")]),s._v(" "),t("p",[t("code",[s._v("Country")]),s._v(" 的构造器调用了 "),t("code",[s._v("City")]),s._v(" 的构造器。然而，只有 "),t("code",[s._v("Country")]),s._v(" 的实例完全初始化后，"),t("code",[s._v("Country")]),s._v(" 的构造器才能把 "),t("code",[s._v("self")]),s._v(" 传给 "),t("code",[s._v("City")]),s._v(" 的构造器。在 "),t("RouterLink",{attrs:{to:"/pages/1b072a/#两段式构造过程"}},[s._v("两段式构造过程")]),s._v(" 中有具体描述。")],1),s._v(" "),t("p",[s._v("为了满足这种需求，通过在类型结尾处加上感叹号（"),t("code",[s._v("City!")]),s._v("）的方式，将 "),t("code",[s._v("Country")]),s._v(" 的 "),t("code",[s._v("capitalCity")]),s._v(" 属性声明为隐式解包可选值类型的属性。这意味着像其他可选类型一样，"),t("code",[s._v("capitalCity")]),s._v(" 属性的默认值为 "),t("code",[s._v("nil")]),s._v("，但是不需要解包它的值就能访问它。在 "),t("RouterLink",{attrs:{to:"/pages/9e2f81/#隐式解析可选类型"}},[s._v("隐式解析可选类型")]),s._v(" 中有描述。")],1),s._v(" "),t("p",[s._v("由于 "),t("code",[s._v("capitalCity")]),s._v(" 默认值为 "),t("code",[s._v("nil")]),s._v("，一旦 "),t("code",[s._v("Country")]),s._v(" 的实例在构造器中给 "),t("code",[s._v("name")]),s._v(" 属性赋值后，整个初始化过程就完成了。这意味着一旦 "),t("code",[s._v("name")]),s._v(" 属性被赋值后，"),t("code",[s._v("Country")]),s._v(" 的构造器就能引用并传递隐式的 "),t("code",[s._v("self")]),s._v("。"),t("code",[s._v("Country")]),s._v(" 的构造器在赋值 "),t("code",[s._v("capitalCity")]),s._v(" 时，就能将 "),t("code",[s._v("self")]),s._v(" 作为参数传递给 "),t("code",[s._v("City")]),s._v(" 的构造器。")]),s._v(" "),t("p",[s._v("上述的意义在于你可以通过一条语句同时创建 "),t("code",[s._v("Country")]),s._v(" 和 "),t("code",[s._v("City")]),s._v(" 的实例，而不产生循环强引用，并且 "),t("code",[s._v("capitalCity")]),s._v(" 的属性能被直接访问，而不需要通过感叹号来解包它的可选值：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" country "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Country")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Canada"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" capitalName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Ottawa"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("country"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s capital city is called ")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("country"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("capitalCity"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印“Canada's capital city is called Ottawa”")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("在上面的例子中，使用隐式解包可选值值意味着满足了类的构造器的两个构造阶段的要求。"),t("code",[s._v("capitalCity")]),s._v(" 属性在初始化完成后，能像非可选值一样使用和存取，同时还避免了循环强引用。")]),s._v(" "),t("h2",{attrs:{id:"闭包的循环强引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#闭包的循环强引用"}},[s._v("#")]),s._v(" 闭包的循环强引用")]),s._v(" "),t("p",[s._v("前面我们看到了循环强引用是在两个类实例属性互相保持对方的强引用时产生的，还知道了如何用弱引用和无主引用来打破这些循环强引用。")]),s._v(" "),t("p",[s._v("循环强引用还会发生在当你将一个闭包赋值给类实例的某个属性，并且这个闭包体中又使用了这个类实例时。这个闭包体中可能访问了实例的某个属性，例如 "),t("code",[s._v("self.someProperty")]),s._v("，或者闭包中调用了实例的某个方法，例如 "),t("code",[s._v("self.someMethod()")]),s._v("。这两种情况都导致了闭包“捕获”"),t("code",[s._v("self")]),s._v("，从而产生了循环强引用。")]),s._v(" "),t("p",[s._v("循环强引用的产生，是因为闭包和类相似，都是引用类型。当你把一个闭包赋值给某个属性时，你是将这个闭包的引用赋值给了属性。实质上，这跟之前的问题是一样的——两个强引用让彼此一直有效。但是，和两个类实例不同，这次一个是类实例，另一个是闭包。")]),s._v(" "),t("p",[s._v("Swift 提供了一种优雅的方法来解决这个问题，称之为 "),t("code",[s._v("闭包捕获列表")]),s._v("（closure capture list）。同样的，在学习如何用闭包捕获列表打破循环强引用之前，先来了解一下这里的循环强引用是如何产生的，这对我们很有帮助。")]),s._v(" "),t("p",[s._v("下面的例子为你展示了当一个闭包引用了 "),t("code",[s._v("self")]),s._v(" 后是如何产生一个循环强引用的。例子中定义了一个叫 "),t("code",[s._v("HTMLElement")]),s._v(" 的类，用一种简单的模型表示 HTML 文档中的一个单独的元素：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HTMLElement")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" text"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("lazy")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" asHTML"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" text "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("text "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("text")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("</")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('>"')])]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(' />"')])]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("init")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" text"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token nil constant"}},[s._v("nil")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("text "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" text\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("deinit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(' is being deinitialized"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br")])]),t("p",[t("code",[s._v("HTMLElement")]),s._v(" 类定义了一个 "),t("code",[s._v("name")]),s._v(" 属性来表示这个元素的名称，例如代表头部元素的 "),t("code",[s._v('"h1"')]),s._v("，代表段落的 "),t("code",[s._v('"p"')]),s._v("，或者代表换行的 "),t("code",[s._v('"br"')]),s._v("。"),t("code",[s._v("HTMLElement")]),s._v(" 还定义了一个可选属性 "),t("code",[s._v("text")]),s._v("，用来设置 HTML 元素呈现的文本。")]),s._v(" "),t("p",[s._v("除了上面的两个属性，"),t("code",[s._v("HTMLElement")]),s._v(" 还定义了一个 "),t("code",[s._v("lazy")]),s._v(" 属性 "),t("code",[s._v("asHTML")]),s._v("。这个属性引用了一个将 "),t("code",[s._v("name")]),s._v(" 和 "),t("code",[s._v("text")]),s._v(" 组合成 HTML 字符串片段的闭包。该属性是 "),t("code",[s._v("Void -> String")]),s._v(" 类型，或者可以理解为“一个没有参数，返回 "),t("code",[s._v("String")]),s._v(" 的函数”。")]),s._v(" "),t("p",[s._v("默认情况下，闭包赋值给了 "),t("code",[s._v("asHTML")]),s._v(" 属性，这个闭包返回一个代表 HTML 标签的字符串。如果 "),t("code",[s._v("text")]),s._v(" 值存在，该标签就包含可选值 "),t("code",[s._v("text")]),s._v("；如果 "),t("code",[s._v("text")]),s._v(" 不存在，该标签就不包含文本。对于段落元素，根据 "),t("code",[s._v("text")]),s._v(" 是 "),t("code",[s._v('"some text"')]),s._v(" 还是 "),t("code",[s._v("nil")]),s._v("，闭包会返回 "),t("code",[s._v('"<p>some text</p>"')]),s._v(" 或者 "),t("code",[s._v('"<p />"')]),s._v("。")]),s._v(" "),t("p",[s._v("可以像实例方法那样去命名、使用 "),t("code",[s._v("asHTML")]),s._v(" 属性。然而，由于 "),t("code",[s._v("asHTML")]),s._v(" 是闭包而不是实例方法，如果你想改变特定 HTML 元素的处理方式的话，可以用自定义的闭包来取代默认值。")]),s._v(" "),t("p",[s._v("例如，可以将一个闭包赋值给 "),t("code",[s._v("asHTML")]),s._v(" 属性，这个闭包能在 "),t("code",[s._v("text")]),s._v(" 属性是 "),t("code",[s._v("nil")]),s._v(" 时使用默认文本，这是为了避免返回一个空的 HTML 标签：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" heading "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HTMLElement")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"h1"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" defaultText "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"some default text"')])]),s._v("\nheading"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("asHTML "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("heading"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("heading"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("text "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("??")]),s._v(" defaultText")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("</")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("heading"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('>"')])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("heading"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("asHTML")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印“<h1>some default text</h1>”")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("blockquote",[t("p",[s._v("注意")]),s._v(" "),t("p",[t("code",[s._v("asHTML")]),s._v(" 声明为 "),t("code",[s._v("lazy")]),s._v(" 属性，因为只有当元素确实需要被处理为 HTML 输出的字符串时，才需要使用 "),t("code",[s._v("asHTML")]),s._v("。也就是说，在默认的闭包中可以使用 "),t("code",[s._v("self")]),s._v("，因为只有当初始化完成以及 "),t("code",[s._v("self")]),s._v(" 确实存在后，才能访问 "),t("code",[s._v("lazy")]),s._v(" 属性。")])]),s._v(" "),t("p",[t("code",[s._v("HTMLElement")]),s._v(" 类只提供了一个构造器，通过 "),t("code",[s._v("name")]),s._v(" 和 "),t("code",[s._v("text")]),s._v("（如果有的话）参数来初始化一个新元素。该类也定义了一个析构器，当 "),t("code",[s._v("HTMLElement")]),s._v(" 实例被销毁时，打印一条消息。")]),s._v(" "),t("p",[s._v("下面的代码展示了如何用 "),t("code",[s._v("HTMLElement")]),s._v(" 类创建实例并打印消息：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" paragraph"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HTMLElement")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HTMLElement")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"p"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" text"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello, world"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("paragraph"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("asHTML")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印“<p>hello, world</p>”")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("blockquote",[t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("上面的 "),t("code",[s._v("paragraph")]),s._v(" 变量定义为可选类型的 "),t("code",[s._v("HTMLElement")]),s._v("，因此我们可以赋值 "),t("code",[s._v("nil")]),s._v(" 给它来演示循环强引用。")])]),s._v(" "),t("p",[s._v("不幸的是，上面写的 "),t("code",[s._v("HTMLElement")]),s._v(" 类产生了类实例和作为 "),t("code",[s._v("asHTML")]),s._v(" 默认值的闭包之间的循环强引用。循环强引用如下图所示：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhmbo/static@master/img/20201111110506.png",alt:"img"}})]),s._v(" "),t("p",[s._v("实例的 "),t("code",[s._v("asHTML")]),s._v(" 属性持有闭包的强引用。但是，闭包在其闭包体内使用了 "),t("code",[s._v("self")]),s._v("（引用了 "),t("code",[s._v("self.name")]),s._v(" 和 "),t("code",[s._v("self.text")]),s._v("），因此闭包捕获了 "),t("code",[s._v("self")]),s._v("，这意味着闭包又反过来持有了 "),t("code",[s._v("HTMLElement")]),s._v(" 实例的强引用。这样两个对象就产生了循环强引用。（更多关于闭包捕获值的信息，请参考 "),t("RouterLink",{attrs:{to:"/pages/7904a7/#值捕获"}},[s._v("值捕获")]),s._v("）。")],1),s._v(" "),t("blockquote",[t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("虽然闭包多次使用了 "),t("code",[s._v("self")]),s._v("，它只捕获 "),t("code",[s._v("HTMLElement")]),s._v(" 实例的一个强引用。")])]),s._v(" "),t("p",[s._v("如果设置 "),t("code",[s._v("paragraph")]),s._v(" 变量为 "),t("code",[s._v("nil")]),s._v("，打破它持有的 "),t("code",[s._v("HTMLElement")]),s._v(" 实例的强引用，"),t("code",[s._v("HTMLElement")]),s._v(" 实例和它的闭包都不会被销毁，也是因为循环强引用：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[s._v("paragraph "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token nil constant"}},[s._v("nil")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("注意，"),t("code",[s._v("HTMLElement")]),s._v(" 的析构器中的消息并没有被打印，证明了 "),t("code",[s._v("HTMLElement")]),s._v(" 实例并没有被销毁。")]),s._v(" "),t("h2",{attrs:{id:"解决闭包的循环强引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决闭包的循环强引用"}},[s._v("#")]),s._v(" 解决闭包的循环强引用")]),s._v(" "),t("p",[s._v("在定义闭包时同时定义捕获列表作为闭包的一部分，通过这种方式可以解决闭包和类实例之间的循环强引用。捕获列表定义了闭包体内捕获一个或者多个引用类型的规则。跟解决两个类实例间的循环强引用一样，声明每个捕获的引用为弱引用或无主引用，而不是强引用。应当根据代码关系来决定使用弱引用还是无主引用。")]),s._v(" "),t("blockquote",[t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("Swift 有如下要求：只要在闭包内使用 "),t("code",[s._v("self")]),s._v(" 的成员，就要用 "),t("code",[s._v("self.someProperty")]),s._v(" 或者 "),t("code",[s._v("self.someMethod()")]),s._v("（而不只是 "),t("code",[s._v("someProperty")]),s._v(" 或 "),t("code",[s._v("someMethod()")]),s._v("）。这提醒你可能会一不小心就捕获了 "),t("code",[s._v("self")]),s._v("。")])]),s._v(" "),t("h3",{attrs:{id:"定义捕获列表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义捕获列表"}},[s._v("#")]),s._v(" 定义捕获列表")]),s._v(" "),t("p",[s._v("捕获列表中的每一项都由一对元素组成，一个元素是 "),t("code",[s._v("weak")]),s._v(" 或 "),t("code",[s._v("unowned")]),s._v(" 关键字，另一个元素是类实例的引用（例如 "),t("code",[s._v("self")]),s._v("）或初始化过的变量（如 "),t("code",[s._v("delegate = self.delegate")]),s._v("）。这些项在方括号中用逗号分开。")]),s._v(" "),t("p",[s._v("如果闭包有参数列表和返回类型，把捕获列表放在它们前面：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("lazy")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" someClosure "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unowned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("weak")]),s._v(" delegate "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("delegate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" stringToProcess"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里是闭包的函数体")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("如果闭包没有指明参数列表或者返回类型，它们会通过上下文推断，那么可以把捕获列表和关键字 "),t("code",[s._v("in")]),s._v(" 放在闭包最开始的地方：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("lazy")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" someClosure "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unowned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("weak")]),s._v(" delegate "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("delegate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里是闭包的函数体")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h3",{attrs:{id:"弱引用和无主引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#弱引用和无主引用"}},[s._v("#")]),s._v(" 弱引用和无主引用")]),s._v(" "),t("p",[s._v("在闭包和捕获的实例总是互相引用并且总是同时销毁时，将闭包内的捕获定义为 "),t("code",[s._v("无主引用")]),s._v("。")]),s._v(" "),t("p",[s._v("相反的，在被捕获的引用可能会变为 "),t("code",[s._v("nil")]),s._v(" 时，将闭包内的捕获定义为 "),t("code",[s._v("弱引用")]),s._v("。弱引用总是可选类型，并且当引用的实例被销毁后，弱引用的值会自动置为 "),t("code",[s._v("nil")]),s._v("。这使我们可以在闭包体内检查它们是否存在。")]),s._v(" "),t("blockquote",[t("p",[s._v("注意")]),s._v(" "),t("p",[s._v("如果被捕获的引用绝对不会变为 "),t("code",[s._v("nil")]),s._v("，应该用无主引用，而不是弱引用。")])]),s._v(" "),t("p",[s._v("前面的 "),t("code",[s._v("HTMLElement")]),s._v(" 例子中，无主引用是正确的解决循环强引用的方法。这样编写 "),t("code",[s._v("HTMLElement")]),s._v(" 类来避免循环强引用：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HTMLElement")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" text"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("lazy")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" asHTML"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unowned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" text "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("text "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("text")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("</")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('>"')])]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(' />"')])]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("init")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" text"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token nil constant"}},[s._v("nil")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("text "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" text\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("deinit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"')]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("\\(")]),t("span",{pre:!0,attrs:{class:"token interpolation"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v(' is being deinitialized"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br")])]),t("p",[s._v("上面的 "),t("code",[s._v("HTMLElement")]),s._v(" 实现和之前的实现一致，除了在 "),t("code",[s._v("asHTML")]),s._v(" 闭包中多了一个捕获列表。这里，捕获列表是 "),t("code",[s._v("[unowned self]")]),s._v("，表示“将 "),t("code",[s._v("self")]),s._v(" 捕获为无主引用而不是强引用”。")]),s._v(" "),t("p",[s._v("和之前一样，我们可以创建并打印 "),t("code",[s._v("HTMLElement")]),s._v(" 实例：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" paragraph"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HTMLElement")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HTMLElement")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"p"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" text"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello, world"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("paragraph"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("asHTML")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印“<p>hello, world</p>”")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("使用捕获列表后引用关系如下图所示：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/zhmbo/static@master/img/20201111110535.png",alt:"img"}})]),s._v(" "),t("p",[s._v("这一次，闭包以无主引用的形式捕获 "),t("code",[s._v("self")]),s._v("，并不会持有 "),t("code",[s._v("HTMLElement")]),s._v(" 实例的强引用。如果将 "),t("code",[s._v("paragraph")]),s._v(" 赋值为 "),t("code",[s._v("nil")]),s._v("，"),t("code",[s._v("HTMLElement")]),s._v(" 实例将会被销毁，并能看到它的析构器打印出的消息：")]),s._v(" "),t("div",{staticClass:"language-swift line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-swift"}},[t("code",[s._v("paragraph "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token nil constant"}},[s._v("nil")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印“p is being deinitialized”")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("你可以查看 "),t("RouterLink",{attrs:{to:"/pages/c2fef9/#捕获列表"}},[s._v("捕获列表")]),s._v(" 章节，获取更多关于捕获列表的信息。")],1)])}),[],!1,null,null,null);t.default=e.exports}}]);