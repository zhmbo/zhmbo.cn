(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{409:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("Swift 中存在四种表达式：前缀表达式，二元表达式，基本表达式和后缀表达式。表达式在返回一个值的同时还可以引发副作用。")]),t._v(" "),s("p",[t._v("通过前缀表达式和二元表达式可以对简单表达式使用各种运算符。基本表达式从概念上讲是最简单的一种表达式，它是一种访问值的方式。后缀表达式则允许你建立复杂的表达式，例如函数调用和成员访问。每种表达式都在下面有详细论述。")]),t._v(" "),s("blockquote",[s("p",[t._v("表达式语法")])]),t._v(" "),s("h4",{attrs:{id:"expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#expression"}},[t._v("#")]),t._v(" expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("try 运算符")]),t._v("可选 "),s("a",{attrs:{href:""}},[t._v("前缀表达式")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("二元表达式列表")]),t._v("可选")])]),t._v(" "),s("h4",{attrs:{id:"expression-list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#expression-list"}},[t._v("#")]),t._v(" expression-list")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("表达式列表")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("表达式")]),t._v(" | "),s("a",{attrs:{href:""}},[t._v("表达式")]),t._v(" "),s("strong",[t._v(",")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("表达式列表")])])]),t._v(" "),s("h2",{attrs:{id:"前缀表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前缀表达式"}},[t._v("#")]),t._v(" 前缀表达式")]),t._v(" "),s("p",[t._v("前缀表达式由可选的前缀运算符和表达式组成。前缀运算符只接收一个参数，表达式则紧随其后。")]),t._v(" "),s("p",[t._v("关于这些运算符的更多信息，请参阅 "),s("a",{attrs:{href:""}},[t._v("基本运算符")]),t._v(" 和 "),s("a",{attrs:{href:""}},[t._v("高级运算符")]),t._v("。")]),t._v(" "),s("p",[t._v("关于 Swift 标准库提供的运算符的更多信息，请参阅 "),s("a",{attrs:{href:"https://developer.apple.com/documentation/swift/operator_declarations",target:"_blank",rel:"noopener noreferrer"}},[s("em",[t._v("Operators Declarations")]),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("除了标准库运算符，你也可以对某个变量使用 "),s("code",[t._v("&")]),t._v(" 运算符，从而将其传递给函数的输入输出参数。更多信息，请参阅 "),s("RouterLink",{attrs:{to:"/pages/756349/#输入输出参数"}},[t._v("输入输出参数")]),t._v("。")],1),t._v(" "),s("blockquote",[s("p",[t._v("前缀表达式语法")])]),t._v(" "),s("h4",{attrs:{id:"prefix-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prefix-expression"}},[t._v("#")]),t._v(" prefix-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("前缀表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("前缀运算符")]),t._v("可选 "),s("a",{attrs:{href:""}},[t._v("后缀表达式")])]),t._v(" "),s("p",[s("em",[t._v("前缀表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("输入输出表达式")])])]),t._v(" "),s("h4",{attrs:{id:"in-out-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#in-out-expression"}},[t._v("#")]),t._v(" in-out-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("输入输出表达式")]),t._v(" → "),s("strong",[t._v("&")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("标识符")])])]),t._v(" "),s("h3",{attrs:{id:"try-运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#try-运算符"}},[t._v("#")]),t._v(" Try 运算符")]),t._v(" "),s("p",[t._v("try 表达式由 "),s("code",[t._v("try")]),t._v(" 运算符加上紧随其后的可抛出错误的表达式组成，形式如下：")]),t._v(" "),s("blockquote",[s("p",[t._v("try "),s("code",[t._v("可抛出错误的表达式")])])]),t._v(" "),s("p",[t._v("可选的 try 表达式由 "),s("code",[t._v("try?")]),t._v(" 运算符加上紧随其后的可抛出错误的表达式组成，形式如下：")]),t._v(" "),s("blockquote",[s("p",[t._v("try? "),s("code",[t._v("可抛出错误的表达式")])])]),t._v(" "),s("p",[t._v("如果可抛出错误的表达式没有抛出错误，整个表达式返回的可选值将包含可抛出错误的表达式的返回值，否则，该可选值为 "),s("code",[t._v("nil")]),t._v("。")]),t._v(" "),s("p",[t._v("强制的 try 表达式由 "),s("code",[t._v("try!")]),t._v(" 运算符加上紧随其后的可抛出错误的表达式组成，形式如下：")]),t._v(" "),s("blockquote",[s("p",[t._v("try! "),s("code",[t._v("可抛出错误的表达式")])])]),t._v(" "),s("p",[t._v("如果可抛出错误的表达式抛出了错误，将会引发运行时错误。")]),t._v(" "),s("p",[t._v("在二元运算符左侧的表达式被标记上 "),s("code",[t._v("try")]),t._v("、"),s("code",[t._v("try?")]),t._v(" 或者 "),s("code",[t._v("try!")]),t._v(" 时，这个运算符对整个二元表达式都产生作用。也就是说，你可以使用括号来明确运算符的作用范围。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[t._v("sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("someThrowingFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("anotherThrowingFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// try 对两个函数调用都产生作用")]),t._v("\nsum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("someThrowingFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("anotherThrowingFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// try 对两个函数调用都产生作用")]),t._v("\nsum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("someThrowingFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("anotherThrowingFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误：try 只对第一个函数调用产生作用")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[s("code",[t._v("try")]),t._v(" 表达式不能出现在二元运算符的的右侧，除非二元运算符是赋值运算符或者 "),s("code",[t._v("try")]),t._v(" 表达式是被圆括号括起来的。")]),t._v(" "),s("p",[t._v("关于 "),s("code",[t._v("try")]),t._v("、"),s("code",[t._v("try?")]),t._v(" 和 "),s("code",[t._v("try!")]),t._v(" 的更多信息，以及该如何使用的例子，请参阅 "),s("RouterLink",{attrs:{to:"/pages/cc5b2d/"}},[t._v("错误处理")]),t._v("。")],1),t._v(" "),s("blockquote",[s("p",[t._v("Try 表达式语法")])]),t._v(" "),s("h4",{attrs:{id:"try-operator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#try-operator"}},[t._v("#")]),t._v(" try-operator")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("try 运算符")]),t._v(" → "),s("strong",[t._v("try")]),t._v(" | "),s("strong",[t._v("try?")]),t._v(" | "),s("strong",[t._v("try!")])])]),t._v(" "),s("h2",{attrs:{id:"二元表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二元表达式"}},[t._v("#")]),t._v(" 二元表达式")]),t._v(" "),s("p",[s("em",[t._v("二元表达式")]),t._v("由中缀运算符和左右参数表达式组成。形式如下：")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[t._v("左侧参数` `二元运算符` `右侧参数\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("p",[t._v("关于这些运算符的更多信息，请参阅 "),s("a",{attrs:{href:""}},[t._v("基本运算符")]),t._v(" 和 "),s("a",{attrs:{href:""}},[t._v("高级运算符")]),t._v("。")]),t._v(" "),s("p",[t._v("关于 Swift 标准库提供的运算符的更多信息，请参阅 "),s("a",{attrs:{href:"https://developer.apple.com/documentation/swift/operator_declarations",target:"_blank",rel:"noopener noreferrer"}},[s("em",[t._v("Swift Standard Library Operators Reference")]),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("blockquote",[s("p",[t._v("注意")]),t._v(" "),s("p",[t._v("在解析时，一个二元表达式将作为一个扁平列表表示，然后根据运算符的优先级，再进一步进行组合。例如，"),s("code",[t._v("2 + 3 * 5")]),t._v(" 首先被看作具有五个元素的列表，即 "),s("code",[t._v("2")]),t._v("、"),s("code",[t._v("+")]),t._v("、"),s("code",[t._v("3")]),t._v("、"),s("code",[t._v("*")]),t._v("、"),s("code",[t._v("5")]),t._v("，随后根据运算符优先级组合为 "),s("code",[t._v("(2 + (3 * 5))")]),t._v("。")])]),t._v(" "),s("h4",{attrs:{id:"binary-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#binary-expression"}},[t._v("#")]),t._v(" binary-expression")]),t._v(" "),s("blockquote",[s("p",[t._v("二元表达式语法")]),t._v(" "),s("p",[s("em",[t._v("二元表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("二元运算符")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("前缀表达式")])]),t._v(" "),s("p",[s("em",[t._v("二元表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("赋值运算符")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("try 运算符")]),t._v("可选 "),s("a",{attrs:{href:""}},[t._v("前缀表达式")])]),t._v(" "),s("p",[s("em",[t._v("二元表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("条件运算符")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("try 运算符")]),t._v("可选 "),s("a",{attrs:{href:""}},[t._v("前缀表达式")])]),t._v(" "),s("p",[s("em",[t._v("二元表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("类型转换运算符")])])]),t._v(" "),s("h4",{attrs:{id:"binary-expressions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#binary-expressions"}},[t._v("#")]),t._v(" binary-expressions")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("二元表达式列表")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("二元表达式")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("二元表达式列表")]),t._v("可选")])]),t._v(" "),s("h3",{attrs:{id:"赋值表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#赋值表达式"}},[t._v("#")]),t._v(" 赋值表达式")]),t._v(" "),s("p",[t._v("赋值表达式会为某个给定的表达式赋值，形式如下；")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[t._v("表达式` "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" `值\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("p",[t._v("右边的值会被赋值给左边的表达式。如果左边表达式是一个元组，那么右边必须是一个具有同样元素个数的元组。（嵌套元组也是允许的。）右边的值中的每一部分都会被赋值给左边的表达式中的相应部分。例如：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9.45")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// a 为 "test"，b 为 12，c 为 3，9.45 会被忽略')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("赋值运算符不返回任何值。")]),t._v(" "),s("blockquote",[s("p",[t._v("赋值运算符语法")])]),t._v(" "),s("h4",{attrs:{id:"assignment-operator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assignment-operator"}},[t._v("#")]),t._v(" assignment-operator")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("赋值运算符")]),t._v(" → "),s("strong",[t._v("=")])])]),t._v(" "),s("h3",{attrs:{id:"三元条件运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三元条件运算符"}},[t._v("#")]),t._v(" 三元条件运算符")]),t._v(" "),s("p",[s("em",[t._v("三元条件运算符")]),t._v("会根据条件来对两个给定表达式中的一个进行求值，形式如下：")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[t._v("条件` "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" `表达式（条件为真则使用）` "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" `表达式（条件为假则使用）\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("p",[t._v("如果条件为真，那么对第一个表达式进行求值并返回结果。否则，对第二个表达式进行求值并返回结果。未使用的表达式不会进行求值。")]),t._v(" "),s("p",[t._v("关于使用三元条件运算符的例子，请参阅 "),s("a",{attrs:{href:""}},[t._v("三元条件运算符")]),t._v("。")]),t._v(" "),s("blockquote",[s("p",[t._v("三元条件运算符语法")])]),t._v(" "),s("h4",{attrs:{id:"conditional-operator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conditional-operator"}},[t._v("#")]),t._v(" conditional-operator")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("三元条件运算符")]),t._v(" → "),s("strong",[t._v("?")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("表达式")]),t._v(" "),s("strong",[t._v(":")])])]),t._v(" "),s("h3",{attrs:{id:"类型转换运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型转换运算符"}},[t._v("#")]),t._v(" 类型转换运算符")]),t._v(" "),s("p",[t._v("有 4 种类型转换运算符："),s("code",[t._v("is")]),t._v("、"),s("code",[t._v("as")]),t._v("、"),s("code",[t._v("as?")]),t._v(" 和 "),s("code",[t._v("as!")]),t._v("。它们有如下的形式：")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[t._v("表达式` "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" `类型\n表达式` "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" `类型\n表达式` "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" `类型\n表达式` "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" `类型\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])])]),t._v(" "),s("p",[s("code",[t._v("is")]),t._v(" 运算符在运行时检查表达式能否向下转化为指定的类型，如果可以则返回 "),s("code",[t._v("ture")]),t._v("，否则返回 "),s("code",[t._v("false")]),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("as")]),t._v(" 运算符在编译时执行向上转换和桥接。向上转换可将表达式转换成父类的实例而无需使用任何中间变量。以下表达式是等价的：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Function for Any"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Function for Int"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印“Function for Int”")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Any")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印“Function for Any”")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印“Function for Any”")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("p",[t._v("桥接可将 Swift 标准库中的类型（例如 "),s("code",[t._v("String")]),t._v("）作为一个与之相关的 Foundation 类型（例如 "),s("code",[t._v("NSString")]),t._v("）来使用，而不需要新建一个实例。关于桥接的更多信息，请参阅 "),s("a",{attrs:{href:"https://developer.apple.com/documentation/swift/imported_c_and_objective_c_apis/working_with_foundation_types",target:"_blank",rel:"noopener noreferrer"}},[s("em",[t._v("Working with Foundation Types")]),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("as?")]),t._v(" 运算符有条件地执行类型转换，返回目标类型的可选值。在运行时，如果转换成功，返回的可选值将包含转换后的值，否则返回 "),s("code",[t._v("nil")]),t._v("。如果在编译时就能确定转换一定会成功或是失败，则会导致编译报错。")]),t._v(" "),s("p",[s("code",[t._v("as!")]),t._v(" 运算符执行强制类型转换，返回目标类型的非可选值。如果转换失败，则会导致运行时错误。表达式 "),s("code",[t._v("x as! T")]),t._v(" 效果等同于 "),s("code",[t._v("(x as? T)!")]),t._v("。")]),t._v(" "),s("p",[t._v("关于类型转换的更多内容和例子，请参阅 "),s("RouterLink",{attrs:{to:"/pages/757c02/"}},[t._v("类型转换")]),t._v("。")],1),t._v(" "),s("h4",{attrs:{id:"type-casting-operator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type-casting-operator"}},[t._v("#")]),t._v(" type-casting-operator")]),t._v(" "),s("blockquote",[s("p",[t._v("类型转换运算符语法")]),t._v(" "),s("p",[s("em",[t._v("类型转换运算符")]),t._v(" → "),s("strong",[t._v("is")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("类型")])]),t._v(" "),s("p",[s("em",[t._v("类型转换运算符")]),t._v(" → "),s("strong",[t._v("as")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("类型")])]),t._v(" "),s("p",[s("em",[t._v("类型转换运算符")]),t._v(" → "),s("strong",[t._v("as")]),t._v(" "),s("strong",[t._v("?")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("类型")])]),t._v(" "),s("p",[s("em",[t._v("类型转换运算符")]),t._v(" → "),s("strong",[t._v("as")]),t._v(" "),s("strong",[t._v("!")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("类型")])])]),t._v(" "),s("h2",{attrs:{id:"基本表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本表达式"}},[t._v("#")]),t._v(" 基本表达式")]),t._v(" "),s("p",[s("em",[t._v("基本表达式")]),t._v("是最基本的表达式。它们可以单独使用，也可以跟前缀表达式、二元表达式、后缀表达式组合使用。")]),t._v(" "),s("blockquote",[s("p",[t._v("基本表达式语法")])]),t._v(" "),s("h4",{attrs:{id:"primary-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#primary-expression"}},[t._v("#")]),t._v(" primary-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("基本表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("标识符")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("泛型实参子句")]),t._v("可选")]),t._v(" "),s("p",[s("em",[t._v("基本表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("字面量表达式")])]),t._v(" "),s("p",[s("em",[t._v("基本表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("self 表达式")])]),t._v(" "),s("p",[s("em",[t._v("基本表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("父类表达式")])]),t._v(" "),s("p",[s("em",[t._v("基本表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("闭包表达式")])]),t._v(" "),s("p",[s("em",[t._v("基本表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("圆括号表达式")])]),t._v(" "),s("p",[s("em",[t._v("基本表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("隐式成员表达式")])]),t._v(" "),s("p",[s("em",[t._v("基本表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("通配符表达式")])]),t._v(" "),s("p",[s("em",[t._v("基本表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("选择器表达式")])]),t._v(" "),s("p",[s("em",[t._v("基本表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("key-path字符串表达式")])])]),t._v(" "),s("h3",{attrs:{id:"字面量表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字面量表达式"}},[t._v("#")]),t._v(" 字面量表达式")]),t._v(" "),s("p",[s("em",[t._v("字面量表达式")]),t._v("可由普通字面量（例如字符串或者数字），字典或者数组字面量，或者下面列表中的特殊字面量组成：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("字面量")]),t._v(" "),s("th",[t._v("类型")]),t._v(" "),s("th",[t._v("值")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("#file")])]),t._v(" "),s("td",[s("code",[t._v("String")])]),t._v(" "),s("td",[t._v("所在的文件名及模块")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("#filePath")])]),t._v(" "),s("td",[s("code",[t._v("String")])]),t._v(" "),s("td",[t._v("所在的文件路径")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("#line")])]),t._v(" "),s("td",[s("code",[t._v("Int")])]),t._v(" "),s("td",[t._v("所在的行数")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("#column")])]),t._v(" "),s("td",[s("code",[t._v("Int")])]),t._v(" "),s("td",[t._v("所在的列数")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("#function")])]),t._v(" "),s("td",[s("code",[t._v("String")])]),t._v(" "),s("td",[t._v("所在的声明的名字")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("#dsohandle")])]),t._v(" "),s("td",[s("code",[t._v("UnsafeRawPointer")])]),t._v(" "),s("td",[t._v("所使用的 DSO（动态共享对象）句柄")])])])]),t._v(" "),s("p",[s("code",[t._v("#file")]),t._v(" 表达式的值的格式是 "),s("em",[t._v("module")]),t._v("/"),s("em",[t._v("file")]),t._v("，"),s("em",[t._v("file")]),t._v(" 是表达式所在的文件名，"),s("em",[t._v("module")]),t._v(" 是文件所所在的模块名。"),s("code",[t._v("#filePath")]),t._v(" 表达式的字符串值是表达式所在的文件在整个文件系统里的路径。所有这些值可以被 "),s("code",[t._v("#sourceLocation")]),t._v(" 改变，详见 "),s("a",{attrs:{href:""}},[t._v("行控制语句")]),t._v("。")]),t._v(" "),s("blockquote",[s("p",[t._v("注意")]),t._v(" "),s("p",[t._v("要解析 "),s("code",[t._v("#file")]),t._v(" 表达式，第一个斜杠（/）之前的文本作为模块名，最后一个斜杠之后的文本作为文件名。将来，该字符串可能包含多个斜杠，例如 "),s("code",[t._v("MyModule/some/disambiguation/MyFile.swift")]),t._v("。")])]),t._v(" "),s("p",[t._v("对于 "),s("code",[t._v("#function")]),t._v("，在函数中会返回当前函数的名字，在方法中会返回当前方法的名字，在属性的存取器中会返回属性的名字，在特殊的成员如 "),s("code",[t._v("init")]),t._v(" 或 "),s("code",[t._v("subscript")]),t._v(" 中会返回这个关键字的名字，在某个文件中会返回当前模块的名字。")]),t._v(" "),s("p",[t._v("当其作为函数或者方法的默认参数值时，该字面量的值取决于函数或方法的调用环境。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("logFunctionName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal constant"}},[t._v("#function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("myFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("logFunctionName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印“myFunction()”")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("数组字面量是值的有序集合，形式如下：")]),t._v(" "),s("blockquote",[s("p",[t._v("["),s("code",[t._v("值 1")]),t._v(", "),s("code",[t._v("值 2")]),t._v(", "),s("code",[t._v("...")]),t._v("]")])]),t._v(" "),s("p",[t._v("数组中的最后一个表达式可以紧跟一个逗号。数组字面量的类型是 "),s("code",[t._v("[T]")]),t._v("，这个 "),s("code",[t._v("T")]),t._v(" 就是数组中元素的类型。如果数组中包含多种类型，"),s("code",[t._v("T")]),t._v(" 则是跟这些类型最近的的公共父类型。空数组字面量由一组方括号定义，可用来创建特定类型的空数组。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" emptyArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("字典字面量是一个包含无序键值对的集合，形式如下：")]),t._v(" "),s("blockquote",[s("p",[t._v("["),s("code",[t._v("键 1")]),t._v(" : "),s("code",[t._v("值 1")]),t._v(", "),s("code",[t._v("键 2")]),t._v(" : "),s("code",[t._v("值 2")]),t._v(", "),s("code",[t._v("...")]),t._v("]")])]),t._v(" "),s("p",[t._v("字典中的最后一个表达式可以紧跟一个逗号。字典字面量的类型是 "),s("code",[t._v("[Key : Value]")]),t._v("，"),s("code",[t._v("Key")]),t._v(" 表示键的类型，"),s("code",[t._v("Value")]),t._v(" 表示值的类型。如果字典中包含多种类型，那么 "),s("code",[t._v("Key")]),t._v(" 表示的类型则为所有键最接近的公共父类型，"),s("code",[t._v("Value")]),t._v(" 与之相似。一个空的字典字面量由方括号中加一个冒号组成（"),s("code",[t._v("[:]")]),t._v("），从而与空数组字面量区分开，可以使用空字典字面量来创建特定类型的字典。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" emptyDictionary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("Xcode 使用 playground 字面量对程序编辑器中的颜色、文件或者图片创建可交互的展示。在 Xcode 之外的空白文本中，playground 字面量使用一种特殊的字面量语法来展示。")]),t._v(" "),s("p",[t._v("更多关于在 Xcode 中使用 playground 字面量的信息，请参阅 "),s("a",{attrs:{href:"https://help.apple.com/xcode/mac/current/#/dev4c60242fc",target:"_blank",rel:"noopener noreferrer"}},[t._v("添加颜色、文件或图片字面量"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("blockquote",[s("p",[t._v("字面量表达式语法")]),t._v(" "),s("h4",{attrs:{id:"literal-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#literal-expression"}},[t._v("#")]),t._v(" literal-expression")]),t._v(" "),s("p",[s("em",[t._v("字面量表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("字面量")])]),t._v(" "),s("p",[s("em",[t._v("字面量表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("数组字面量")]),t._v(" | "),s("a",{attrs:{href:""}},[t._v("字典字面量")]),t._v(" | "),s("a",{attrs:{href:""}},[t._v("练习场字面量")])]),t._v(" "),s("p",[s("em",[t._v("字面量表达式")]),t._v(" → "),s("strong",[t._v("#file")]),t._v(" ｜ "),s("strong",[t._v("#filePath")]),t._v(" | "),s("strong",[t._v("#line")]),t._v(" | "),s("strong",[t._v("#column")]),t._v(" | "),s("strong",[t._v("#function")])]),t._v(" "),s("h4",{attrs:{id:"array-literal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-literal"}},[t._v("#")]),t._v(" array-literal")]),t._v(" "),s("p",[s("em",[t._v("数组字面量")]),t._v(" → ["),s("a",{attrs:{href:""}},[t._v("数组字面量项列表")]),t._v("可选 "),s("strong",[t._v("]")])]),t._v(" "),s("h4",{attrs:{id:"array-literal-items"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-literal-items"}},[t._v("#")]),t._v(" array-literal-items")]),t._v(" "),s("p",[s("em",[t._v("数组字面量项列表")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("数组字面量项")]),t._v(" **,**可选 | "),s("a",{attrs:{href:""}},[t._v("数组字面量项")]),t._v(" "),s("strong",[t._v(",")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("数组字面量项列表")])]),t._v(" "),s("h4",{attrs:{id:"array-literal-item"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-literal-item"}},[t._v("#")]),t._v(" array-literal-item")]),t._v(" "),s("p",[s("em",[t._v("数组字面量项")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("表达式")])]),t._v(" "),s("h4",{attrs:{id:"dictionary-literal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dictionary-literal"}},[t._v("#")]),t._v(" dictionary-literal")]),t._v(" "),s("p",[s("em",[t._v("字典字面量")]),t._v(" → ["),s("a",{attrs:{href:""}},[t._v("字典字面量项列表")]),t._v(" "),s("strong",[t._v("]")]),t._v(" | "),s("strong",[t._v("[")]),t._v(" "),s("strong",[t._v(":")]),t._v(" "),s("strong",[t._v("]")])]),t._v(" "),s("h4",{attrs:{id:"dictionary-literal-items"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dictionary-literal-items"}},[t._v("#")]),t._v(" dictionary-literal-items")]),t._v(" "),s("p",[s("em",[t._v("字典字面量项列表")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("字典字面量项")]),t._v(" **,**可选 | "),s("a",{attrs:{href:""}},[t._v("字典字面量项")]),t._v(" "),s("strong",[t._v(",")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("字典字面量项列表")])]),t._v(" "),s("h4",{attrs:{id:"dictionary-literal-item"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dictionary-literal-item"}},[t._v("#")]),t._v(" dictionary-literal-item")]),t._v(" "),s("p",[s("em",[t._v("字典字面量项")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("表达式")]),t._v(" "),s("strong",[t._v(":")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("表达式")]),t._v("。")]),t._v(" "),s("h4",{attrs:{id:"playground-literal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#playground-literal"}},[t._v("#")]),t._v(" playground-literal")]),t._v(" "),s("p",[s("em",[t._v("playground 字面量")]),t._v(" → "),s("strong",[t._v("#colorLiteral ( red :")]),t._v(" "),s("a",{attrs:{href:""}},[s("strong",[t._v("表达式")])]),t._v(" "),s("strong",[t._v(", green :")]),s("a",{attrs:{href:""}},[s("strong",[t._v("表达式")])]),t._v(" "),s("strong",[t._v("[表达式](#e")]),s("a",{attrs:{href:""}},[s("em",[s("strong",[t._v("表达式")])])]),t._v(" "),s("strong",[t._v("xpression) , blue :")]),s("a",{attrs:{href:""}},[s("strong",[t._v("表达式")])]),t._v(" "),s("strong",[t._v(", alpha :")]),t._v(" "),s("a",{attrs:{href:""}},[s("strong",[t._v("表达式")])]),t._v(" "),s("strong",[t._v(")")])]),t._v(" "),s("p",[s("em",[t._v("playground 字面量")]),t._v(" → "),s("strong",[t._v("#fileLiteral ( resourceName :")]),t._v(" "),s("a",{attrs:{href:""}},[s("strong",[t._v("表达式")])]),t._v(" "),s("strong",[t._v(")")])]),t._v(" "),s("h4",{attrs:{id:"playground-字面量-→-imageliteral-resourcename-表达式-self-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#playground-字面量-→-imageliteral-resourcename-表达式-self-expression"}},[t._v("#")]),t._v(" playground 字面量 "),s("em",[t._v("→ *#imageLiteral ( resourceName :")]),t._v(" "),s("a",{attrs:{href:""}},[s("em",[t._v("表达式")])]),t._v(" *)*self-expression")])]),t._v(" "),s("h3",{attrs:{id:"self-表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#self-表达式"}},[t._v("#")]),t._v(" Self 表达式")]),t._v(" "),s("p",[s("code",[t._v("self")]),t._v(" 表达式是对当前类型或者当前实例的显式引用，它有如下形式：")]),t._v(" "),s("blockquote",[s("p",[t._v("self")]),t._v(" "),s("p",[t._v("self."),s("code",[t._v("成员名称")])]),t._v(" "),s("p",[t._v("self["),s("code",[t._v("下标索引")]),t._v("]")]),t._v(" "),s("p",[t._v("self("),s("code",[t._v("构造器参数")]),t._v(")")]),t._v(" "),s("p",[t._v("self.init("),s("code",[t._v("构造器参数")]),t._v(")")])]),t._v(" "),s("p",[t._v("如果在构造器、下标、实例方法中，"),s("code",[t._v("self")]),t._v(" 引用的是当前类型的实例。在一个类型方法中，"),s("code",[t._v("self")]),t._v(" 引用的是当前的类型。")]),t._v(" "),s("p",[t._v("当访问成员时，"),s("code",[t._v("self")]),t._v(" 可用来区分重名变量，例如函数的参数：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeClass")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" greeting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("greeting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("greeting "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" greeting\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("在 "),s("code",[t._v("mutating")]),t._v(" 方法中，你可以对 "),s("code",[t._v("self")]),t._v(" 重新赋值：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Point")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mutating")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("moveByX")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("deltaX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y deltaY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Point")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" deltaX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" deltaY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("blockquote",[s("p",[t._v("Self 表达式语法")])]),t._v(" "),s("h4",{attrs:{id:"self-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#self-expression"}},[t._v("#")]),t._v(" self-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("self 表达式")]),t._v(" → "),s("strong",[t._v("self")]),t._v(" | "),s("a",{attrs:{href:""}},[t._v("self 方法表达式")]),t._v(" ｜ "),s("a",{attrs:{href:""}},[t._v("self 下标表达式")]),t._v(" | "),s("a",{attrs:{href:""}},[t._v("self 构造器表达式")])])]),t._v(" "),s("h4",{attrs:{id:"self-method-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#self-method-expression"}},[t._v("#")]),t._v(" self-method-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("self 方法表达式")]),t._v(" → "),s("strong",[t._v("self")]),t._v(" "),s("strong",[t._v(".")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("标识符")])])]),t._v(" "),s("h4",{attrs:{id:"self-subscript-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#self-subscript-expression"}},[t._v("#")]),t._v(" self-subscript-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("self 下标表达式")]),t._v(" → "),s("strong",[t._v("self")]),t._v(" "),s("strong",[t._v("[")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("函数调用参数表")]),t._v(" "),s("strong",[t._v("]")])])]),t._v(" "),s("h4",{attrs:{id:"self-initializer-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#self-initializer-expression"}},[t._v("#")]),t._v(" self-initializer-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("self 构造器表达式")]),t._v(" → "),s("strong",[t._v("self")]),t._v(" "),s("strong",[t._v(".")]),t._v(" "),s("strong",[t._v("init")])])]),t._v(" "),s("h3",{attrs:{id:"父类表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#父类表达式"}},[t._v("#")]),t._v(" 父类表达式")]),t._v(" "),s("p",[s("em",[t._v("父类")]),t._v("表达式可以使我们在某个类中访问它的父类，它有如下形式：")]),t._v(" "),s("blockquote",[s("p",[t._v("super."),s("code",[t._v("成员名称")])]),t._v(" "),s("p",[t._v("super["),s("code",[t._v("下标索引")]),t._v("]")]),t._v(" "),s("p",[t._v("super.init("),s("code",[t._v("构造器参数")]),t._v(")")])]),t._v(" "),s("p",[t._v("第一种形式用来访问父类的某个成员，第二种形式用来访问父类的下标，第三种形式用来访问父类的构造器。")]),t._v(" "),s("p",[t._v("子类可以通过父类表达式在它们的成员、下标和构造器中使用父类中的实现。")]),t._v(" "),s("blockquote",[s("p",[t._v("父类表达式语法")])]),t._v(" "),s("h4",{attrs:{id:"superclass-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#superclass-expression"}},[t._v("#")]),t._v(" superclass-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("父类表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("父类方法表达式")]),t._v(" | "),s("a",{attrs:{href:""}},[t._v("父类下标表达式")]),t._v(" | "),s("a",{attrs:{href:""}},[t._v("父类构造器表达式")])])]),t._v(" "),s("h4",{attrs:{id:"superclass-method-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#superclass-method-expression"}},[t._v("#")]),t._v(" superclass-method-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("父类方法表达式")]),t._v(" → "),s("strong",[t._v("super")]),t._v(" "),s("strong",[t._v(".")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("标识符")])])]),t._v(" "),s("h4",{attrs:{id:"superclass-subscript-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#superclass-subscript-expression"}},[t._v("#")]),t._v(" superclass-subscript-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("父类下标表达式")]),t._v(" → "),s("strong",[t._v("super")]),t._v(" ["),s("a",{attrs:{href:""}},[t._v("函数调用参数表")]),t._v(" "),s("strong",[t._v("]")])])]),t._v(" "),s("h4",{attrs:{id:"superclass-initializer-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#superclass-initializer-expression"}},[t._v("#")]),t._v(" superclass-initializer-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("父类构造器表达式")]),t._v(" → "),s("strong",[t._v("super")]),t._v(" "),s("strong",[t._v(".")]),t._v(" "),s("strong",[t._v("init")])])]),t._v(" "),s("h3",{attrs:{id:"闭包表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包表达式"}},[t._v("#")]),t._v(" 闭包表达式")]),t._v(" "),s("p",[s("em",[t._v("闭包表达式")]),t._v("会创建一个闭包，在其他语言中也叫 "),s("em",[t._v("lambda")]),t._v(" 或"),s("em",[t._v("匿名")]),t._v("函数。跟函数一样，闭包包含了待执行的代码，不同的是闭包还会捕获所在环境中的常量和变量。它的形式如下：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" type "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n    statements\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("闭包的参数声明形式跟函数一样，请参阅 "),s("a",{attrs:{href:""}},[t._v("函数声明")]),t._v("。")]),t._v(" "),s("p",[t._v("闭包还有几种特殊的形式，能让闭包使用起来更加简洁：")]),t._v(" "),s("ul",[s("li",[t._v("闭包可以省略它的参数和返回值的类型。如果省略了参数名和所有的类型，也要省略 "),s("code",[t._v("in")]),t._v(" 关键字。如果被省略的类型无法被编译器推断，那么就会导致编译错误。")]),t._v(" "),s("li",[t._v("闭包可以省略参数名，参数会被隐式命名为 "),s("code",[t._v("$")]),t._v(" 加上其索引位置，例如 "),s("code",[t._v("$0")]),t._v("、"),s("code",[t._v("$1")]),t._v("、"),s("code",[t._v("$2")]),t._v(" 分别表示第一个、第二个、第三个参数，以此类推。")]),t._v(" "),s("li",[t._v("如果闭包中只包含一个表达式，那么该表达式的结果就会被视为闭包的返回值。表达式结果的类型也会被推断为闭包的返回类型。")])]),t._v(" "),s("p",[t._v("下面几个闭包表达式是等价的：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[t._v("myFunction "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\nmyFunction "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\nmyFunction "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token short-argument"}},[t._v("$0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token short-argument"}},[t._v("$1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\nmyFunction "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token short-argument"}},[t._v("$0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token short-argument"}},[t._v("$1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("p",[t._v("关于如何将闭包作为参数来传递的内容，请参阅 "),s("a",{attrs:{href:""}},[t._v("函数调用表达式")]),t._v("。")]),t._v(" "),s("p",[t._v("使用闭包表达式时，可以不必将其存储在一个变量或常量中，例如作为函数调用的一部分来立即使用一个闭包。在上面的例子中，传入 "),s("code",[t._v("myFunction")]),t._v(" 的闭包表达式就是这种立即使用类型的闭包。因此，一个闭包是否逃逸与其使用时的上下文相关。一个会被立即调用或者作为函数的非逃逸参数传递的闭包表达式是非逃逸的，否则，这个闭包表达式是逃逸的。")]),t._v(" "),s("p",[t._v("关于逃逸闭包的内容，请参阅 "),s("a",{attrs:{href:""}},[t._v("逃逸闭包")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"捕获列表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#捕获列表"}},[t._v("#")]),t._v(" 捕获列表")]),t._v(" "),s("p",[t._v("默认情况下，闭包会捕获附近作用域中的常量和变量，并使用强引用指向它们。你可以通过一个"),s("em",[t._v("捕获列表")]),t._v("来显式指定它的捕获行为。")]),t._v(" "),s("p",[t._v("捕获列表在参数列表之前，由中括号括起来，里面是由逗号分隔的一系列表达式。一旦使用了捕获列表，就必须使用 "),s("code",[t._v("in")]),t._v(" 关键字，即使省略了参数名、参数类型和返回类型。")]),t._v(" "),s("p",[t._v("捕获列表中的项会在闭包创建时被初始化。每一项都会用闭包附近作用域中的同名常量或者变量的值初始化。例如下面的代码示例中，捕获列表包含 "),s("code",[t._v("a")]),t._v(" 而不包含 "),s("code",[t._v("b")]),t._v("，这将导致这两个变量具有不同的行为。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" closure "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("closure")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印“0 10”")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[t._v("在示例中，变量 "),s("code",[t._v("b")]),t._v(" 只有一个，然而，变量 "),s("code",[t._v("a")]),t._v(" 有两个，一个在闭包外，一个在闭包内。闭包内的变量 "),s("code",[t._v("a")]),t._v(" 会在闭包创建时用闭包外的变量 "),s("code",[t._v("a")]),t._v(" 的值来初始化，除此之外它们并无其他联系。这意味着在闭包创建后，改变某个 "),s("code",[t._v("a")]),t._v(" 的值都不会对另一个 "),s("code",[t._v("a")]),t._v(" 的值造成任何影响。与此相反，闭包内外都是同一个变量 "),s("code",[t._v("b")]),t._v("，因此在闭包外改变其值，闭包内的值也会受影响。")]),t._v(" "),s("p",[t._v("如果闭包捕获的值具有引用语义则有所不同。例如，下面示例中，有两个变量 "),s("code",[t._v("x")]),t._v("，一个在闭包外，一个在闭包内，由于它们的值是引用语义，虽然这是两个不同的变量，它们却都引用着同一实例。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SimpleClass")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SimpleClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SimpleClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" closure "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\nx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\ny"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("closure")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印“10 10”")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("p",[t._v("如果捕获列表中的值是类类型，你可以使用 "),s("code",[t._v("weak")]),t._v(" 或者 "),s("code",[t._v("unowned")]),t._v(" 来修饰它，闭包会分别用弱引用和无主引用来捕获该值。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[t._v("myFunction "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 隐式强引用捕获")]),t._v("\nmyFunction "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 显式强引用捕获")]),t._v("\nmyFunction "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("weak")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 弱引用捕获")]),t._v("\nmyFunction "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unowned")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无主引用捕获")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("在捕获列表中，也可以将任意表达式的值绑定到一个常量上。该表达式会在闭包被创建时进行求值，闭包会按照指定的引用类型来捕获表达式的值。例如：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以弱引用捕获 self.parent 并赋值给 parent")]),t._v("\nmyFunction "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("weak")]),t._v(" parent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parent"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("关于闭包表达式的更多信息和例子，请参阅 "),s("a",{attrs:{href:""}},[t._v("闭包表达式")]),t._v("。关于捕获列表的更多信息和例子，请参阅 "),s("a",{attrs:{href:""}},[t._v("解决闭包引起的循环强引用")]),t._v("。")]),t._v(" "),s("blockquote",[s("p",[t._v("闭包表达式语法")]),t._v(" "),s("h4",{attrs:{id:"closure-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#closure-expression"}},[t._v("#")]),t._v(" closure-expression")]),t._v(" "),s("p",[s("em",[t._v("闭包表达式")]),t._v(" → "),s("strong",[t._v("{")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("闭包签名")]),t._v("可选 "),s("a",{attrs:{href:""}},[t._v("语句")]),t._v(" "),s("strong",[t._v("}")])]),t._v(" "),s("h4",{attrs:{id:"closure-signature"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#closure-signature"}},[t._v("#")]),t._v(" closure-signature")]),t._v(" "),s("p",[t._v("闭包签名 "),s("em",[t._v("→")]),t._v(" "),s("a",{attrs:{href:""}},[s("em",[t._v("参数子句")])]),t._v(" "),s("a",{attrs:{href:""}},[s("em",[t._v("函数结果")])]),s("em",[t._v("可选 *in")])]),t._v(" "),s("p",[s("em",[t._v("闭包签名")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("标识符列表")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("函数结果")]),t._v("可选 "),s("strong",[t._v("in")])]),t._v(" "),s("p",[s("em",[t._v("闭包签名")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("捕获列表")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("参数子句")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("函数结果")]),t._v("可选 "),s("strong",[t._v("in")])]),t._v(" "),s("p",[s("em",[t._v("闭包签名")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("捕获列表")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("标识符列表")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("函数结果")]),t._v("可选 "),s("strong",[t._v("in")])]),t._v(" "),s("p",[s("em",[t._v("闭包签名")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("捕获列表")]),t._v(" "),s("strong",[t._v("in")])]),t._v(" "),s("h4",{attrs:{id:"capture-list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#capture-list"}},[t._v("#")]),t._v(" capture-list")]),t._v(" "),s("p",[t._v("捕获列表 "),s("em",[t._v("→ [")]),t._v(" "),s("a",{attrs:{href:""}},[s("em",[t._v("捕获列表项列表")])]),t._v(" *"),s("em",[t._v("]")])]),t._v(" "),s("h4",{attrs:{id:"capture-list-items"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#capture-list-items"}},[t._v("#")]),t._v(" capture-list-items")]),t._v(" "),s("p",[s("em",[t._v("捕获列表项列表")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("捕获列表项")]),t._v(" | "),s("a",{attrs:{href:""}},[t._v("捕获列表项")]),t._v(" "),s("strong",[t._v(",")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("捕获列表项列表")])]),t._v(" "),s("h4",{attrs:{id:"capture-list-item"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#capture-list-item"}},[t._v("#")]),t._v(" capture-list-item")]),t._v(" "),s("p",[s("em",[t._v("捕获列表项")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("捕获说明符")]),t._v("可选 "),s("a",{attrs:{href:""}},[t._v("表达式")])]),t._v(" "),s("h4",{attrs:{id:"capture-specifier"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#capture-specifier"}},[t._v("#")]),t._v(" capture-specifier")]),t._v(" "),s("p",[s("em",[t._v("捕获说明符")]),t._v(" → "),s("strong",[t._v("weak")]),t._v(" | "),s("strong",[t._v("unowned")]),t._v(" | "),s("strong",[t._v("unowned(safe)")]),t._v(" | "),s("strong",[t._v("unowned(unsafe)")])])]),t._v(" "),s("h3",{attrs:{id:"隐式成员表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐式成员表达式"}},[t._v("#")]),t._v(" 隐式成员表达式")]),t._v(" "),s("p",[t._v("若类型可被推断出来，可以使用"),s("em",[t._v("隐式成员表达式")]),t._v("来访问某个类型的成员（例如某个枚举成员或某个类型方法），形式如下：")]),t._v(" "),s("blockquote",[s("p",[t._v("."),s("code",[t._v("成员名称")])])]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyEnumeration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeValue")]),t._v("\nx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnotherValue")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("blockquote",[s("p",[t._v("隐式成员表达式语法")])]),t._v(" "),s("h4",{attrs:{id:"implicit-member-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#implicit-member-expression"}},[t._v("#")]),t._v(" implicit-member-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("隐式成员表达式")]),t._v(" → "),s("strong",[t._v(".")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("标识符")])])]),t._v(" "),s("h3",{attrs:{id:"圆括号表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#圆括号表达式"}},[t._v("#")]),t._v(" 圆括号表达式")]),t._v(" "),s("p",[s("em",[t._v("圆括号表达式")]),t._v("是由圆括号包围的表达式。你可以用圆括号说明成组的表达式的先后操作。成组的圆括号不会改变表达式的类型 - 例如 "),s("code",[t._v("(1)")]),t._v(" 的类型就是简单的 "),s("code",[t._v("Int")]),t._v("。")]),t._v(" "),s("blockquote",[s("p",[t._v("圆括号表达式语法")])]),t._v(" "),s("h4",{attrs:{id:"parenthesized-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parenthesized-expression"}},[t._v("#")]),t._v(" parenthesized-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("圆括号表达式")]),t._v(" → "),s("strong",[t._v("(")]),t._v(" "),s("a",{attrs:{href:""}},[s("strong",[t._v("表达式")])]),t._v(" "),s("strong",[t._v(")")])])]),t._v(" "),s("h3",{attrs:{id:"元组表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元组表达式"}},[t._v("#")]),t._v(" 元组表达式")]),t._v(" "),s("p",[s("em",[t._v("元组表达式")]),t._v("由圆括号和其中多个逗号分隔的子表达式组成。每个子表达式前面可以有一个标识符，用冒号隔开。元组表达式形式如下：")]),t._v(" "),s("blockquote",[s("p",[t._v("("),s("code",[t._v("标识符 1")]),t._v(" : "),s("code",[t._v("表达式 1")]),t._v(", "),s("code",[t._v("标识符 2")]),t._v(" : "),s("code",[t._v("表达式 2")]),t._v(", "),s("code",[t._v("...")]),t._v(")")])]),t._v(" "),s("p",[t._v("元组表达式里的每一个标识符在表达式作用域里必须是唯一的。在嵌套的元组表达式中，同嵌套层级里的标识符也必须是唯一的。例如，"),s("code",[t._v("(a: 10, a: 20)")]),t._v(" 是不合法的，因为标签 "),s("code",[t._v("a")]),t._v(" 在同一层级出现了两次。然而，"),s("code",[t._v("(a: 10, b: (a: 1, x: 2))")]),t._v(" 是合法的，尽管 "),s("code",[t._v("a")]),t._v(" 出现了两次，但有一次在外层元组里，一次在内层元组里。")]),t._v(" "),s("p",[t._v("元组表达式可以一个表达式都没有，也可以包含两个或是更多的表达式。单个表达式用括号括起来就是括号表达式了。")]),t._v(" "),s("blockquote",[s("p",[t._v("注意")]),t._v(" "),s("p",[t._v("在 Swift 中，空的元组表达式和空的元组类型都写作 "),s("code",[t._v("()")]),t._v("。由于 "),s("code",[t._v("Void")]),t._v(" 是 "),s("code",[t._v("()")]),t._v(" 的类型别名，因此可以使用它来表示空的元组类型。虽然如此，"),s("code",[t._v("Void")]),t._v(" 就像所有的类型别名一样，永远是一个类型——不能表示空的元组表达式。")]),t._v(" "),s("p",[t._v("元组表达式语法")])]),t._v(" "),s("h4",{attrs:{id:"tuple-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tuple-expression"}},[t._v("#")]),t._v(" tuple-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("元组表达式")]),t._v(" → "),s("strong",[t._v("( )")]),t._v(" | "),s("strong",[t._v("(")]),s("a",{attrs:{href:""}},[t._v("元组元素")]),t._v("， "),s("a",{attrs:{href:""}},[t._v("元组元素列表")]),t._v(" "),s("strong",[t._v(")")])])]),t._v(" "),s("h4",{attrs:{id:"tuple-element-list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tuple-element-list"}},[t._v("#")]),t._v(" tuple-element-list")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("元组元素列表")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("元组元素")]),t._v(" | "),s("a",{attrs:{href:""}},[t._v("元组元素")]),t._v(" "),s("strong",[t._v(",")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("元组元素列表")])])]),t._v(" "),s("h4",{attrs:{id:"tuple-element"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tuple-element"}},[t._v("#")]),t._v(" tuple-element")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("元组元素")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("表达式")]),t._v(" | "),s("a",{attrs:{href:""}},[t._v("标识符")]),t._v(" "),s("strong",[t._v(":")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("表达式")])])]),t._v(" "),s("h3",{attrs:{id:"通配符表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通配符表达式"}},[t._v("#")]),t._v(" 通配符表达式")]),t._v(" "),s("p",[s("em",[t._v("通配符表达式")]),t._v("可以在赋值过程中显式忽略某个值。例如下面的代码中，"),s("code",[t._v("10")]),t._v(" 被赋值给 "),s("code",[t._v("x")]),t._v("，而 "),s("code",[t._v("20")]),t._v(" 则被忽略：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// x 为 10，20 被忽略")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("blockquote",[s("p",[t._v("通配符表达式语法")])]),t._v(" "),s("h4",{attrs:{id:"wildcard-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wildcard-expression"}},[t._v("#")]),t._v(" wildcard-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("通配符表达式")]),t._v(" → "),s("strong",[t._v("_")])])]),t._v(" "),s("h3",{attrs:{id:"key-path-表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#key-path-表达式"}},[t._v("#")]),t._v(" Key-path 表达式")]),t._v(" "),s("p",[t._v("Key-path 表达式引用一个类型的属性或下标。在动态语言中使场景可以使用 Key-path 表达式，例如观察键值对。格式为：")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("\\类型名.路径")])])]),t._v(" "),s("p",[s("em",[t._v("类型名")]),t._v("是一个具体类型的名称，包含任何泛型参数，例如 "),s("code",[t._v("String")]),t._v("、"),s("code",[t._v("[Int]")]),t._v(" 或 "),s("code",[t._v("Set<Int>")]),t._v("。")]),t._v(" "),s("p",[s("em",[t._v("路径")]),t._v("可由属性名称、下标、可选链表达式或者强制解包表达式组成。以上任意 key-path 组件可以以任何顺序重复多次。")]),t._v(" "),s("p",[t._v("在编译期，key-path 表达式会被一个 "),s("a",{attrs:{href:"https://developer.apple.com/documentation/swift/keypath",target:"_blank",rel:"noopener noreferrer"}},[t._v("KeyPath"),s("OutboundLink")],1),t._v(" 类的实例替换。")]),t._v(" "),s("p",[t._v("对于所有类型，都可以通过传递 key-path 参数到下标方法 "),s("code",[t._v("subscript(keyPath:)")]),t._v(" 来访问它的值。例如：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeStructure")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" someValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeStructure")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("someValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" pathToProperty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeStructure")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someValue\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("keyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pathToProperty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值为 12")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[t._v("在一些可以通过类型推断来确定所访问的具体类型的上下文中，可以省略 key-path 前的类型名字。下面的代码使用 "),s("code",[t._v("\\.someProperty")]),t._v(" 代替了 "),s("code",[t._v("SomeClass.someProperty")]),t._v(" ：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSObject")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token attribute atrule"}},[t._v("@objc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("dynamic")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" someProperty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("someProperty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someProperty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" someProperty\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("someProperty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someProperty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" change "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("p",[t._v("使用 "),s("code",[t._v("self")]),t._v(" 作为路径可以创建一个恒等 key path ("),s("code",[t._v("\\.self")]),t._v(")。恒等 key path 可以作为整个实例的引用，因此你仅需一步操作便可以利用它来访问以及修改其存储的所有数据。例如：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" compoundValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等价于 compoundValue = (a: 10, b: 20)")]),t._v("\ncompoundValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("keyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("通过点语法，可以让路径包含多个属性名称，以此来访问某实例的属性的属性。下面的代码使用 key-path 表达式 "),s("code",[t._v("\\OuterStructure.outer.someValue")]),t._v(" 来访问 "),s("code",[t._v("OuterStructure")]),t._v(" 类型中 "),s("code",[t._v("outer")]),t._v(" 属性的 "),s("code",[t._v("someValue")]),t._v(" 属性。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OuterStructure")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" outer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeStructure")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("someValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("outer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeStructure")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("someValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" someValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" nested "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OuterStructure")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("someValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" nestedKeyPath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OuterStructure")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("outer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someValue\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" nestedValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nested"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("keyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nestedKeyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nestedValue 的值为 24")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("p",[t._v("路径中也可以包含使用中括号的下标访问，只要下标访问的参数类型满足 "),s("code",[t._v("Hashable")]),t._v(" 协议即可。下面的例子在 key path 中使用了下标来访问数组的第二个元素。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" greetings "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hola"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bonjour"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"안녕"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myGreeting "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" greetings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("keyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// myGreeting 的值为 'hola'")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("下标访问中使用的值可以是一个变量或者字面量，并且 key-path 表达式会使用值语义来捕获此值。下面的代码在 key-path 表达式和闭包中都使用了 "),s("code",[t._v("index")]),t._v(" 变量来访问 "),s("code",[t._v("greetings")]),t._v(" 数组的第三个元素。当 "),s("code",[t._v("index")]),t._v(" 被修改时，key-path 表达式仍旧引用数组第三个元素，而闭包则使用了新的索引值。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" path "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" strings "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" strings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("greetings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("keyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印 "bonjour"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("greetings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印 "bonjour"')]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 'index' 设置为一个新的值不会影响到 'path'")]),t._v("\nindex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("greetings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("keyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印 "bonjour"')]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'fn' 闭包使用了新值。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("greetings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印 "안녕"')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br")])]),s("p",[t._v("路径可以使用可选链和强制解包。下面的代码在 key path 中使用了可选链来访问可选字符串的属性。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" firstGreeting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" greetings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("first\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("firstGreeting"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印 "Optional(5)"')]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用 key path 实现同样的功能")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" greetings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("keyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("first"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印 "Optional(5)"')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("可以混合使用各种 key path 组件来访问一些深度嵌套类型的值。下面的代码通过组合不同的组件，使用 key-path 表达式访问了一个字典数组中不同的值和属性。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" interestingNumbers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prime"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                          "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"triangular"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                          "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hexagonal"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("45")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("66")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("91")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("interestingNumbers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("keyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prime"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印 "Optional([2, 3, 5, 7, 11, 13, 17])"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("interestingNumbers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("keyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prime"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印 "2"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("interestingNumbers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("keyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hexagonal"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印 "7"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("interestingNumbers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("keyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hexagonal"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bitWidth"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印 "64"')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[t._v("你可以在平时提供函数或者闭包的上下文里使用 key path 表达式。特别地，你可以用根类型是 "),s("code",[t._v("SomeType")]),t._v(" 和路径产生 "),s("code",[t._v("Value")]),t._v(" 类型值的 key path 表达式来替换类型是 "),s("code",[t._v("(SomeType) -> Value")]),t._v(" 的函数或者闭包。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Task")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" description"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" completed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bool")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" toDoList "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Task")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("description"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Practice ping-pong."')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" completed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Task")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("description"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Buy a pirate costume."')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" completed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Task")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("description"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Visit Boston in the Fall."')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" completed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 下面两种写法是等价的。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" descriptions "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" toDoList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("completed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("description"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" descriptions2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" toDoList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("filter "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token short-argument"}},[t._v("$0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("completed "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token short-argument"}},[t._v("$0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("description "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("p",[t._v("任何 key path 表达式的副作用发生的关键在于表达式在哪里被执行。例如，如果你在 key path 表达式中的一个下标里使用函数调用，该函数只会在表达式计算的时候调用一次，而不是每次这个 key path 被使用的时候。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("makeIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Made an index"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 下面这行调用 makeIndex()。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" taskKeyPath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Task")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印 "Made an index"')]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用 taskKeyPath 不会再次调用 makeIndex()。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" someTask "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" toDoList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("keyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" taskKeyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[t._v("关于更多如何使用 key path 与 Objective-C APIs 交互的信息，请参阅 "),s("a",{attrs:{href:"https://developer.apple.com/documentation/swift/using_objective_c_runtime_features_in_swift",target:"_blank",rel:"noopener noreferrer"}},[t._v("在 Swift 中使用 Objective-C 运行时特性"),s("OutboundLink")],1),t._v("。关于更多 key-value 编程和 key-value 观察的信息，请参阅 "),s("a",{attrs:{href:"https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/KeyValueCoding/index.html#//apple-ref/doc/uid/10000107i",target:"_blank",rel:"noopener noreferrer"}},[t._v("Key-Value 编程"),s("OutboundLink")],1),t._v(" 和 "),s("a",{attrs:{href:"https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/KeyValueObserving/KeyValueObserving.html#//apple-ref/doc/uid/10000177i",target:"_blank",rel:"noopener noreferrer"}},[t._v("Key-Value 观察编程"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("blockquote",[s("p",[t._v("key-path 表达式语法")]),t._v(" "),s("h4",{attrs:{id:"key-path-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#key-path-expression"}},[t._v("#")]),t._v(" key-path-expression")]),t._v(" "),s("p",[s("em",[t._v("key-path 表达式")]),t._v(" → *"),s("em",[t._v("*")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("类型")]),t._v("可选 "),s("strong",[t._v(".")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("多个 key-path 组件")])]),t._v(" "),s("h4",{attrs:{id:"key-path-components"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#key-path-components"}},[t._v("#")]),t._v(" key-path-components")]),t._v(" "),s("p",[s("em",[t._v("多个 key-path 组件")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("key-path 组件")]),t._v(" | "),s("a",{attrs:{href:""}},[t._v("key-path 组件")]),t._v(" "),s("strong",[t._v(".")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("多个 key-path 组件")])]),t._v(" "),s("h4",{attrs:{id:"key-path-component"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#key-path-component"}},[t._v("#")]),t._v(" key-path-component")]),t._v(" "),s("p",[s("em",[t._v("key-path 组件")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("标识符")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("多个 key-path 后缀")]),t._v("可选 | "),s("a",{attrs:{href:""}},[t._v("多个 key-path 后缀")])]),t._v(" "),s("h4",{attrs:{id:"key-path-postfixes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#key-path-postfixes"}},[t._v("#")]),t._v(" key-path-postfixes")]),t._v(" "),s("h4",{attrs:{id:"多个-key-path-后缀-→-key-path-后缀-多个-key-path-后缀可选-key-path-postfixes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多个-key-path-后缀-→-key-path-后缀-多个-key-path-后缀可选-key-path-postfixes"}},[t._v("#")]),t._v(" "),s("em",[t._v("多个 key-path 后缀")]),t._v(" →  "),s("a",{attrs:{href:""}},[t._v("key-path 后缀")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("多个 key-path 后缀")]),t._v("可选 key-path-postfixes")]),t._v(" "),s("p",[s("em",[t._v("key-path 后缀")]),t._v(" → "),s("strong",[t._v("?")]),t._v(" | "),s("strong",[t._v("!")]),t._v(" | "),s("strong",[t._v("self")]),t._v(" | "),s("strong",[t._v("[")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("函数调用参数表")]),t._v(" "),s("strong",[t._v("]")])])]),t._v(" "),s("h3",{attrs:{id:"选择器表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选择器表达式"}},[t._v("#")]),t._v(" 选择器表达式")]),t._v(" "),s("p",[s("em",[t._v("选择器表达式")]),t._v("可以让你通过选择器来引用在 Objective-C 中方法（method）和属性（property）的 setter 和 getter 方法。")]),t._v(" "),s("blockquote",[s("p",[t._v("#selector(方法名)")]),t._v(" "),s("p",[t._v("#selector(getter: 属性名) #selector(setter: 属性名)")])]),t._v(" "),s("p",[t._v("方法名和属性名必须是存在于 Objective-C 运行时中的方法和属性的引用。选择器表达式的返回值是一个 Selector 类型的实例。例如：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSObject")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token attribute atrule"}},[t._v("@objc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("doSomethingWithInt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("doSomething")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("property "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" property\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" selectorForMethod "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token other-directive property"}},[t._v("#selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" selectorForPropertyGetter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token other-directive property"}},[t._v("#selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("getter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("p",[t._v("当为属性的 getter 创建选择器时，属性名可以是变量属性或者常量属性的引用。但是当为属性的 setter 创建选择器时，属性名只可以是对变量属性的引用。")]),t._v(" "),s("p",[t._v("方法名称可以包含圆括号来进行分组，并使用 as 操作符来区分具有相同方法名但类型不同的方法，例如:")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extension")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeClass")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token attribute atrule"}},[t._v("@objc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("doSomethingWithString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("doSomething")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" anotherSelector "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token other-directive property"}},[t._v("#selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("由于选择器是在编译时创建的，因此编译器可以检查方法或者属性是否存在，以及是否在运行时暴露给了 Objective-C 。")]),t._v(" "),s("blockquote",[s("p",[t._v("注意")]),t._v(" "),s("p",[t._v("虽然方法名或者属性名是个表达式，但是它不会被求值。")])]),t._v(" "),s("p",[t._v("更多关于如何在 Swift 代码中使用选择器来与 Objective-C API 进行交互的信息，请参阅 "),s("a",{attrs:{href:"https://developer.apple.com/documentation/swift/using_objective_c_runtime_features_in_swift",target:"_blank",rel:"noopener noreferrer"}},[t._v("在 Swift 中使用 Objective-C 运行时特性"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("blockquote",[s("p",[t._v("选择器表达式语法")])]),t._v(" "),s("h4",{attrs:{id:"selector-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#selector-expression"}},[t._v("#")]),t._v(" selector-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("选择器表达式")]),t._v(" → __#selector-- "),s("strong",[t._v("(")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("表达式")]),t._v(" "),s("strong",[t._v(")")])]),t._v(" "),s("p",[s("em",[t._v("选择器表达式")]),t._v(" → __#selector-- "),s("strong",[t._v("(")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("getter:表达式")]),t._v(" "),s("strong",[t._v(")")])]),t._v(" "),s("p",[s("em",[t._v("选择器表达式")]),t._v(" → __#selector-- "),s("strong",[t._v("(")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("setter:表达式")]),t._v(" "),s("strong",[t._v(")")])])]),t._v(" "),s("h2",{attrs:{id:"key-path-字符串表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#key-path-字符串表达式"}},[t._v("#")]),t._v(" Key-path 字符串表达式")]),t._v(" "),s("p",[t._v("key-path 字符串表达式可以访问一个引用 Objective-C 属性的字符串，通常在 key-value 编程和 key-value 观察 APIs 中使用。其格式如下：")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("#keyPath")]),t._v(" ( "),s("code",[t._v("属性名")]),t._v(" )")])]),t._v(" "),s("p",[t._v("属性名必须是一个可以在 Objective-C 运行时使用的属性的引用。在编译期，key-path 字符串表达式会被一个字符串字面量替换。例如：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSObject")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token attribute atrule"}},[t._v("@objc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" someProperty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("someProperty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someProperty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" someProperty\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("someProperty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" keyPath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token other-directive property"}},[t._v("#keyPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someProperty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("forKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" keyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印 "12"')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("p",[t._v("当在一个类中使用 key-path 字符串表达式时，可以省略类名，直接使用属性名来访问这个类的某个属性。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extension")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeClass")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("getSomeKeyPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token other-directive property"}},[t._v("#keyPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("someProperty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("keyPath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSomeKeyPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印 "true"')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("由于 key-path 字符串表达式在编译期才创建，编译期可以检查属性是否存在，以及属性是否暴露给 Objective-C 运行时。")]),t._v(" "),s("p",[t._v("关于更多如何使用 key path 与 Objective-C APIs 交互的信息，请参阅 "),s("a",{attrs:{href:"https://developer.apple.com/documentation/swift/using_objective_c_runtime_features_in_swift",target:"_blank",rel:"noopener noreferrer"}},[t._v("在 Swift 中使用 Objective-C 运行时特性"),s("OutboundLink")],1),t._v("。关于更多 key-value 编程和 key-value 观察的信息，请参阅 "),s("a",{attrs:{href:"https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/KeyValueCoding/index.md#//apple-ref/doc/uid/10000107i",target:"_blank",rel:"noopener noreferrer"}},[t._v("Key-Value 编程"),s("OutboundLink")],1),t._v(" 和 "),s("a",{attrs:{href:"https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/KeyValueObserving/KeyValueObserving.md#//apple-ref/doc/uid/10000177i",target:"_blank",rel:"noopener noreferrer"}},[t._v("Key-Value 观察编程"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("blockquote",[s("p",[t._v("注意")]),t._v(" "),s("p",[t._v("尽管"),s("em",[t._v("属性名")]),t._v("是一个表达式，但它永远不会被求值")]),t._v(" "),s("p",[t._v("key-path 字符串表达式语法")]),t._v(" "),s("h4",{attrs:{id:"key-path-string-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#key-path-string-expression"}},[t._v("#")]),t._v(" key-path-string-expression")]),t._v(" "),s("p",[s("em",[t._v("key-path 字符串表达式")]),t._v(" → "),s("strong",[t._v("#keyPath (")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("表达式")]),t._v(" "),s("strong",[t._v(")")])])]),t._v(" "),s("h2",{attrs:{id:"后缀表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后缀表达式"}},[t._v("#")]),t._v(" 后缀表达式")]),t._v(" "),s("p",[s("em",[t._v("后缀表达式")]),t._v("就是在某个表达式的后面运用后缀运算符或其他后缀语法。从语法构成上来看，基本表达式也是后缀表达式。")]),t._v(" "),s("p",[t._v("关于这些运算符的更多信息，请参阅 "),s("a",{attrs:{href:""}},[t._v("基本运算符")]),t._v(" 和 "),s("a",{attrs:{href:""}},[t._v("高级运算符")]),t._v("。")]),t._v(" "),s("p",[t._v("关于 Swift 标准库提供的运算符的更多信息，请参阅 "),s("a",{attrs:{href:"https://developer.apple.com/documentation/swift/operator_declarations",target:"_blank",rel:"noopener noreferrer"}},[t._v("运算符定义"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("blockquote",[s("p",[t._v("后缀表达式语法")])]),t._v(" "),s("h4",{attrs:{id:"postfix-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#postfix-expression"}},[t._v("#")]),t._v(" postfix-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("后缀表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("基本表达式")])]),t._v(" "),s("p",[s("em",[t._v("后缀表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("后缀表达式")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("后缀运算符")])]),t._v(" "),s("p",[s("em",[t._v("后缀表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("函数调用表达式")])]),t._v(" "),s("p",[s("em",[t._v("后缀表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("构造器表达式")])]),t._v(" "),s("p",[s("em",[t._v("后缀表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("显式成员表达式")])]),t._v(" "),s("p",[s("em",[t._v("后缀表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("后缀 self 表达式")])]),t._v(" "),s("p",[s("em",[t._v("后缀表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("dynamicType 表达式")])]),t._v(" "),s("p",[s("em",[t._v("后缀表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("下标表达式")])]),t._v(" "),s("p",[s("em",[t._v("后缀表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("强制取值表达式")])]),t._v(" "),s("p",[s("em",[t._v("后缀表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("可选链表达式")])])]),t._v(" "),s("h3",{attrs:{id:"函数调用表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数调用表达式"}},[t._v("#")]),t._v(" 函数调用表达式")]),t._v(" "),s("p",[s("em",[t._v("函数调用表达式")]),t._v("由函数名和参数列表组成，形式如下：")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("函数名")]),t._v("("),s("code",[t._v("参数 1")]),t._v(", "),s("code",[t._v("参数 2")]),t._v(")")])]),t._v(" "),s("p",[t._v("函数名可以是值为函数类型的任意表达式。")]),t._v(" "),s("p",[t._v("如果函数声明中指定了参数的名字，那么在调用的时候也必须得写出来。这种函数调用表达式具有以下形式：")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("函数名")]),t._v("("),s("code",[t._v("参数名 1")]),t._v(": "),s("code",[t._v("参数 1")]),t._v(", "),s("code",[t._v("参数名 2")]),t._v(": "),s("code",[t._v("参数 2")]),t._v(")")])]),t._v(" "),s("p",[t._v("如果函数的最后一个参数是函数类型，可以在函数调用表达式的尾部（右圆括号之后）加上一个闭包，该闭包会作为函数的最后一个参数。如下两种写法是等价的：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// someFunction 接受整型和闭包的实参")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("someFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token short-argument"}},[t._v("$0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("someFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token short-argument"}},[t._v("$0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// anotherFunction 接受一个整型和两个闭包的实参")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("anotherFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token short-argument"}},[t._v("$0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" g"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("anotherFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token short-argument"}},[t._v("$0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" g"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("如果闭包是该函数的唯一参数，那么圆括号可以省略。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// someFunction 只接受一个闭包参数")]),t._v("\nmyData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("someMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token short-argument"}},[t._v("$0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nmyData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someMethod "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token short-argument"}},[t._v("$0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("如 "),s("a",{attrs:{href:""}},[t._v("特殊名称方法")]),t._v(" 所述，通过声明几种方法中的一种，类、结构体或枚举类型可以为函数调用语法启用语法糖。")]),t._v(" "),s("blockquote",[s("p",[t._v("函数调用表达式语法")]),t._v(" "),s("h4",{attrs:{id:"function-call-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#function-call-expression"}},[t._v("#")]),t._v(" function-call-expression")]),t._v(" "),s("p",[s("em",[t._v("函数调用表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("后缀表达式")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("函数调用参数子句")])]),t._v(" "),s("p",[s("em",[t._v("函数调用表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("后缀表达式")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("函数调用参数子句")]),t._v("可选 "),s("a",{attrs:{href:""}},[t._v("尾随闭包")])]),t._v(" "),s("h4",{attrs:{id:"function-call-argument-clause"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#function-call-argument-clause"}},[t._v("#")]),t._v(" function-call-argument-clause")]),t._v(" "),s("p",[s("em",[t._v("函数调用参数子句")]),t._v(" → "),s("strong",[t._v("(")]),t._v(" "),s("strong",[t._v(")")]),t._v(" | "),s("strong",[t._v("(")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("函数调用参数表")]),t._v(" "),s("strong",[t._v(")")])]),t._v(" "),s("h4",{attrs:{id:"function-call-argument-list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#function-call-argument-list"}},[t._v("#")]),t._v(" function-call-argument-list")]),t._v(" "),s("p",[s("em",[t._v("函数调用参数表")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("函数调用参数")]),t._v(" | "),s("a",{attrs:{href:""}},[t._v("函数调用参数")]),t._v(" "),s("strong",[t._v(",")]),t._v(" "),s("a",{attrs:{href:""}},[s("em",[t._v("函数调用参数表")])])]),t._v(" "),s("h4",{attrs:{id:"function-call-argument"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#function-call-argument"}},[t._v("#")]),t._v(" function-call-argument")]),t._v(" "),s("p",[s("em",[t._v("函数调用参数")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("表达式")]),t._v(" | "),s("a",{attrs:{href:""}},[t._v("标识符")]),t._v(" "),s("strong",[t._v(":")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("表达式")])]),t._v(" "),s("p",[s("em",[t._v("函数调用参数")]),t._v(" → "),s("RouterLink",{attrs:{to:"/pages/4b779c/#运算符"}},[t._v("运算符")]),t._v(" | "),s("a",{attrs:{href:""}},[t._v("标识符")]),t._v(" "),s("strong",[t._v(":")]),t._v(" "),s("RouterLink",{attrs:{to:"/pages/4b779c/#运算符"}},[t._v("运算符")])],1),t._v(" "),s("h4",{attrs:{id:"trailing-closure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#trailing-closure"}},[t._v("#")]),t._v(" trailing-closure")]),t._v(" "),s("p",[s("em",[t._v("尾随闭包")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("闭包表达式")])]),t._v(" "),s("h4",{attrs:{id:"labeled-trailing-closures"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#labeled-trailing-closures"}},[t._v("#")]),t._v(" labeled-trailing-closures")]),t._v(" "),s("p",[s("em",[t._v("标签尾随闭包集")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("标签尾随闭包")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("标签尾随闭包集")]),t._v("可选")]),t._v(" "),s("h4",{attrs:{id:"labeled-trailing-closure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#labeled-trailing-closure"}},[t._v("#")]),t._v(" labeled-trailing-closure")]),t._v(" "),s("p",[s("em",[t._v("标签尾随闭包")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("标识符")]),t._v(" "),s("strong",[t._v(":")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("闭包表达式")])])]),t._v(" "),s("h3",{attrs:{id:"构造器表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造器表达式"}},[t._v("#")]),t._v(" 构造器表达式")]),t._v(" "),s("p",[s("em",[t._v("构造器表达式")]),t._v("用于访问某个类型的构造器，形式如下：")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("表达式")]),t._v(".init("),s("code",[t._v("构造器参数")]),t._v(")")])]),t._v(" "),s("p",[t._v("你可以在函数调用表达式中使用构造器表达式来初始化某个类型的新实例。也可以使用构造器表达式来代理给父类构造器。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeSubClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeSuperClass")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此处为子类构造过程")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("和函数类似，构造器表达式可以作为一个值。 例如：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类型注解是必须的，因为 String 类型有多种构造器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" initializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" oneTwoThree "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" combine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oneTwoThree"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印“123”")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("如果通过名字来指定某个类型，可以不用构造器表达式而直接使用类型的构造器。在其他情况下，你必须使用构造器表达式。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有效")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有效")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" someValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dynamicType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" someValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dynamicType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有效")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("blockquote",[s("p",[t._v("构造器表达式语法")])]),t._v(" "),s("h4",{attrs:{id:"initializer-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#initializer-expression"}},[t._v("#")]),t._v(" initializer-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("构造器表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("后缀表达式")]),t._v(" "),s("strong",[t._v(".")]),t._v(" "),s("strong",[t._v("init")])]),t._v(" "),s("p",[s("em",[t._v("构造器表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("后缀表达式")]),t._v(" "),s("strong",[t._v(".")]),t._v(" "),s("strong",[t._v("init")]),t._v(" "),s("strong",[t._v("(")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("参数名称")]),t._v(" "),s("strong",[t._v(")")])])]),t._v(" "),s("h3",{attrs:{id:"显式成员表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显式成员表达式"}},[t._v("#")]),t._v(" 显式成员表达式")]),t._v(" "),s("p",[s("em",[t._v("显式成员表达式")]),t._v("允许我们访问命名类型、元组或者模块的成员，其形式如下：")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[t._v("表达式`"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("`成员名\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("p",[t._v("命名类型的某个成员在原始实现或者扩展中定义，例如：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeClass")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" someProperty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someProperty "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 访问成员")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("元组的成员会隐式地根据表示它们出现顺序的整数来命名，以 0 开始，例如：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 现在元组 t 为 (20, 20, 30)")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("对于模块的成员来说，只能直接访问顶级声明中的成员。")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("dynamicMemberLookup")]),t._v(" 属性声明的类型包含可以在运行时查找的成员，具体请参阅 "),s("RouterLink",{attrs:{to:"/pages/ce0459/"}},[t._v("属性")]),t._v("。")],1),t._v(" "),s("p",[t._v("为了区分只有参数名有所不同的方法或构造器，在圆括号中写出参数名，参数名后紧跟一个冒号，对于没有参数名的参数，使用下划线代替参数名。而对于重载方法，则需使用类型注解进行区分。例如：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeClass")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("someMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("someMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("overloadedMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("overloadedMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someMethod              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有歧义")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("someMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无歧义")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("overloadedMethod        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有歧义")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("overloadedMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有歧义")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Void")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("overloadedMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无歧义")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("p",[t._v("如果点号（"),s("code",[t._v(".")]),t._v("）出现在行首，它会被视为显式成员表达式的一部分，而不是隐式成员表达式的一部分。例如如下代码所展示的被分为多行的链式方法调用：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("filter "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token short-argument"}},[t._v("$0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token short-argument"}},[t._v("$0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("blockquote",[s("p",[t._v("显式成员表达式语法")])]),t._v(" "),s("h4",{attrs:{id:"explicit-member-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#explicit-member-expression"}},[t._v("#")]),t._v(" explicit-member-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("显式成员表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("后缀表达式")]),t._v(" "),s("strong",[t._v(".")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("十进制数字")])]),t._v(" "),s("p",[s("em",[t._v("显式成员表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("后缀表达式")]),t._v(" "),s("strong",[t._v(".")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("标识符")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("泛型实参子句")]),t._v("可选")]),t._v(" "),s("p",[s("em",[t._v("显式成员表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("后缀表达式")]),t._v(" "),s("strong",[t._v(".")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("标识符")]),t._v(" "),s("strong",[t._v("(")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("参数名称")]),t._v(" "),s("strong",[t._v(")")])])]),t._v(" "),s("h4",{attrs:{id:"argument-names"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#argument-names"}},[t._v("#")]),t._v(" argument-names")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("参数名称")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("参数名")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("参数名称")]),t._v("可选")])]),t._v(" "),s("h4",{attrs:{id:"argument-name"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#argument-name"}},[t._v("#")]),t._v(" argument-name")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("参数名")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("标识符")]),t._v(" "),s("strong",[t._v(":")])])]),t._v(" "),s("h3",{attrs:{id:"后缀-self-表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后缀-self-表达式"}},[t._v("#")]),t._v(" 后缀 self 表达式")]),t._v(" "),s("p",[t._v("后缀 "),s("code",[t._v("self")]),t._v(" 表达式由某个表达式或类型名紧跟 "),s("code",[t._v(".self")]),t._v(" 组成，其形式如下：")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("表达式")]),t._v(".self")]),t._v(" "),s("p",[s("code",[t._v("类型")]),t._v(".self")])]),t._v(" "),s("p",[t._v("第一种形式返回表达式的值。例如："),s("code",[t._v("x.self")]),t._v(" 返回 "),s("code",[t._v("x")]),t._v("。")]),t._v(" "),s("p",[t._v("第二种形式返回相应的类型。我们可以用它来获取某个实例的类型作为一个值来使用。例如，"),s("code",[t._v("SomeClass.self")]),t._v(" 会返回 "),s("code",[t._v("SomeClass")]),t._v(" 类型本身，你可以将其传递给相应函数或者方法作为参数。")]),t._v(" "),s("blockquote",[s("p",[t._v("后缀 self 表达式语法")])]),t._v(" "),s("h4",{attrs:{id:"postfix-self-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#postfix-self-expression"}},[t._v("#")]),t._v(" postfix-self-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("后缀 self 表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("后缀表达式")]),t._v(" "),s("strong",[t._v(".")]),t._v(" "),s("strong",[t._v("self")])])]),t._v(" "),s("h3",{attrs:{id:"下标表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下标表达式"}},[t._v("#")]),t._v(" 下标表达式")]),t._v(" "),s("p",[t._v("可通过"),s("em",[t._v("下标表达式")]),t._v("访问相应的下标，形式如下：")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("表达式")]),t._v("["),s("code",[t._v("索引表达式")]),t._v("]")])]),t._v(" "),s("p",[t._v("要获取下标表达式的值，可将索引表达式作为下标表达式的参数来调用下标 getter。下标 setter 的调用方式与之一样。")]),t._v(" "),s("p",[t._v("关于下标的声明，请参阅 "),s("a",{attrs:{href:""}},[t._v("协议下标声明")]),t._v("。")]),t._v(" "),s("blockquote",[s("p",[t._v("下标表达式语法")])]),t._v(" "),s("h4",{attrs:{id:"subscript-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#subscript-expression"}},[t._v("#")]),t._v(" subscript-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("下标表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("后缀表达式")]),t._v(" "),s("strong",[t._v("[")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("表达式列表")]),t._v(" "),s("strong",[t._v("]")])])]),t._v(" "),s("h3",{attrs:{id:"强制取值表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强制取值表达式"}},[t._v("#")]),t._v(" 强制取值表达式")]),t._v(" "),s("p",[t._v("当你确定可选值不是 "),s("code",[t._v("nil")]),t._v(" 时，可以使用"),s("em",[t._v("强制取值表达式")]),t._v("来强制解包，形式如下：")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("表达式")]),t._v("!")])]),t._v(" "),s("p",[t._v("如果该表达式的值不是 "),s("code",[t._v("nil")]),t._v("，则返回解包后的值。否则，抛出运行时错误。")]),t._v(" "),s("p",[t._v("返回的值可以被修改，无论是修改值本身，还是修改值的成员。例如：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!++")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// x 现在是 1")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" someDictionary "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nsomeDictionary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// someDictionary 现在是 [b: [10, 20], a: [100, 2, 3]]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("blockquote",[s("p",[t._v("强制取值语法")])]),t._v(" "),s("h4",{attrs:{id:"forced-value-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#forced-value-expression"}},[t._v("#")]),t._v(" forced-value-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("强制取值表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("后缀表达式")]),t._v(" "),s("strong",[t._v("!")])])]),t._v(" "),s("h3",{attrs:{id:"可选链表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可选链表达式"}},[t._v("#")]),t._v(" 可选链表达式")]),t._v(" "),s("p",[s("em",[t._v("可选链表达式")]),t._v("提供了一种使用可选值的便捷方法，形式如下：")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("表达式")]),t._v("?")])]),t._v(" "),s("p",[t._v("后缀 "),s("code",[t._v("?")]),t._v(" 运算符会根据表达式生成可选链表达式而不会改变表达式的值。")]),t._v(" "),s("p",[t._v("如果某个后缀表达式包含可选链表达式，那么它的执行过程会比较特殊。如果该可选链表达式的值是 "),s("code",[t._v("nil")]),t._v("，整个后缀表达式会直接返回 "),s("code",[t._v("nil")]),t._v("。如果该可选链表达式的值不是 "),s("code",[t._v("nil")]),t._v("，则返回可选链表达式解包后的值，并将该值用于后缀表达式中剩余的表达式。在这两种情况下，整个后缀表达式的值都会是可选类型。")]),t._v(" "),s("p",[t._v("如果某个后缀表达式中包含了可选链表达式，那么只有最外层的表达式会返回一个可选类型。例如，在下面的例子中，如果 "),s("code",[t._v("c")]),t._v(" 不是 "),s("code",[t._v("nil")]),t._v("，那么它的值会被解包，然后通过 "),s("code",[t._v(".property")]),t._v(" 访问它的属性，接着进一步通过 "),s("code",[t._v(".performAction()")]),t._v(" 调用相应方法。整个 "),s("code",[t._v("c?.property.performAction()")]),t._v(" 表达式返回一个可选类型的值，而不是多重可选类型。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeClass")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bool")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("performAction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("上面的例子跟下面的不使用可选链表达式的例子等价：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bool")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token nil constant"}},[t._v("nil")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" unwrappedC "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" unwrappedC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("performAction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("可选链表达式解包后的值可以被修改，无论是修改值本身，还是修改值的成员。如果可选链表达式的值为 "),s("code",[t._v("nil")]),t._v("，则表达式右侧的赋值操作不会被执行。例如：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("someFunctionWithSideEffects")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 译者注：为了能看出此函数是否被执行，加上了一句打印")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"someFunctionWithSideEffects"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" someDictionary "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n\nsomeDictionary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"not here"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("someFunctionWithSideEffects")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// someFunctionWithSideEffects 不会被执行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// someDictionary 依然是 ["b": [10, 20], "a": [1, 2, 3]]')]),t._v("\n\n\nsomeDictionary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("someFunctionWithSideEffects")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// someFunctionWithSideEffects 被执行并返回 42")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// someDictionary 现在是 ["b": [10, 20], "a": [42, 2, 3]]')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("blockquote",[s("p",[t._v("可选链表达式语法")])]),t._v(" "),s("h4",{attrs:{id:"optional-chaining-expression"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#optional-chaining-expression"}},[t._v("#")]),t._v(" optional-chaining-expression")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("可选链表达式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("后缀表达式")]),t._v(" "),s("strong",[t._v("?")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);