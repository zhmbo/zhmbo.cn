(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{428:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("em",[t._v("模式")]),t._v("代表单个值或者复合值的结构。例如，元组 "),s("code",[t._v("(1, 2)")]),t._v(" 的结构是由逗号分隔的，包含两个元素的列表。因为模式代表一种值的结构，而不是特定的某个值，你可以利用模式来匹配各种各样的值。比如，"),s("code",[t._v("(x, y)")]),t._v(" 可以匹配元组 "),s("code",[t._v("(1, 2)")]),t._v("，以及任何含两个元素的元组。除了利用模式匹配一个值以外，你可以从复合值中提取出部分或全部值，然后分别把各个部分的值和一个常量或变量绑定起来。")]),t._v(" "),s("p",[t._v("Swift 中的模式分为两类：一种能成功匹配任何类型的值，另一种在运行时匹配某个特定值时可能会失败。")]),t._v(" "),s("p",[t._v("第一类模式用于解构简单变量、常量和可选绑定中的值。此类模式包括通配符模式、标识符模式，以及包含前两种模式的值绑定模式和元组模式。你可以为这类模式指定一个类型注解，从而限制它们只能匹配某种特定类型的值。")]),t._v(" "),s("p",[t._v("第二类模式用于全模式匹配，这种情况下你试图匹配的值在运行时可能不存在。此类模式包括枚举用例模式、可选模式、表达式模式和类型转换模式。你在 "),s("code",[t._v("switch")]),t._v(" 语句的 "),s("code",[t._v("case")]),t._v(" 标签中，"),s("code",[t._v("do")]),t._v(" 语句的 "),s("code",[t._v("catch")]),t._v(" 子句中，或者在 "),s("code",[t._v("if")]),t._v("、"),s("code",[t._v("while")]),t._v("、"),s("code",[t._v("guard")]),t._v(" 和 "),s("code",[t._v("for-in")]),t._v(" 语句的 "),s("code",[t._v("case")]),t._v(" 条件句中使用这类模式。")]),t._v(" "),s("blockquote",[s("p",[t._v("模式语法")])]),t._v(" "),s("h3",{attrs:{id:"pattern"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pattern"}},[t._v("#")]),t._v(" pattern")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("模式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("通配符模式")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("类型注解")]),t._v("可选")]),t._v(" "),s("p",[s("em",[t._v("模式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("标识符模式")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("类型注解")]),t._v("可选")]),t._v(" "),s("p",[s("em",[t._v("模式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("值绑定模式")])]),t._v(" "),s("p",[s("em",[t._v("模式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("元组模式")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("类型注解")]),t._v("可选")]),t._v(" "),s("p",[s("em",[t._v("模式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("枚举用例模式")])]),t._v(" "),s("p",[s("em",[t._v("模式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("可选模式")])]),t._v(" "),s("p",[s("em",[t._v("模式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("类型转换模式")])]),t._v(" "),s("p",[s("em",[t._v("模式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("表达式模式")])])]),t._v(" "),s("h2",{attrs:{id:"通配符模式（wildcard-pattern）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通配符模式（wildcard-pattern）"}},[t._v("#")]),t._v(" 通配符模式（Wildcard Pattern）")]),t._v(" "),s("p",[s("em",[t._v("通配符模式")]),t._v("由一个下划线（"),s("code",[t._v("_")]),t._v("）构成，用于匹配并忽略任何值。当你想忽略被匹配的值时可以使用该模式。例如，下面这段代码在闭区间 "),s("code",[t._v("1...3")]),t._v(" 中迭代，每次迭代都忽略该区间的当前值：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token omit keyword"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("blockquote",[s("p",[t._v("通配符模式语法")]),t._v(" "),s("h3",{attrs:{id:"wildcard-pattern"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wildcard-pattern"}},[t._v("#")]),t._v(" wildcard-pattern")]),t._v(" "),s("p",[s("em",[t._v("通配符模式")]),t._v(" → "),s("strong",[t._v("_")])])]),t._v(" "),s("h2",{attrs:{id:"标识符模式（identifier-pattern）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标识符模式（identifier-pattern）"}},[t._v("#")]),t._v(" 标识符模式（Identifier Pattern）")]),t._v(" "),s("p",[s("em",[t._v("标识符模式")]),t._v("匹配任何值，并将匹配的值和一个变量或常量绑定起来。例如，在下面的常量声明中，"),s("code",[t._v("someValue")]),t._v(" 是一个标识符模式，匹配了 "),s("code",[t._v("Int")]),t._v(" 类型的 "),s("code",[t._v("42")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" someValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("当匹配成功时，"),s("code",[t._v("42")]),t._v(" 被绑定（赋值）给常量 "),s("code",[t._v("someValue")]),t._v("。")]),t._v(" "),s("p",[t._v("如果一个变量或常量声明的左边是一个标识符模式，那么这个标识符模式是值绑定模式的子模式。")]),t._v(" "),s("blockquote",[s("p",[t._v("标识符模式语法")]),t._v(" "),s("h3",{attrs:{id:"identifier-pattern"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#identifier-pattern"}},[t._v("#")]),t._v(" identifier-pattern")]),t._v(" "),s("p",[s("em",[t._v("标识符模式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("标识符")])])]),t._v(" "),s("h2",{attrs:{id:"值绑定模式（value-binding-pattern）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#值绑定模式（value-binding-pattern）"}},[t._v("#")]),t._v(" 值绑定模式（Value-Binding Pattern）")]),t._v(" "),s("p",[s("em",[t._v("值绑定模式")]),t._v("把匹配到的值绑定给一个变量或常量。把匹配到的值绑定给常量时，用关键字 "),s("code",[t._v("let")]),t._v("，绑定给变量时，用关键字 "),s("code",[t._v("var")]),t._v("。")]),t._v(" "),s("p",[t._v("在值绑定模式中的标识符模式会把新命名的变量或常量与匹配到的值做绑定。例如，你可以拆开一个元组，然后把每个元素绑定到相应的标识符模式中。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" point "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" point "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 point 中的元素绑定到 x 和 y")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The point is at (')]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("\\(")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(", ")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("\\(")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[t._v("y")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('."')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印“The point is at (3, 2).”")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("在上面这个例子中，"),s("code",[t._v("let")]),t._v(" 会分配到元组模式 "),s("code",[t._v("(x, y)")]),t._v(" 中的各个标识符模式。因此，"),s("code",[t._v("switch")]),t._v(" 语句中 "),s("code",[t._v("case let (x, y):")]),t._v(" 和 "),s("code",[t._v("case (let x, let y):")]),t._v(" 的匹配效果是一样的。")]),t._v(" "),s("blockquote",[s("p",[t._v("值绑定模式语法")]),t._v(" "),s("h3",{attrs:{id:"value-binding-pattern"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#value-binding-pattern"}},[t._v("#")]),t._v(" value-binding-pattern")]),t._v(" "),s("p",[s("em",[t._v("值绑定模式")]),t._v(" → "),s("strong",[t._v("var")]),t._v(" "),s("RouterLink",{attrs:{to:"/pages/55b4cd/"}},[t._v("模式")]),t._v(" | "),s("strong",[t._v("let")]),t._v(" "),s("RouterLink",{attrs:{to:"/pages/55b4cd/"}},[t._v("模式")])],1)]),t._v(" "),s("h2",{attrs:{id:"元组模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元组模式"}},[t._v("#")]),t._v(" 元组模式")]),t._v(" "),s("p",[s("em",[t._v("元组模式")]),t._v("是由逗号分隔的，具有零个或多个模式的列表，并由一对圆括号括起来。元组模式匹配相应元组类型的值。")]),t._v(" "),s("p",[t._v("你可以使用类型注解去限制一个元组模式能匹配哪种元组类型。例如，在常量声明 "),s("code",[t._v("let (x, y): (Int, Int) = (1, 2)")]),t._v(" 中的元组模式 "),s("code",[t._v("(x, y): (Int, Int)")]),t._v(" 只匹配两个元素都是 "),s("code",[t._v("Int")]),t._v(" 类型的元组。")]),t._v(" "),s("p",[t._v("当元组模式被用于 "),s("code",[t._v("for-in")]),t._v(" 语句或者变量和常量声明时，它仅可以包含通配符模式、标识符模式、可选模式或者其他包含这些模式的元组模式。比如下面这段代码就不正确，因为 "),s("code",[t._v("(x, 0)")]),t._v(" 中的元素 "),s("code",[t._v("0")]),t._v(" 是一个表达式模式：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" points "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 下面的代码是错误的")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" points "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ... */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("只包含一个元素的元组模式的圆括号没有效果，模式只匹配这个单个元素的类型。举例来说，下面的语句是等效的：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a: Int = 2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a: Int = 2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a: Int = 2")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("blockquote",[s("p",[t._v("元组模式语法")]),t._v(" "),s("h3",{attrs:{id:"tuple-pattern"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tuple-pattern"}},[t._v("#")]),t._v(" tuple-pattern")]),t._v(" "),s("p",[s("em",[t._v("元组模式")]),t._v(" → "),s("strong",[t._v("(")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("元组模式元素列表")]),t._v("可选 "),s("strong",[t._v(")")])])]),t._v(" "),s("h3",{attrs:{id:"tuple-pattern-element-list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tuple-pattern-element-list"}},[t._v("#")]),t._v(" tuple-pattern-element-list")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("元组模式元素列表")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("元组模式元素")]),t._v(" | "),s("a",{attrs:{href:""}},[t._v("元组模式元素")]),t._v(" "),s("strong",[t._v(",")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("元组模式元素列表")])]),t._v(" "),s("h3",{attrs:{id:"tuple-pattern-element"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tuple-pattern-element"}},[t._v("#")]),t._v(" tuple-pattern-element")]),t._v(" "),s("p",[s("em",[t._v("元组模式元素")]),t._v(" → "),s("RouterLink",{attrs:{to:"/pages/55b4cd/"}},[t._v("模式")])],1)]),t._v(" "),s("h2",{attrs:{id:"枚举用例模式（enumeration-case-pattern）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#枚举用例模式（enumeration-case-pattern）"}},[t._v("#")]),t._v(" 枚举用例模式（Enumeration Case Pattern）")]),t._v(" "),s("p",[s("em",[t._v("枚举用例模式")]),t._v("匹配现有的某个枚举类型的某个用例。枚举用例模式出现在 "),s("code",[t._v("switch")]),t._v(" 语句中的 "),s("code",[t._v("case")]),t._v(" 标签中，以及 "),s("code",[t._v("if")]),t._v("、"),s("code",[t._v("while")]),t._v("、"),s("code",[t._v("guard")]),t._v(" 和 "),s("code",[t._v("for-in")]),t._v(" 语句的 "),s("code",[t._v("case")]),t._v(" 条件中。")]),t._v(" "),s("p",[t._v("如果你准备匹配的枚举用例有任何关联的值，则相应的枚举用例模式必须指定一个包含每个关联值元素的元组模式。关于使用 "),s("code",[t._v("switch")]),t._v(" 语句来匹配包含关联值的枚举用例的例子，请参阅 "),s("a",{attrs:{href:""}},[t._v("关联值")]),t._v("。")]),t._v(" "),s("p",[t._v("枚举用例模式同样会匹配那些被包装成可选值的用例。简化的语法能将可选模式过滤掉。注意，由于 "),s("code",[t._v("Optional")]),t._v(" 是枚举实现的，"),s("code",[t._v(".none")]),t._v(" 和 "),s("code",[t._v(".some")]),t._v(" 都会作为枚举类型的用例出现在 switch 中。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeEnum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("right")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeEnum")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Turn left"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("right")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Turn right"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token nil constant"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Keep going straight"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印 "Turn left"')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("blockquote",[s("p",[t._v("枚举用例模式语法")]),t._v(" "),s("h3",{attrs:{id:"enum-case-pattern"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enum-case-pattern"}},[t._v("#")]),t._v(" enum-case-pattern")]),t._v(" "),s("p",[s("em",[t._v("枚举用例模式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("类型标识")]),t._v("可选 "),s("strong",[t._v(".")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("枚举用例名")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("元组模式")]),t._v("可选")])]),t._v(" "),s("h2",{attrs:{id:"可选模式（optional-pattern）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可选模式（optional-pattern）"}},[t._v("#")]),t._v(" 可选模式（Optional Pattern）")]),t._v(" "),s("p",[s("em",[t._v("可选模式")]),t._v("匹配包装在一个 "),s("code",[t._v("Optional(Wrapped)")]),t._v(" 或者 "),s("code",[t._v("ExplicitlyUnwrappedOptional(Wrapped)")]),t._v(" 枚举中的 "),s("code",[t._v("Some(Wrapped)")]),t._v(" 用例中的值。可选模式由一个标识符模式和紧随其后的一个问号组成，可以像枚举用例模式一样使用。")]),t._v(" "),s("p",[t._v("由于可选模式是 "),s("code",[t._v("Optional")]),t._v(" 和 "),s("code",[t._v("ImplicitlyUnwrappedOptional")]),t._v(" 枚举用例模式的语法糖，下面两种写法是等效的：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" someOptional"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用枚举用例模式匹配")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Some")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" someOptional "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用可选模式匹配")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" someOptional "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[t._v("可选模式为 "),s("code",[t._v("for-in")]),t._v(" 语句提供了一种迭代数组的简便方式，只为数组中非 "),s("code",[t._v("nil")]),t._v(" 的元素执行循环体。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arrayOfOptionalInts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token nil constant"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token nil constant"}},[t._v("nil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只匹配非 nil 的元素")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" number"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" arrayOfOptinalInts "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found a ')]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("\\(")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Found a 2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Found a 3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Found a 5")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("blockquote",[s("p",[t._v("可选模式语法")]),t._v(" "),s("h3",{attrs:{id:"optional-pattern"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#optional-pattern"}},[t._v("#")]),t._v(" optional-pattern")]),t._v(" "),s("p",[s("em",[t._v("可选模式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("标识符模式")]),t._v(" "),s("strong",[t._v("?")])])]),t._v(" "),s("h2",{attrs:{id:"类型转换模式（type-casting-patterns）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型转换模式（type-casting-patterns）"}},[t._v("#")]),t._v(" 类型转换模式（Type-Casting Patterns）")]),t._v(" "),s("p",[t._v("有两种类型转换模式，"),s("code",[t._v("is")]),t._v(" 模式和 "),s("code",[t._v("as")]),t._v(" 模式。"),s("code",[t._v("is")]),t._v(" 模式只出现在 "),s("code",[t._v("switch")]),t._v(" 语句中的 "),s("code",[t._v("case")]),t._v(" 标签中。"),s("code",[t._v("is")]),t._v(" 模式和 "),s("code",[t._v("as")]),t._v(" 模式形式如下：")]),t._v(" "),s("blockquote",[s("p",[t._v("is "),s("code",[t._v("类型")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("模式` as `类型\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("p",[s("code",[t._v("is")]),t._v(" 模式仅当一个值的类型在运行时和 "),s("code",[t._v("is")]),t._v(" 模式右边的指定类型一致，或者是其子类的情况下，才会匹配这个值。"),s("code",[t._v("is")]),t._v(" 模式和 "),s("code",[t._v("is")]),t._v(" 运算符有相似表现，它们都进行类型转换，但是 "),s("code",[t._v("is")]),t._v(" 模式没有返回类型。")]),t._v(" "),s("p",[s("code",[t._v("as")]),t._v(" 模式仅当一个值的类型在运行时和 "),s("code",[t._v("as")]),t._v(" 模式右边的指定类型一致，或者是其子类的情况下，才会匹配这个值。如果匹配成功，被匹配的值的类型被转换成 "),s("code",[t._v("as")]),t._v(" 模式右边指定的类型。")]),t._v(" "),s("p",[t._v("关于使用 "),s("code",[t._v("switch")]),t._v(" 语句配合 "),s("code",[t._v("is")]),t._v(" 模式和 "),s("code",[t._v("as")]),t._v(" 模式来匹配值的例子，请参阅 "),s("a",{attrs:{href:""}},[t._v("Any 和 AnyObject 的类型转换")]),t._v("。")]),t._v(" "),s("blockquote",[s("p",[t._v("类型转换模式语法")]),t._v(" "),s("h3",{attrs:{id:"type-casting-pattern"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type-casting-pattern"}},[t._v("#")]),t._v(" type-casting-pattern")]),t._v(" "),s("p",[s("em",[t._v("类型转换模式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("is 模式")]),t._v(" | "),s("a",{attrs:{href:""}},[t._v("as 模式")])]),t._v(" "),s("h3",{attrs:{id:"is-pattern"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#is-pattern"}},[t._v("#")]),t._v(" is-pattern")]),t._v(" "),s("p",[s("em",[t._v("is 模式")]),t._v(" → "),s("strong",[t._v("is")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("类型")])]),t._v(" "),s("h3",{attrs:{id:"as-pattern"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#as-pattern"}},[t._v("#")]),t._v(" as-pattern")]),t._v(" "),s("p",[s("em",[t._v("as 模式")]),t._v(" → "),s("RouterLink",{attrs:{to:"/pages/55b4cd/"}},[t._v("模式")]),t._v(" "),s("strong",[t._v("as")]),t._v(" "),s("a",{attrs:{href:""}},[t._v("类型")])],1)]),t._v(" "),s("h2",{attrs:{id:"表达式模式（expression-pattern）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表达式模式（expression-pattern）"}},[t._v("#")]),t._v(" 表达式模式（Expression Pattern）")]),t._v(" "),s("p",[s("em",[t._v("表达式模式")]),t._v("代表表达式的值。表达式模式只出现在 "),s("code",[t._v("switch")]),t._v(" 语句中的 "),s("code",[t._v("case")]),t._v(" 标签中。")]),t._v(" "),s("p",[t._v("表达式模式代表的表达式会使用 Swift 标准库中的 "),s("code",[t._v("~=")]),t._v(" 运算符与输入表达式的值进行比较。如果 "),s("code",[t._v("~=")]),t._v(" 运算符返回 "),s("code",[t._v("true")]),t._v("，则匹配成功。默认情况下，"),s("code",[t._v("~=")]),t._v(" 运算符使用 "),s("code",[t._v("==")]),t._v(" 运算符来比较两个相同类型的值。它也可以将一个整型数值与一个 "),s("code",[t._v("Range")]),t._v(" 实例中的一段整数区间做匹配，正如下面这个例子所示：")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" point "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" point "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(0, 0) is at the origin."')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(')]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("\\(")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[t._v("point"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")])]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(", ")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("\\(")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[t._v("point"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(' is near the origin."')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The point is at (')]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("\\(")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[t._v("point"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")])]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(", ")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("\\(")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[t._v("point"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('."')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印“(1, 2) is near the origin.”")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[t._v("你可以重载 "),s("code",[t._v("~=")]),t._v(" 运算符来提供自定义的表达式匹配行为。比如你可以重写上面的例子，将 "),s("code",[t._v("point")]),t._v(" 表达式与字符串形式表示的点进行比较。")]),t._v(" "),s("div",{staticClass:"language-swift line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-swift"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重载 ~= 运算符对字符串和整数进行比较")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" pattern "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("\\(")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" point "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(0, 0) is at the origin."')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The point is at (')]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("\\(")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[t._v("point"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")])]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(", ")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("\\(")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[t._v("point"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")])]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('."')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印“The point is at (1, 2).”")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("blockquote",[s("p",[t._v("表达式模式语法")]),t._v(" "),s("h3",{attrs:{id:"expression-pattern"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#expression-pattern"}},[t._v("#")]),t._v(" expression-pattern")]),t._v(" "),s("p",[s("em",[t._v("表达式模式")]),t._v(" → "),s("a",{attrs:{href:""}},[t._v("表达式")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);